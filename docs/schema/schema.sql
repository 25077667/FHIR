-------------------------------------------------------------------------------
-- (C) Copyright IBM Corp. 2016, 2019
--
-- SPDX-License-Identifier: Apache-2.0
-------------------------------------------------------------------------------
-- IBM FHIR Server - Schema Output
-- Generated at 2019-11-06T18:40:44.759Z
-------------------------------------------------------------------------------

CREATE SCHEMA FHIRAPP;

CREATE SCHEMA FHIRADMIN;

CREATE TABLESPACE FHIR_TS MANAGED BY AUTOMATIC STORAGE EXTENTSIZE 128K;

CREATE SEQUENCE FHIRADMIN.TENANT_SEQUENCE AS BIGINT START WITH 1 CACHE 1000 NO CYCLE;

CREATE TABLE FHIRADMIN.TENANTS(MT_ID INT NOT NULL, TENANT_NAME VARCHAR(36 OCTETS) NOT NULL, TENANT_STATUS VARCHAR(16 OCTETS) NOT NULL, CONSTRAINT TENANT_PK PRIMARY KEY (MT_ID)) IN FHIR_TS;

CREATE UNIQUE INDEX FHIRADMIN.IDX_TENANT_TN ON FHIRADMIN.TENANTS(TENANT_NAME);

CREATE TABLE FHIRADMIN.TENANT_KEYS(TENANT_KEY_ID INT NOT NULL, MT_ID INT NOT NULL, TENANT_SALT VARCHAR(44 OCTETS) NOT NULL, TENANT_HASH VARBINARY(32) NOT NULL, CONSTRAINT TENANT_KEY_PK PRIMARY KEY (TENANT_KEY_ID)) IN FHIR_TS;

CREATE UNIQUE INDEX FHIRADMIN.IDX_TENANT_KEY_TIDH ON FHIRADMIN.TENANT_KEYS(MT_ID,TENANT_HASH);

CREATE UNIQUE INDEX FHIRADMIN.IDX_TENANT_KEY_SALT ON FHIRADMIN.TENANT_KEYS(TENANT_SALT);

ALTER TABLE FHIRADMIN.TENANT_KEYS ADD CONSTRAINT FK_TENANT_KEYS_TNID FOREIGN KEY(MT_ID) REFERENCES FHIRADMIN.TENANTS;

CREATE VARIABLE FHIRADMIN.SV_TENANT_ID INT DEFAULT NULL;

CREATE SEQUENCE FHIRAPP.FHIR_SEQUENCE AS BIGINT START WITH 1 CACHE 1000 NO CYCLE;

CREATE SEQUENCE FHIRAPP.FHIR_REF_SEQUENCE AS BIGINT START WITH 1 CACHE 1000 NO CYCLE;

CREATE TABLE FHIRAPP.PARAMETER_NAMES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, PARAMETER_NAME VARCHAR(255 OCTETS) NOT NULL, CONSTRAINT PARAMETER_NAMES_PK PRIMARY KEY (MT_ID, PARAMETER_NAME_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.IDX_PARAMETER_NAME_RTNM ON FHIRAPP.PARAMETER_NAMES(MT_ID,PARAMETER_NAME) INCLUDE (PARAMETER_NAME_ID);

CREATE PERMISSION FHIRAPP.PARAMETER_NAMES_TENANT                      ON FHIRAPP.PARAMETER_NAMES          FOR ROWS WHERE FHIRAPP.PARAMETER_NAMES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.PARAMETER_NAMES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.CODE_SYSTEMS(MT_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, CODE_SYSTEM_NAME VARCHAR(255 OCTETS) NOT NULL, CONSTRAINT CODE_SYSTEMS_PK PRIMARY KEY (MT_ID, CODE_SYSTEM_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.IDX_CODE_SYSTEM_CINM ON FHIRAPP.CODE_SYSTEMS(MT_ID,CODE_SYSTEM_NAME);

CREATE PERMISSION FHIRAPP.CODE_SYSTEMS_TENANT                      ON FHIRAPP.CODE_SYSTEMS          FOR ROWS WHERE FHIRAPP.CODE_SYSTEMS.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.CODE_SYSTEMS ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.RESOURCE_TYPES(MT_ID INT NOT NULL, RESOURCE_TYPE_ID INT NOT NULL, RESOURCE_TYPE VARCHAR(64 OCTETS) NOT NULL, CONSTRAINT RESOURCE_TYPES_PK PRIMARY KEY (MT_ID, RESOURCE_TYPE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.IDX_unq_resource_types_rt ON FHIRAPP.RESOURCE_TYPES(MT_ID,RESOURCE_TYPE);

CREATE PERMISSION FHIRAPP.RESOURCE_TYPES_TENANT                      ON FHIRAPP.RESOURCE_TYPES          FOR ROWS WHERE FHIRAPP.RESOURCE_TYPES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.RESOURCE_TYPES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, RESOURCE_TYPE_ID INT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CONSTRAINT LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.UNQ_LOGICAL_RESOURCES ON FHIRAPP.LOGICAL_RESOURCES(MT_ID,RESOURCE_TYPE_ID,LOGICAL_ID);

ALTER TABLE FHIRAPP.LOGICAL_RESOURCES ADD CONSTRAINT FK_LOGICAL_RESOURCES_RTID FOREIGN KEY(MT_ID,RESOURCE_TYPE_ID) REFERENCES FHIRAPP.RESOURCE_TYPES;

CREATE PERMISSION FHIRAPP.LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(1024 OCTETS), X VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_TOKEN_VALUES_RPS ON FHIRAPP.TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

CREATE INDEX FHIRAPP.IDX_TOKEN_VALUES_PNCSCV ON FHIRAPP.TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.TOKEN_VALUES ADD CONSTRAINT FK_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

ALTER TABLE FHIRAPP.TOKEN_VALUES ADD CONSTRAINT FK_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.TOKEN_VALUES ADD CONSTRAINT FK_TOKEN_VALUES_LR FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.TOKEN_VALUES_TENANT                      ON FHIRAPP.TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_STR_VALUES_RPS ON FHIRAPP.STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

CREATE INDEX FHIRAPP.IDX_STR_VALUES_PLR ON FHIRAPP.STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_STR_VALUES_RPL ON FHIRAPP.STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

CREATE INDEX FHIRAPP.IDX_STR_VALUES_PSR ON FHIRAPP.STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.STR_VALUES ADD CONSTRAINT FK_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.STR_VALUES ADD CONSTRAINT FK_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.STR_VALUES_TENANT                      ON FHIRAPP.STR_VALUES          FOR ROWS WHERE FHIRAPP.STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_DATE_VALUES_PSER ON FHIRAPP.DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_DATE_VALUES_RPSE ON FHIRAPP.DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

CREATE INDEX FHIRAPP.IDX_DATE_VALUES_PVR ON FHIRAPP.DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_DATE_VALUES_PESR ON FHIRAPP.DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_DATE_VALUES_RPV ON FHIRAPP.DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

ALTER TABLE FHIRAPP.DATE_VALUES ADD CONSTRAINT FK_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.DATE_VALUES ADD CONSTRAINT FK_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.DATE_VALUES_TENANT                      ON FHIRAPP.DATE_VALUES          FOR ROWS WHERE FHIRAPP.DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.APPOINTMENT_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT APPOINTMENT_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.APPOINTMENT_LOGICAL_RESOURCES ADD CONSTRAINT FK_APPOINTMENT_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.APPOINTMENT_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.APPOINTMENT_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.APPOINTMENT_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.APPOINTMENT_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.APPOINTMENT_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT APPOINTMENT_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.APPOINTMENT_RESOURCES_PRF_IN1 ON FHIRAPP.APPOINTMENT_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.APPOINTMENT_RESOURCES_TENANT                      ON FHIRAPP.APPOINTMENT_RESOURCES          FOR ROWS WHERE FHIRAPP.APPOINTMENT_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.APPOINTMENT_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.APPOINTMENT_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_APPOINTMENT_STR_VALUES_PLR ON FHIRAPP.APPOINTMENT_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_APPOINTMENT_STR_VALUES_RPS ON FHIRAPP.APPOINTMENT_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

CREATE INDEX FHIRAPP.IDX_APPOINTMENT_STR_VALUES_RPL ON FHIRAPP.APPOINTMENT_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

CREATE INDEX FHIRAPP.IDX_APPOINTMENT_STR_VALUES_PSR ON FHIRAPP.APPOINTMENT_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.APPOINTMENT_STR_VALUES ADD CONSTRAINT FK_APPOINTMENT_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.APPOINTMENT_STR_VALUES ADD CONSTRAINT FK_APPOINTMENT_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.APPOINTMENT_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.APPOINTMENT_STR_VALUES_TENANT                      ON FHIRAPP.APPOINTMENT_STR_VALUES          FOR ROWS WHERE FHIRAPP.APPOINTMENT_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.APPOINTMENT_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.APPOINTMENT_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_APPOINTMENT_TOKEN_VALUES_RPS ON FHIRAPP.APPOINTMENT_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

CREATE INDEX FHIRAPP.IDX_APPOINTMENT_TOKEN_VALUES_PNCSCV ON FHIRAPP.APPOINTMENT_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.APPOINTMENT_TOKEN_VALUES ADD CONSTRAINT FK_APPOINTMENT_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.APPOINTMENT_TOKEN_VALUES ADD CONSTRAINT FK_APPOINTMENT_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

ALTER TABLE FHIRAPP.APPOINTMENT_TOKEN_VALUES ADD CONSTRAINT FK_APPOINTMENT_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.APPOINTMENT_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.APPOINTMENT_TOKEN_VALUES_TENANT                      ON FHIRAPP.APPOINTMENT_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.APPOINTMENT_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.APPOINTMENT_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.APPOINTMENT_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_APPOINTMENT_DATE_VALUES_PSER ON FHIRAPP.APPOINTMENT_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_APPOINTMENT_DATE_VALUES_RPSE ON FHIRAPP.APPOINTMENT_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

CREATE INDEX FHIRAPP.IDX_APPOINTMENT_DATE_VALUES_RPV ON FHIRAPP.APPOINTMENT_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

CREATE INDEX FHIRAPP.IDX_APPOINTMENT_DATE_VALUES_PESR ON FHIRAPP.APPOINTMENT_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_APPOINTMENT_DATE_VALUES_PVR ON FHIRAPP.APPOINTMENT_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.APPOINTMENT_DATE_VALUES ADD CONSTRAINT FK_APPOINTMENT_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.APPOINTMENT_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.APPOINTMENT_DATE_VALUES ADD CONSTRAINT FK_APPOINTMENT_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.APPOINTMENT_DATE_VALUES_TENANT                      ON FHIRAPP.APPOINTMENT_DATE_VALUES          FOR ROWS WHERE FHIRAPP.APPOINTMENT_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.APPOINTMENT_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.APPOINTMENT_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_APPOINTMENT_NUMBER_VALUES_RPS ON FHIRAPP.APPOINTMENT_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

CREATE INDEX FHIRAPP.IDX_APPOINTMENT_NUMBER_VALUES_PNNV ON FHIRAPP.APPOINTMENT_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.APPOINTMENT_NUMBER_VALUES ADD CONSTRAINT FK_APPOINTMENT_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.APPOINTMENT_NUMBER_VALUES ADD CONSTRAINT FK_APPOINTMENT_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.APPOINTMENT_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.APPOINTMENT_NUMBER_VALUES_TENANT                      ON FHIRAPP.APPOINTMENT_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.APPOINTMENT_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.APPOINTMENT_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.APPOINTMENT_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_APPOINTMENT_LATLNG_VALUES_PNNLV ON FHIRAPP.APPOINTMENT_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_APPOINTMENT_LATLNG_VALUES_RPLNG ON FHIRAPP.APPOINTMENT_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_APPOINTMENT_LATLNG_VALUES_RPLAT ON FHIRAPP.APPOINTMENT_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_APPOINTMENT_LATLNG_VALUES_PNNHV ON FHIRAPP.APPOINTMENT_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.APPOINTMENT_LATLNG_VALUES ADD CONSTRAINT FK_APPOINTMENT_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.APPOINTMENT_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.APPOINTMENT_LATLNG_VALUES ADD CONSTRAINT FK_APPOINTMENT_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.APPOINTMENT_LATLNG_VALUES_TENANT                      ON FHIRAPP.APPOINTMENT_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.APPOINTMENT_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.APPOINTMENT_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.APPOINTMENT_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_APPOINTMENT_QUANTITY_VALUES_PNNV ON FHIRAPP.APPOINTMENT_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_APPOINTMENT_QUANTITY_VALUES_PCHLSR ON FHIRAPP.APPOINTMENT_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_APPOINTMENT_QUANTITY_VALUES_RPCLHS ON FHIRAPP.APPOINTMENT_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_APPOINTMENT_QUANTITY_VALUES_RPCHLS ON FHIRAPP.APPOINTMENT_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_APPOINTMENT_QUANTITY_VALUES_PCLHSR ON FHIRAPP.APPOINTMENT_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_APPOINTMENT_QUANTITY_VALUES_RPS ON FHIRAPP.APPOINTMENT_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

ALTER TABLE FHIRAPP.APPOINTMENT_QUANTITY_VALUES ADD CONSTRAINT FK_APPOINTMENT_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.APPOINTMENT_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.APPOINTMENT_QUANTITY_VALUES ADD CONSTRAINT FK_APPOINTMENT_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.APPOINTMENT_QUANTITY_VALUES_TENANT                      ON FHIRAPP.APPOINTMENT_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.APPOINTMENT_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.APPOINTMENT_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.ACCOUNT_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT ACCOUNT_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.ACCOUNT_LOGICAL_RESOURCES ADD CONSTRAINT FK_ACCOUNT_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.ACCOUNT_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.ACCOUNT_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.ACCOUNT_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.ACCOUNT_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.ACCOUNT_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT ACCOUNT_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.ACCOUNT_RESOURCES_PRF_IN1 ON FHIRAPP.ACCOUNT_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.ACCOUNT_RESOURCES_TENANT                      ON FHIRAPP.ACCOUNT_RESOURCES          FOR ROWS WHERE FHIRAPP.ACCOUNT_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.ACCOUNT_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.ACCOUNT_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_ACCOUNT_STR_VALUES_PSR ON FHIRAPP.ACCOUNT_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_ACCOUNT_STR_VALUES_RPL ON FHIRAPP.ACCOUNT_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

CREATE INDEX FHIRAPP.IDX_ACCOUNT_STR_VALUES_RPS ON FHIRAPP.ACCOUNT_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

CREATE INDEX FHIRAPP.IDX_ACCOUNT_STR_VALUES_PLR ON FHIRAPP.ACCOUNT_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.ACCOUNT_STR_VALUES ADD CONSTRAINT FK_ACCOUNT_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.ACCOUNT_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.ACCOUNT_STR_VALUES ADD CONSTRAINT FK_ACCOUNT_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.ACCOUNT_STR_VALUES_TENANT                      ON FHIRAPP.ACCOUNT_STR_VALUES          FOR ROWS WHERE FHIRAPP.ACCOUNT_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.ACCOUNT_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.ACCOUNT_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_ACCOUNT_TOKEN_VALUES_PNCSCV ON FHIRAPP.ACCOUNT_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_ACCOUNT_TOKEN_VALUES_RPS ON FHIRAPP.ACCOUNT_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

ALTER TABLE FHIRAPP.ACCOUNT_TOKEN_VALUES ADD CONSTRAINT FK_ACCOUNT_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

ALTER TABLE FHIRAPP.ACCOUNT_TOKEN_VALUES ADD CONSTRAINT FK_ACCOUNT_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.ACCOUNT_TOKEN_VALUES ADD CONSTRAINT FK_ACCOUNT_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.ACCOUNT_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.ACCOUNT_TOKEN_VALUES_TENANT                      ON FHIRAPP.ACCOUNT_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.ACCOUNT_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.ACCOUNT_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.ACCOUNT_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_ACCOUNT_DATE_VALUES_PVR ON FHIRAPP.ACCOUNT_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_ACCOUNT_DATE_VALUES_PESR ON FHIRAPP.ACCOUNT_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_ACCOUNT_DATE_VALUES_RPV ON FHIRAPP.ACCOUNT_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

CREATE INDEX FHIRAPP.IDX_ACCOUNT_DATE_VALUES_PSER ON FHIRAPP.ACCOUNT_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_ACCOUNT_DATE_VALUES_RPSE ON FHIRAPP.ACCOUNT_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

ALTER TABLE FHIRAPP.ACCOUNT_DATE_VALUES ADD CONSTRAINT FK_ACCOUNT_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.ACCOUNT_DATE_VALUES ADD CONSTRAINT FK_ACCOUNT_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.ACCOUNT_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.ACCOUNT_DATE_VALUES_TENANT                      ON FHIRAPP.ACCOUNT_DATE_VALUES          FOR ROWS WHERE FHIRAPP.ACCOUNT_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.ACCOUNT_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.ACCOUNT_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_ACCOUNT_NUMBER_VALUES_RPS ON FHIRAPP.ACCOUNT_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

CREATE INDEX FHIRAPP.IDX_ACCOUNT_NUMBER_VALUES_PNNV ON FHIRAPP.ACCOUNT_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.ACCOUNT_NUMBER_VALUES ADD CONSTRAINT FK_ACCOUNT_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.ACCOUNT_NUMBER_VALUES ADD CONSTRAINT FK_ACCOUNT_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.ACCOUNT_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.ACCOUNT_NUMBER_VALUES_TENANT                      ON FHIRAPP.ACCOUNT_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.ACCOUNT_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.ACCOUNT_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.ACCOUNT_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_ACCOUNT_LATLNG_VALUES_RPLAT ON FHIRAPP.ACCOUNT_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_ACCOUNT_LATLNG_VALUES_RPLNG ON FHIRAPP.ACCOUNT_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_ACCOUNT_LATLNG_VALUES_PNNHV ON FHIRAPP.ACCOUNT_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_ACCOUNT_LATLNG_VALUES_PNNLV ON FHIRAPP.ACCOUNT_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.ACCOUNT_LATLNG_VALUES ADD CONSTRAINT FK_ACCOUNT_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.ACCOUNT_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.ACCOUNT_LATLNG_VALUES ADD CONSTRAINT FK_ACCOUNT_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.ACCOUNT_LATLNG_VALUES_TENANT                      ON FHIRAPP.ACCOUNT_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.ACCOUNT_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.ACCOUNT_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.ACCOUNT_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_ACCOUNT_QUANTITY_VALUES_PNNV ON FHIRAPP.ACCOUNT_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_ACCOUNT_QUANTITY_VALUES_RPCHLS ON FHIRAPP.ACCOUNT_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_ACCOUNT_QUANTITY_VALUES_RPS ON FHIRAPP.ACCOUNT_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_ACCOUNT_QUANTITY_VALUES_PCHLSR ON FHIRAPP.ACCOUNT_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_ACCOUNT_QUANTITY_VALUES_PCLHSR ON FHIRAPP.ACCOUNT_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_ACCOUNT_QUANTITY_VALUES_RPCLHS ON FHIRAPP.ACCOUNT_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

ALTER TABLE FHIRAPP.ACCOUNT_QUANTITY_VALUES ADD CONSTRAINT FK_ACCOUNT_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.ACCOUNT_QUANTITY_VALUES ADD CONSTRAINT FK_ACCOUNT_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.ACCOUNT_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.ACCOUNT_QUANTITY_VALUES_TENANT                      ON FHIRAPP.ACCOUNT_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.ACCOUNT_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.ACCOUNT_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.DOMAINRESOURCE_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT DOMAINRESOURCE_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.DOMAINRESOURCE_LOGICAL_RESOURCES ADD CONSTRAINT FK_DOMAINRESOURCE_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.DOMAINRESOURCE_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.DOMAINRESOURCE_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.DOMAINRESOURCE_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.DOMAINRESOURCE_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.DOMAINRESOURCE_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT DOMAINRESOURCE_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.DOMAINRESOURCE_RESOURCES_PRF_IN1 ON FHIRAPP.DOMAINRESOURCE_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.DOMAINRESOURCE_RESOURCES_TENANT                      ON FHIRAPP.DOMAINRESOURCE_RESOURCES          FOR ROWS WHERE FHIRAPP.DOMAINRESOURCE_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.DOMAINRESOURCE_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.DOMAINRESOURCE_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_DOMAINRESOURCE_STR_VALUES_PSR ON FHIRAPP.DOMAINRESOURCE_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_DOMAINRESOURCE_STR_VALUES_RPL ON FHIRAPP.DOMAINRESOURCE_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

CREATE INDEX FHIRAPP.IDX_DOMAINRESOURCE_STR_VALUES_RPS ON FHIRAPP.DOMAINRESOURCE_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

CREATE INDEX FHIRAPP.IDX_DOMAINRESOURCE_STR_VALUES_PLR ON FHIRAPP.DOMAINRESOURCE_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.DOMAINRESOURCE_STR_VALUES ADD CONSTRAINT FK_DOMAINRESOURCE_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.DOMAINRESOURCE_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.DOMAINRESOURCE_STR_VALUES ADD CONSTRAINT FK_DOMAINRESOURCE_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.DOMAINRESOURCE_STR_VALUES_TENANT                      ON FHIRAPP.DOMAINRESOURCE_STR_VALUES          FOR ROWS WHERE FHIRAPP.DOMAINRESOURCE_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.DOMAINRESOURCE_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.DOMAINRESOURCE_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_DOMAINRESOURCE_TOKEN_VALUES_RPS ON FHIRAPP.DOMAINRESOURCE_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

CREATE INDEX FHIRAPP.IDX_DOMAINRESOURCE_TOKEN_VALUES_PNCSCV ON FHIRAPP.DOMAINRESOURCE_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.DOMAINRESOURCE_TOKEN_VALUES ADD CONSTRAINT FK_DOMAINRESOURCE_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.DOMAINRESOURCE_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.DOMAINRESOURCE_TOKEN_VALUES ADD CONSTRAINT FK_DOMAINRESOURCE_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.DOMAINRESOURCE_TOKEN_VALUES ADD CONSTRAINT FK_DOMAINRESOURCE_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

CREATE PERMISSION FHIRAPP.DOMAINRESOURCE_TOKEN_VALUES_TENANT                      ON FHIRAPP.DOMAINRESOURCE_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.DOMAINRESOURCE_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.DOMAINRESOURCE_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.DOMAINRESOURCE_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_DOMAINRESOURCE_DATE_VALUES_RPSE ON FHIRAPP.DOMAINRESOURCE_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

CREATE INDEX FHIRAPP.IDX_DOMAINRESOURCE_DATE_VALUES_PSER ON FHIRAPP.DOMAINRESOURCE_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_DOMAINRESOURCE_DATE_VALUES_PVR ON FHIRAPP.DOMAINRESOURCE_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_DOMAINRESOURCE_DATE_VALUES_RPV ON FHIRAPP.DOMAINRESOURCE_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

CREATE INDEX FHIRAPP.IDX_DOMAINRESOURCE_DATE_VALUES_PESR ON FHIRAPP.DOMAINRESOURCE_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.DOMAINRESOURCE_DATE_VALUES ADD CONSTRAINT FK_DOMAINRESOURCE_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.DOMAINRESOURCE_DATE_VALUES ADD CONSTRAINT FK_DOMAINRESOURCE_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.DOMAINRESOURCE_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.DOMAINRESOURCE_DATE_VALUES_TENANT                      ON FHIRAPP.DOMAINRESOURCE_DATE_VALUES          FOR ROWS WHERE FHIRAPP.DOMAINRESOURCE_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.DOMAINRESOURCE_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.DOMAINRESOURCE_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_DOMAINRESOURCE_NUMBER_VALUES_PNNV ON FHIRAPP.DOMAINRESOURCE_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_DOMAINRESOURCE_NUMBER_VALUES_RPS ON FHIRAPP.DOMAINRESOURCE_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

ALTER TABLE FHIRAPP.DOMAINRESOURCE_NUMBER_VALUES ADD CONSTRAINT FK_DOMAINRESOURCE_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.DOMAINRESOURCE_NUMBER_VALUES ADD CONSTRAINT FK_DOMAINRESOURCE_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.DOMAINRESOURCE_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.DOMAINRESOURCE_NUMBER_VALUES_TENANT                      ON FHIRAPP.DOMAINRESOURCE_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.DOMAINRESOURCE_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.DOMAINRESOURCE_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.DOMAINRESOURCE_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_DOMAINRESOURCE_LATLNG_VALUES_PNNLV ON FHIRAPP.DOMAINRESOURCE_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_DOMAINRESOURCE_LATLNG_VALUES_RPLAT ON FHIRAPP.DOMAINRESOURCE_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_DOMAINRESOURCE_LATLNG_VALUES_PNNHV ON FHIRAPP.DOMAINRESOURCE_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_DOMAINRESOURCE_LATLNG_VALUES_RPLNG ON FHIRAPP.DOMAINRESOURCE_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

ALTER TABLE FHIRAPP.DOMAINRESOURCE_LATLNG_VALUES ADD CONSTRAINT FK_DOMAINRESOURCE_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.DOMAINRESOURCE_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.DOMAINRESOURCE_LATLNG_VALUES ADD CONSTRAINT FK_DOMAINRESOURCE_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.DOMAINRESOURCE_LATLNG_VALUES_TENANT                      ON FHIRAPP.DOMAINRESOURCE_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.DOMAINRESOURCE_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.DOMAINRESOURCE_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.DOMAINRESOURCE_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_DOMAINRESOURCE_QUANTITY_VALUES_PNNV ON FHIRAPP.DOMAINRESOURCE_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_DOMAINRESOURCE_QUANTITY_VALUES_PCHLSR ON FHIRAPP.DOMAINRESOURCE_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_DOMAINRESOURCE_QUANTITY_VALUES_RPCHLS ON FHIRAPP.DOMAINRESOURCE_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_DOMAINRESOURCE_QUANTITY_VALUES_RPS ON FHIRAPP.DOMAINRESOURCE_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_DOMAINRESOURCE_QUANTITY_VALUES_RPCLHS ON FHIRAPP.DOMAINRESOURCE_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_DOMAINRESOURCE_QUANTITY_VALUES_PCLHSR ON FHIRAPP.DOMAINRESOURCE_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.DOMAINRESOURCE_QUANTITY_VALUES ADD CONSTRAINT FK_DOMAINRESOURCE_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.DOMAINRESOURCE_QUANTITY_VALUES ADD CONSTRAINT FK_DOMAINRESOURCE_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.DOMAINRESOURCE_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.DOMAINRESOURCE_QUANTITY_VALUES_TENANT                      ON FHIRAPP.DOMAINRESOURCE_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.DOMAINRESOURCE_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.DOMAINRESOURCE_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.INVOICE_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT INVOICE_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.INVOICE_LOGICAL_RESOURCES ADD CONSTRAINT FK_INVOICE_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.INVOICE_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.INVOICE_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.INVOICE_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.INVOICE_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.INVOICE_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT INVOICE_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.INVOICE_RESOURCES_PRF_IN1 ON FHIRAPP.INVOICE_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.INVOICE_RESOURCES_TENANT                      ON FHIRAPP.INVOICE_RESOURCES          FOR ROWS WHERE FHIRAPP.INVOICE_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.INVOICE_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.INVOICE_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_INVOICE_STR_VALUES_RPS ON FHIRAPP.INVOICE_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

CREATE INDEX FHIRAPP.IDX_INVOICE_STR_VALUES_PLR ON FHIRAPP.INVOICE_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_INVOICE_STR_VALUES_RPL ON FHIRAPP.INVOICE_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

CREATE INDEX FHIRAPP.IDX_INVOICE_STR_VALUES_PSR ON FHIRAPP.INVOICE_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.INVOICE_STR_VALUES ADD CONSTRAINT FK_INVOICE_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.INVOICE_STR_VALUES ADD CONSTRAINT FK_INVOICE_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.INVOICE_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.INVOICE_STR_VALUES_TENANT                      ON FHIRAPP.INVOICE_STR_VALUES          FOR ROWS WHERE FHIRAPP.INVOICE_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.INVOICE_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.INVOICE_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_INVOICE_TOKEN_VALUES_PNCSCV ON FHIRAPP.INVOICE_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_INVOICE_TOKEN_VALUES_RPS ON FHIRAPP.INVOICE_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

ALTER TABLE FHIRAPP.INVOICE_TOKEN_VALUES ADD CONSTRAINT FK_INVOICE_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.INVOICE_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.INVOICE_TOKEN_VALUES ADD CONSTRAINT FK_INVOICE_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

ALTER TABLE FHIRAPP.INVOICE_TOKEN_VALUES ADD CONSTRAINT FK_INVOICE_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.INVOICE_TOKEN_VALUES_TENANT                      ON FHIRAPP.INVOICE_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.INVOICE_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.INVOICE_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.INVOICE_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_INVOICE_DATE_VALUES_PSER ON FHIRAPP.INVOICE_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_INVOICE_DATE_VALUES_RPSE ON FHIRAPP.INVOICE_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

CREATE INDEX FHIRAPP.IDX_INVOICE_DATE_VALUES_PESR ON FHIRAPP.INVOICE_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_INVOICE_DATE_VALUES_PVR ON FHIRAPP.INVOICE_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_INVOICE_DATE_VALUES_RPV ON FHIRAPP.INVOICE_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

ALTER TABLE FHIRAPP.INVOICE_DATE_VALUES ADD CONSTRAINT FK_INVOICE_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.INVOICE_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.INVOICE_DATE_VALUES ADD CONSTRAINT FK_INVOICE_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.INVOICE_DATE_VALUES_TENANT                      ON FHIRAPP.INVOICE_DATE_VALUES          FOR ROWS WHERE FHIRAPP.INVOICE_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.INVOICE_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.INVOICE_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_INVOICE_NUMBER_VALUES_PNNV ON FHIRAPP.INVOICE_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_INVOICE_NUMBER_VALUES_RPS ON FHIRAPP.INVOICE_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

ALTER TABLE FHIRAPP.INVOICE_NUMBER_VALUES ADD CONSTRAINT FK_INVOICE_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.INVOICE_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.INVOICE_NUMBER_VALUES ADD CONSTRAINT FK_INVOICE_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.INVOICE_NUMBER_VALUES_TENANT                      ON FHIRAPP.INVOICE_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.INVOICE_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.INVOICE_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.INVOICE_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_INVOICE_LATLNG_VALUES_RPLNG ON FHIRAPP.INVOICE_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_INVOICE_LATLNG_VALUES_PNNLV ON FHIRAPP.INVOICE_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_INVOICE_LATLNG_VALUES_PNNHV ON FHIRAPP.INVOICE_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_INVOICE_LATLNG_VALUES_RPLAT ON FHIRAPP.INVOICE_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

ALTER TABLE FHIRAPP.INVOICE_LATLNG_VALUES ADD CONSTRAINT FK_INVOICE_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.INVOICE_LATLNG_VALUES ADD CONSTRAINT FK_INVOICE_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.INVOICE_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.INVOICE_LATLNG_VALUES_TENANT                      ON FHIRAPP.INVOICE_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.INVOICE_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.INVOICE_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.INVOICE_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_INVOICE_QUANTITY_VALUES_PCHLSR ON FHIRAPP.INVOICE_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_INVOICE_QUANTITY_VALUES_RPS ON FHIRAPP.INVOICE_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_INVOICE_QUANTITY_VALUES_RPCHLS ON FHIRAPP.INVOICE_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_INVOICE_QUANTITY_VALUES_PNNV ON FHIRAPP.INVOICE_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_INVOICE_QUANTITY_VALUES_RPCLHS ON FHIRAPP.INVOICE_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_INVOICE_QUANTITY_VALUES_PCLHSR ON FHIRAPP.INVOICE_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.INVOICE_QUANTITY_VALUES ADD CONSTRAINT FK_INVOICE_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.INVOICE_QUANTITY_VALUES ADD CONSTRAINT FK_INVOICE_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.INVOICE_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.INVOICE_QUANTITY_VALUES_TENANT                      ON FHIRAPP.INVOICE_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.INVOICE_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.INVOICE_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.CATALOGENTRY_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT CATALOGENTRY_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.CATALOGENTRY_LOGICAL_RESOURCES ADD CONSTRAINT FK_CATALOGENTRY_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.CATALOGENTRY_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.CATALOGENTRY_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.CATALOGENTRY_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.CATALOGENTRY_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.CATALOGENTRY_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT CATALOGENTRY_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.CATALOGENTRY_RESOURCES_PRF_IN1 ON FHIRAPP.CATALOGENTRY_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.CATALOGENTRY_RESOURCES_TENANT                      ON FHIRAPP.CATALOGENTRY_RESOURCES          FOR ROWS WHERE FHIRAPP.CATALOGENTRY_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.CATALOGENTRY_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.CATALOGENTRY_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_CATALOGENTRY_STR_VALUES_PSR ON FHIRAPP.CATALOGENTRY_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_CATALOGENTRY_STR_VALUES_RPL ON FHIRAPP.CATALOGENTRY_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

CREATE INDEX FHIRAPP.IDX_CATALOGENTRY_STR_VALUES_PLR ON FHIRAPP.CATALOGENTRY_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_CATALOGENTRY_STR_VALUES_RPS ON FHIRAPP.CATALOGENTRY_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

ALTER TABLE FHIRAPP.CATALOGENTRY_STR_VALUES ADD CONSTRAINT FK_CATALOGENTRY_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.CATALOGENTRY_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.CATALOGENTRY_STR_VALUES ADD CONSTRAINT FK_CATALOGENTRY_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.CATALOGENTRY_STR_VALUES_TENANT                      ON FHIRAPP.CATALOGENTRY_STR_VALUES          FOR ROWS WHERE FHIRAPP.CATALOGENTRY_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.CATALOGENTRY_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.CATALOGENTRY_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_CATALOGENTRY_TOKEN_VALUES_PNCSCV ON FHIRAPP.CATALOGENTRY_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_CATALOGENTRY_TOKEN_VALUES_RPS ON FHIRAPP.CATALOGENTRY_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

ALTER TABLE FHIRAPP.CATALOGENTRY_TOKEN_VALUES ADD CONSTRAINT FK_CATALOGENTRY_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.CATALOGENTRY_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.CATALOGENTRY_TOKEN_VALUES ADD CONSTRAINT FK_CATALOGENTRY_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.CATALOGENTRY_TOKEN_VALUES ADD CONSTRAINT FK_CATALOGENTRY_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

CREATE PERMISSION FHIRAPP.CATALOGENTRY_TOKEN_VALUES_TENANT                      ON FHIRAPP.CATALOGENTRY_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.CATALOGENTRY_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.CATALOGENTRY_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.CATALOGENTRY_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_CATALOGENTRY_DATE_VALUES_PSER ON FHIRAPP.CATALOGENTRY_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_CATALOGENTRY_DATE_VALUES_RPSE ON FHIRAPP.CATALOGENTRY_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

CREATE INDEX FHIRAPP.IDX_CATALOGENTRY_DATE_VALUES_PESR ON FHIRAPP.CATALOGENTRY_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_CATALOGENTRY_DATE_VALUES_PVR ON FHIRAPP.CATALOGENTRY_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_CATALOGENTRY_DATE_VALUES_RPV ON FHIRAPP.CATALOGENTRY_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

ALTER TABLE FHIRAPP.CATALOGENTRY_DATE_VALUES ADD CONSTRAINT FK_CATALOGENTRY_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.CATALOGENTRY_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.CATALOGENTRY_DATE_VALUES ADD CONSTRAINT FK_CATALOGENTRY_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.CATALOGENTRY_DATE_VALUES_TENANT                      ON FHIRAPP.CATALOGENTRY_DATE_VALUES          FOR ROWS WHERE FHIRAPP.CATALOGENTRY_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.CATALOGENTRY_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.CATALOGENTRY_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_CATALOGENTRY_NUMBER_VALUES_RPS ON FHIRAPP.CATALOGENTRY_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

CREATE INDEX FHIRAPP.IDX_CATALOGENTRY_NUMBER_VALUES_PNNV ON FHIRAPP.CATALOGENTRY_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.CATALOGENTRY_NUMBER_VALUES ADD CONSTRAINT FK_CATALOGENTRY_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.CATALOGENTRY_NUMBER_VALUES ADD CONSTRAINT FK_CATALOGENTRY_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.CATALOGENTRY_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.CATALOGENTRY_NUMBER_VALUES_TENANT                      ON FHIRAPP.CATALOGENTRY_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.CATALOGENTRY_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.CATALOGENTRY_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.CATALOGENTRY_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_CATALOGENTRY_LATLNG_VALUES_PNNLV ON FHIRAPP.CATALOGENTRY_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_CATALOGENTRY_LATLNG_VALUES_RPLNG ON FHIRAPP.CATALOGENTRY_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_CATALOGENTRY_LATLNG_VALUES_PNNHV ON FHIRAPP.CATALOGENTRY_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_CATALOGENTRY_LATLNG_VALUES_RPLAT ON FHIRAPP.CATALOGENTRY_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

ALTER TABLE FHIRAPP.CATALOGENTRY_LATLNG_VALUES ADD CONSTRAINT FK_CATALOGENTRY_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.CATALOGENTRY_LATLNG_VALUES ADD CONSTRAINT FK_CATALOGENTRY_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.CATALOGENTRY_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.CATALOGENTRY_LATLNG_VALUES_TENANT                      ON FHIRAPP.CATALOGENTRY_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.CATALOGENTRY_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.CATALOGENTRY_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.CATALOGENTRY_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_CATALOGENTRY_QUANTITY_VALUES_RPCLHS ON FHIRAPP.CATALOGENTRY_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_CATALOGENTRY_QUANTITY_VALUES_RPS ON FHIRAPP.CATALOGENTRY_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_CATALOGENTRY_QUANTITY_VALUES_PCHLSR ON FHIRAPP.CATALOGENTRY_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_CATALOGENTRY_QUANTITY_VALUES_RPCHLS ON FHIRAPP.CATALOGENTRY_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_CATALOGENTRY_QUANTITY_VALUES_PCLHSR ON FHIRAPP.CATALOGENTRY_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_CATALOGENTRY_QUANTITY_VALUES_PNNV ON FHIRAPP.CATALOGENTRY_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

ALTER TABLE FHIRAPP.CATALOGENTRY_QUANTITY_VALUES ADD CONSTRAINT FK_CATALOGENTRY_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.CATALOGENTRY_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.CATALOGENTRY_QUANTITY_VALUES ADD CONSTRAINT FK_CATALOGENTRY_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.CATALOGENTRY_QUANTITY_VALUES_TENANT                      ON FHIRAPP.CATALOGENTRY_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.CATALOGENTRY_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.CATALOGENTRY_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.EVENTDEFINITION_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT EVENTDEFINITION_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.EVENTDEFINITION_LOGICAL_RESOURCES ADD CONSTRAINT FK_EVENTDEFINITION_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.EVENTDEFINITION_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.EVENTDEFINITION_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.EVENTDEFINITION_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.EVENTDEFINITION_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.EVENTDEFINITION_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT EVENTDEFINITION_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.EVENTDEFINITION_RESOURCES_PRF_IN1 ON FHIRAPP.EVENTDEFINITION_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.EVENTDEFINITION_RESOURCES_TENANT                      ON FHIRAPP.EVENTDEFINITION_RESOURCES          FOR ROWS WHERE FHIRAPP.EVENTDEFINITION_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.EVENTDEFINITION_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.EVENTDEFINITION_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_EVENTDEFINITION_STR_VALUES_PLR ON FHIRAPP.EVENTDEFINITION_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_EVENTDEFINITION_STR_VALUES_RPS ON FHIRAPP.EVENTDEFINITION_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

CREATE INDEX FHIRAPP.IDX_EVENTDEFINITION_STR_VALUES_PSR ON FHIRAPP.EVENTDEFINITION_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_EVENTDEFINITION_STR_VALUES_RPL ON FHIRAPP.EVENTDEFINITION_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

ALTER TABLE FHIRAPP.EVENTDEFINITION_STR_VALUES ADD CONSTRAINT FK_EVENTDEFINITION_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.EVENTDEFINITION_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.EVENTDEFINITION_STR_VALUES ADD CONSTRAINT FK_EVENTDEFINITION_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.EVENTDEFINITION_STR_VALUES_TENANT                      ON FHIRAPP.EVENTDEFINITION_STR_VALUES          FOR ROWS WHERE FHIRAPP.EVENTDEFINITION_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.EVENTDEFINITION_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.EVENTDEFINITION_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_EVENTDEFINITION_TOKEN_VALUES_PNCSCV ON FHIRAPP.EVENTDEFINITION_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_EVENTDEFINITION_TOKEN_VALUES_RPS ON FHIRAPP.EVENTDEFINITION_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

ALTER TABLE FHIRAPP.EVENTDEFINITION_TOKEN_VALUES ADD CONSTRAINT FK_EVENTDEFINITION_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.EVENTDEFINITION_TOKEN_VALUES ADD CONSTRAINT FK_EVENTDEFINITION_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

ALTER TABLE FHIRAPP.EVENTDEFINITION_TOKEN_VALUES ADD CONSTRAINT FK_EVENTDEFINITION_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.EVENTDEFINITION_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.EVENTDEFINITION_TOKEN_VALUES_TENANT                      ON FHIRAPP.EVENTDEFINITION_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.EVENTDEFINITION_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.EVENTDEFINITION_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.EVENTDEFINITION_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_EVENTDEFINITION_DATE_VALUES_PSER ON FHIRAPP.EVENTDEFINITION_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_EVENTDEFINITION_DATE_VALUES_RPSE ON FHIRAPP.EVENTDEFINITION_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

CREATE INDEX FHIRAPP.IDX_EVENTDEFINITION_DATE_VALUES_PESR ON FHIRAPP.EVENTDEFINITION_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_EVENTDEFINITION_DATE_VALUES_RPV ON FHIRAPP.EVENTDEFINITION_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

CREATE INDEX FHIRAPP.IDX_EVENTDEFINITION_DATE_VALUES_PVR ON FHIRAPP.EVENTDEFINITION_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.EVENTDEFINITION_DATE_VALUES ADD CONSTRAINT FK_EVENTDEFINITION_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.EVENTDEFINITION_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.EVENTDEFINITION_DATE_VALUES ADD CONSTRAINT FK_EVENTDEFINITION_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.EVENTDEFINITION_DATE_VALUES_TENANT                      ON FHIRAPP.EVENTDEFINITION_DATE_VALUES          FOR ROWS WHERE FHIRAPP.EVENTDEFINITION_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.EVENTDEFINITION_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.EVENTDEFINITION_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_EVENTDEFINITION_NUMBER_VALUES_PNNV ON FHIRAPP.EVENTDEFINITION_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_EVENTDEFINITION_NUMBER_VALUES_RPS ON FHIRAPP.EVENTDEFINITION_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

ALTER TABLE FHIRAPP.EVENTDEFINITION_NUMBER_VALUES ADD CONSTRAINT FK_EVENTDEFINITION_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.EVENTDEFINITION_NUMBER_VALUES ADD CONSTRAINT FK_EVENTDEFINITION_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.EVENTDEFINITION_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.EVENTDEFINITION_NUMBER_VALUES_TENANT                      ON FHIRAPP.EVENTDEFINITION_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.EVENTDEFINITION_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.EVENTDEFINITION_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.EVENTDEFINITION_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_EVENTDEFINITION_LATLNG_VALUES_PNNLV ON FHIRAPP.EVENTDEFINITION_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_EVENTDEFINITION_LATLNG_VALUES_RPLNG ON FHIRAPP.EVENTDEFINITION_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_EVENTDEFINITION_LATLNG_VALUES_PNNHV ON FHIRAPP.EVENTDEFINITION_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_EVENTDEFINITION_LATLNG_VALUES_RPLAT ON FHIRAPP.EVENTDEFINITION_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

ALTER TABLE FHIRAPP.EVENTDEFINITION_LATLNG_VALUES ADD CONSTRAINT FK_EVENTDEFINITION_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.EVENTDEFINITION_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.EVENTDEFINITION_LATLNG_VALUES ADD CONSTRAINT FK_EVENTDEFINITION_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.EVENTDEFINITION_LATLNG_VALUES_TENANT                      ON FHIRAPP.EVENTDEFINITION_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.EVENTDEFINITION_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.EVENTDEFINITION_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.EVENTDEFINITION_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_EVENTDEFINITION_QUANTITY_VALUES_RPCLHS ON FHIRAPP.EVENTDEFINITION_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_EVENTDEFINITION_QUANTITY_VALUES_PCHLSR ON FHIRAPP.EVENTDEFINITION_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_EVENTDEFINITION_QUANTITY_VALUES_RPS ON FHIRAPP.EVENTDEFINITION_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_EVENTDEFINITION_QUANTITY_VALUES_RPCHLS ON FHIRAPP.EVENTDEFINITION_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_EVENTDEFINITION_QUANTITY_VALUES_PCLHSR ON FHIRAPP.EVENTDEFINITION_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_EVENTDEFINITION_QUANTITY_VALUES_PNNV ON FHIRAPP.EVENTDEFINITION_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

ALTER TABLE FHIRAPP.EVENTDEFINITION_QUANTITY_VALUES ADD CONSTRAINT FK_EVENTDEFINITION_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.EVENTDEFINITION_QUANTITY_VALUES ADD CONSTRAINT FK_EVENTDEFINITION_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.EVENTDEFINITION_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.EVENTDEFINITION_QUANTITY_VALUES_TENANT                      ON FHIRAPP.EVENTDEFINITION_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.EVENTDEFINITION_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.EVENTDEFINITION_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.DOCUMENTMANIFEST_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT DOCUMENTMANIFEST_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.DOCUMENTMANIFEST_LOGICAL_RESOURCES ADD CONSTRAINT FK_DOCUMENTMANIFEST_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.DOCUMENTMANIFEST_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.DOCUMENTMANIFEST_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.DOCUMENTMANIFEST_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.DOCUMENTMANIFEST_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.DOCUMENTMANIFEST_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT DOCUMENTMANIFEST_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.DOCUMENTMANIFEST_RESOURCES_PRF_IN1 ON FHIRAPP.DOCUMENTMANIFEST_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.DOCUMENTMANIFEST_RESOURCES_TENANT                      ON FHIRAPP.DOCUMENTMANIFEST_RESOURCES          FOR ROWS WHERE FHIRAPP.DOCUMENTMANIFEST_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.DOCUMENTMANIFEST_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.DOCUMENTMANIFEST_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_DOCUMENTMANIFEST_STR_VALUES_RPL ON FHIRAPP.DOCUMENTMANIFEST_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

CREATE INDEX FHIRAPP.IDX_DOCUMENTMANIFEST_STR_VALUES_PSR ON FHIRAPP.DOCUMENTMANIFEST_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_DOCUMENTMANIFEST_STR_VALUES_PLR ON FHIRAPP.DOCUMENTMANIFEST_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_DOCUMENTMANIFEST_STR_VALUES_RPS ON FHIRAPP.DOCUMENTMANIFEST_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

ALTER TABLE FHIRAPP.DOCUMENTMANIFEST_STR_VALUES ADD CONSTRAINT FK_DOCUMENTMANIFEST_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.DOCUMENTMANIFEST_STR_VALUES ADD CONSTRAINT FK_DOCUMENTMANIFEST_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.DOCUMENTMANIFEST_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.DOCUMENTMANIFEST_STR_VALUES_TENANT                      ON FHIRAPP.DOCUMENTMANIFEST_STR_VALUES          FOR ROWS WHERE FHIRAPP.DOCUMENTMANIFEST_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.DOCUMENTMANIFEST_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.DOCUMENTMANIFEST_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_DOCUMENTMANIFEST_TOKEN_VALUES_PNCSCV ON FHIRAPP.DOCUMENTMANIFEST_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_DOCUMENTMANIFEST_TOKEN_VALUES_RPS ON FHIRAPP.DOCUMENTMANIFEST_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

ALTER TABLE FHIRAPP.DOCUMENTMANIFEST_TOKEN_VALUES ADD CONSTRAINT FK_DOCUMENTMANIFEST_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.DOCUMENTMANIFEST_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.DOCUMENTMANIFEST_TOKEN_VALUES ADD CONSTRAINT FK_DOCUMENTMANIFEST_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

ALTER TABLE FHIRAPP.DOCUMENTMANIFEST_TOKEN_VALUES ADD CONSTRAINT FK_DOCUMENTMANIFEST_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.DOCUMENTMANIFEST_TOKEN_VALUES_TENANT                      ON FHIRAPP.DOCUMENTMANIFEST_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.DOCUMENTMANIFEST_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.DOCUMENTMANIFEST_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.DOCUMENTMANIFEST_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_DOCUMENTMANIFEST_DATE_VALUES_RPV ON FHIRAPP.DOCUMENTMANIFEST_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

CREATE INDEX FHIRAPP.IDX_DOCUMENTMANIFEST_DATE_VALUES_PVR ON FHIRAPP.DOCUMENTMANIFEST_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_DOCUMENTMANIFEST_DATE_VALUES_PESR ON FHIRAPP.DOCUMENTMANIFEST_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_DOCUMENTMANIFEST_DATE_VALUES_PSER ON FHIRAPP.DOCUMENTMANIFEST_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_DOCUMENTMANIFEST_DATE_VALUES_RPSE ON FHIRAPP.DOCUMENTMANIFEST_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

ALTER TABLE FHIRAPP.DOCUMENTMANIFEST_DATE_VALUES ADD CONSTRAINT FK_DOCUMENTMANIFEST_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.DOCUMENTMANIFEST_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.DOCUMENTMANIFEST_DATE_VALUES ADD CONSTRAINT FK_DOCUMENTMANIFEST_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.DOCUMENTMANIFEST_DATE_VALUES_TENANT                      ON FHIRAPP.DOCUMENTMANIFEST_DATE_VALUES          FOR ROWS WHERE FHIRAPP.DOCUMENTMANIFEST_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.DOCUMENTMANIFEST_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.DOCUMENTMANIFEST_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_DOCUMENTMANIFEST_NUMBER_VALUES_RPS ON FHIRAPP.DOCUMENTMANIFEST_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

CREATE INDEX FHIRAPP.IDX_DOCUMENTMANIFEST_NUMBER_VALUES_PNNV ON FHIRAPP.DOCUMENTMANIFEST_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.DOCUMENTMANIFEST_NUMBER_VALUES ADD CONSTRAINT FK_DOCUMENTMANIFEST_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.DOCUMENTMANIFEST_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.DOCUMENTMANIFEST_NUMBER_VALUES ADD CONSTRAINT FK_DOCUMENTMANIFEST_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.DOCUMENTMANIFEST_NUMBER_VALUES_TENANT                      ON FHIRAPP.DOCUMENTMANIFEST_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.DOCUMENTMANIFEST_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.DOCUMENTMANIFEST_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.DOCUMENTMANIFEST_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_DOCUMENTMANIFEST_LATLNG_VALUES_RPLAT ON FHIRAPP.DOCUMENTMANIFEST_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_DOCUMENTMANIFEST_LATLNG_VALUES_PNNHV ON FHIRAPP.DOCUMENTMANIFEST_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_DOCUMENTMANIFEST_LATLNG_VALUES_PNNLV ON FHIRAPP.DOCUMENTMANIFEST_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_DOCUMENTMANIFEST_LATLNG_VALUES_RPLNG ON FHIRAPP.DOCUMENTMANIFEST_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

ALTER TABLE FHIRAPP.DOCUMENTMANIFEST_LATLNG_VALUES ADD CONSTRAINT FK_DOCUMENTMANIFEST_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.DOCUMENTMANIFEST_LATLNG_VALUES ADD CONSTRAINT FK_DOCUMENTMANIFEST_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.DOCUMENTMANIFEST_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.DOCUMENTMANIFEST_LATLNG_VALUES_TENANT                      ON FHIRAPP.DOCUMENTMANIFEST_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.DOCUMENTMANIFEST_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.DOCUMENTMANIFEST_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.DOCUMENTMANIFEST_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_DOCUMENTMANIFEST_QUANTITY_VALUES_RPCLHS ON FHIRAPP.DOCUMENTMANIFEST_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_DOCUMENTMANIFEST_QUANTITY_VALUES_PCLHSR ON FHIRAPP.DOCUMENTMANIFEST_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_DOCUMENTMANIFEST_QUANTITY_VALUES_PNNV ON FHIRAPP.DOCUMENTMANIFEST_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_DOCUMENTMANIFEST_QUANTITY_VALUES_RPS ON FHIRAPP.DOCUMENTMANIFEST_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_DOCUMENTMANIFEST_QUANTITY_VALUES_RPCHLS ON FHIRAPP.DOCUMENTMANIFEST_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_DOCUMENTMANIFEST_QUANTITY_VALUES_PCHLSR ON FHIRAPP.DOCUMENTMANIFEST_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.DOCUMENTMANIFEST_QUANTITY_VALUES ADD CONSTRAINT FK_DOCUMENTMANIFEST_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.DOCUMENTMANIFEST_QUANTITY_VALUES ADD CONSTRAINT FK_DOCUMENTMANIFEST_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.DOCUMENTMANIFEST_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.DOCUMENTMANIFEST_QUANTITY_VALUES_TENANT                      ON FHIRAPP.DOCUMENTMANIFEST_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.DOCUMENTMANIFEST_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.DOCUMENTMANIFEST_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MESSAGEDEFINITION_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT MESSAGEDEFINITION_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.MESSAGEDEFINITION_LOGICAL_RESOURCES ADD CONSTRAINT FK_MESSAGEDEFINITION_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.MESSAGEDEFINITION_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.MESSAGEDEFINITION_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.MESSAGEDEFINITION_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MESSAGEDEFINITION_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MESSAGEDEFINITION_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT MESSAGEDEFINITION_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.MESSAGEDEFINITION_RESOURCES_PRF_IN1 ON FHIRAPP.MESSAGEDEFINITION_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.MESSAGEDEFINITION_RESOURCES_TENANT                      ON FHIRAPP.MESSAGEDEFINITION_RESOURCES          FOR ROWS WHERE FHIRAPP.MESSAGEDEFINITION_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MESSAGEDEFINITION_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MESSAGEDEFINITION_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_MESSAGEDEFINITION_STR_VALUES_PSR ON FHIRAPP.MESSAGEDEFINITION_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MESSAGEDEFINITION_STR_VALUES_RPL ON FHIRAPP.MESSAGEDEFINITION_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

CREATE INDEX FHIRAPP.IDX_MESSAGEDEFINITION_STR_VALUES_PLR ON FHIRAPP.MESSAGEDEFINITION_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MESSAGEDEFINITION_STR_VALUES_RPS ON FHIRAPP.MESSAGEDEFINITION_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

ALTER TABLE FHIRAPP.MESSAGEDEFINITION_STR_VALUES ADD CONSTRAINT FK_MESSAGEDEFINITION_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.MESSAGEDEFINITION_STR_VALUES ADD CONSTRAINT FK_MESSAGEDEFINITION_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.MESSAGEDEFINITION_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.MESSAGEDEFINITION_STR_VALUES_TENANT                      ON FHIRAPP.MESSAGEDEFINITION_STR_VALUES          FOR ROWS WHERE FHIRAPP.MESSAGEDEFINITION_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MESSAGEDEFINITION_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MESSAGEDEFINITION_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_MESSAGEDEFINITION_TOKEN_VALUES_RPS ON FHIRAPP.MESSAGEDEFINITION_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

CREATE INDEX FHIRAPP.IDX_MESSAGEDEFINITION_TOKEN_VALUES_PNCSCV ON FHIRAPP.MESSAGEDEFINITION_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.MESSAGEDEFINITION_TOKEN_VALUES ADD CONSTRAINT FK_MESSAGEDEFINITION_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.MESSAGEDEFINITION_TOKEN_VALUES ADD CONSTRAINT FK_MESSAGEDEFINITION_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.MESSAGEDEFINITION_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.MESSAGEDEFINITION_TOKEN_VALUES ADD CONSTRAINT FK_MESSAGEDEFINITION_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

CREATE PERMISSION FHIRAPP.MESSAGEDEFINITION_TOKEN_VALUES_TENANT                      ON FHIRAPP.MESSAGEDEFINITION_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.MESSAGEDEFINITION_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MESSAGEDEFINITION_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MESSAGEDEFINITION_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_MESSAGEDEFINITION_DATE_VALUES_PESR ON FHIRAPP.MESSAGEDEFINITION_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MESSAGEDEFINITION_DATE_VALUES_RPV ON FHIRAPP.MESSAGEDEFINITION_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

CREATE INDEX FHIRAPP.IDX_MESSAGEDEFINITION_DATE_VALUES_RPSE ON FHIRAPP.MESSAGEDEFINITION_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

CREATE INDEX FHIRAPP.IDX_MESSAGEDEFINITION_DATE_VALUES_PSER ON FHIRAPP.MESSAGEDEFINITION_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MESSAGEDEFINITION_DATE_VALUES_PVR ON FHIRAPP.MESSAGEDEFINITION_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.MESSAGEDEFINITION_DATE_VALUES ADD CONSTRAINT FK_MESSAGEDEFINITION_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.MESSAGEDEFINITION_DATE_VALUES ADD CONSTRAINT FK_MESSAGEDEFINITION_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.MESSAGEDEFINITION_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.MESSAGEDEFINITION_DATE_VALUES_TENANT                      ON FHIRAPP.MESSAGEDEFINITION_DATE_VALUES          FOR ROWS WHERE FHIRAPP.MESSAGEDEFINITION_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MESSAGEDEFINITION_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MESSAGEDEFINITION_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_MESSAGEDEFINITION_NUMBER_VALUES_RPS ON FHIRAPP.MESSAGEDEFINITION_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

CREATE INDEX FHIRAPP.IDX_MESSAGEDEFINITION_NUMBER_VALUES_PNNV ON FHIRAPP.MESSAGEDEFINITION_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.MESSAGEDEFINITION_NUMBER_VALUES ADD CONSTRAINT FK_MESSAGEDEFINITION_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.MESSAGEDEFINITION_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.MESSAGEDEFINITION_NUMBER_VALUES ADD CONSTRAINT FK_MESSAGEDEFINITION_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.MESSAGEDEFINITION_NUMBER_VALUES_TENANT                      ON FHIRAPP.MESSAGEDEFINITION_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.MESSAGEDEFINITION_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MESSAGEDEFINITION_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MESSAGEDEFINITION_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_MESSAGEDEFINITION_LATLNG_VALUES_RPLAT ON FHIRAPP.MESSAGEDEFINITION_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_MESSAGEDEFINITION_LATLNG_VALUES_PNNHV ON FHIRAPP.MESSAGEDEFINITION_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MESSAGEDEFINITION_LATLNG_VALUES_PNNLV ON FHIRAPP.MESSAGEDEFINITION_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MESSAGEDEFINITION_LATLNG_VALUES_RPLNG ON FHIRAPP.MESSAGEDEFINITION_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

ALTER TABLE FHIRAPP.MESSAGEDEFINITION_LATLNG_VALUES ADD CONSTRAINT FK_MESSAGEDEFINITION_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.MESSAGEDEFINITION_LATLNG_VALUES ADD CONSTRAINT FK_MESSAGEDEFINITION_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.MESSAGEDEFINITION_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.MESSAGEDEFINITION_LATLNG_VALUES_TENANT                      ON FHIRAPP.MESSAGEDEFINITION_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.MESSAGEDEFINITION_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MESSAGEDEFINITION_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MESSAGEDEFINITION_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_MESSAGEDEFINITION_QUANTITY_VALUES_RPS ON FHIRAPP.MESSAGEDEFINITION_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_MESSAGEDEFINITION_QUANTITY_VALUES_RPCLHS ON FHIRAPP.MESSAGEDEFINITION_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_MESSAGEDEFINITION_QUANTITY_VALUES_PCHLSR ON FHIRAPP.MESSAGEDEFINITION_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MESSAGEDEFINITION_QUANTITY_VALUES_PCLHSR ON FHIRAPP.MESSAGEDEFINITION_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MESSAGEDEFINITION_QUANTITY_VALUES_RPCHLS ON FHIRAPP.MESSAGEDEFINITION_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_MESSAGEDEFINITION_QUANTITY_VALUES_PNNV ON FHIRAPP.MESSAGEDEFINITION_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

ALTER TABLE FHIRAPP.MESSAGEDEFINITION_QUANTITY_VALUES ADD CONSTRAINT FK_MESSAGEDEFINITION_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.MESSAGEDEFINITION_QUANTITY_VALUES ADD CONSTRAINT FK_MESSAGEDEFINITION_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.MESSAGEDEFINITION_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.MESSAGEDEFINITION_QUANTITY_VALUES_TENANT                      ON FHIRAPP.MESSAGEDEFINITION_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.MESSAGEDEFINITION_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MESSAGEDEFINITION_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.GOAL_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT GOAL_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.GOAL_LOGICAL_RESOURCES ADD CONSTRAINT FK_GOAL_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.GOAL_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.GOAL_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.GOAL_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.GOAL_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.GOAL_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT GOAL_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.GOAL_RESOURCES_PRF_IN1 ON FHIRAPP.GOAL_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.GOAL_RESOURCES_TENANT                      ON FHIRAPP.GOAL_RESOURCES          FOR ROWS WHERE FHIRAPP.GOAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.GOAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.GOAL_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_GOAL_STR_VALUES_PSR ON FHIRAPP.GOAL_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_GOAL_STR_VALUES_RPL ON FHIRAPP.GOAL_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

CREATE INDEX FHIRAPP.IDX_GOAL_STR_VALUES_RPS ON FHIRAPP.GOAL_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

CREATE INDEX FHIRAPP.IDX_GOAL_STR_VALUES_PLR ON FHIRAPP.GOAL_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.GOAL_STR_VALUES ADD CONSTRAINT FK_GOAL_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.GOAL_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.GOAL_STR_VALUES ADD CONSTRAINT FK_GOAL_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.GOAL_STR_VALUES_TENANT                      ON FHIRAPP.GOAL_STR_VALUES          FOR ROWS WHERE FHIRAPP.GOAL_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.GOAL_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.GOAL_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_GOAL_TOKEN_VALUES_RPS ON FHIRAPP.GOAL_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

CREATE INDEX FHIRAPP.IDX_GOAL_TOKEN_VALUES_PNCSCV ON FHIRAPP.GOAL_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.GOAL_TOKEN_VALUES ADD CONSTRAINT FK_GOAL_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

ALTER TABLE FHIRAPP.GOAL_TOKEN_VALUES ADD CONSTRAINT FK_GOAL_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.GOAL_TOKEN_VALUES ADD CONSTRAINT FK_GOAL_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.GOAL_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.GOAL_TOKEN_VALUES_TENANT                      ON FHIRAPP.GOAL_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.GOAL_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.GOAL_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.GOAL_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_GOAL_DATE_VALUES_PVR ON FHIRAPP.GOAL_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_GOAL_DATE_VALUES_RPV ON FHIRAPP.GOAL_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

CREATE INDEX FHIRAPP.IDX_GOAL_DATE_VALUES_PESR ON FHIRAPP.GOAL_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_GOAL_DATE_VALUES_PSER ON FHIRAPP.GOAL_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_GOAL_DATE_VALUES_RPSE ON FHIRAPP.GOAL_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

ALTER TABLE FHIRAPP.GOAL_DATE_VALUES ADD CONSTRAINT FK_GOAL_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.GOAL_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.GOAL_DATE_VALUES ADD CONSTRAINT FK_GOAL_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.GOAL_DATE_VALUES_TENANT                      ON FHIRAPP.GOAL_DATE_VALUES          FOR ROWS WHERE FHIRAPP.GOAL_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.GOAL_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.GOAL_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_GOAL_NUMBER_VALUES_PNNV ON FHIRAPP.GOAL_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_GOAL_NUMBER_VALUES_RPS ON FHIRAPP.GOAL_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

ALTER TABLE FHIRAPP.GOAL_NUMBER_VALUES ADD CONSTRAINT FK_GOAL_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.GOAL_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.GOAL_NUMBER_VALUES ADD CONSTRAINT FK_GOAL_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.GOAL_NUMBER_VALUES_TENANT                      ON FHIRAPP.GOAL_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.GOAL_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.GOAL_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.GOAL_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_GOAL_LATLNG_VALUES_PNNLV ON FHIRAPP.GOAL_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_GOAL_LATLNG_VALUES_RPLAT ON FHIRAPP.GOAL_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_GOAL_LATLNG_VALUES_PNNHV ON FHIRAPP.GOAL_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_GOAL_LATLNG_VALUES_RPLNG ON FHIRAPP.GOAL_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

ALTER TABLE FHIRAPP.GOAL_LATLNG_VALUES ADD CONSTRAINT FK_GOAL_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.GOAL_LATLNG_VALUES ADD CONSTRAINT FK_GOAL_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.GOAL_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.GOAL_LATLNG_VALUES_TENANT                      ON FHIRAPP.GOAL_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.GOAL_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.GOAL_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.GOAL_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_GOAL_QUANTITY_VALUES_RPCHLS ON FHIRAPP.GOAL_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_GOAL_QUANTITY_VALUES_PCLHSR ON FHIRAPP.GOAL_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_GOAL_QUANTITY_VALUES_PNNV ON FHIRAPP.GOAL_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_GOAL_QUANTITY_VALUES_PCHLSR ON FHIRAPP.GOAL_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_GOAL_QUANTITY_VALUES_RPCLHS ON FHIRAPP.GOAL_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_GOAL_QUANTITY_VALUES_RPS ON FHIRAPP.GOAL_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

ALTER TABLE FHIRAPP.GOAL_QUANTITY_VALUES ADD CONSTRAINT FK_GOAL_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.GOAL_QUANTITY_VALUES ADD CONSTRAINT FK_GOAL_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.GOAL_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.GOAL_QUANTITY_VALUES_TENANT                      ON FHIRAPP.GOAL_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.GOAL_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.GOAL_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDICINALPRODUCTPACKAGED_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT MEDICINALPRODUCTPACKAGED_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.MEDICINALPRODUCTPACKAGED_LOGICAL_RESOURCES ADD CONSTRAINT FK_MEDICINALPRODUCTPACKAGED_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.MEDICINALPRODUCTPACKAGED_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.MEDICINALPRODUCTPACKAGED_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.MEDICINALPRODUCTPACKAGED_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDICINALPRODUCTPACKAGED_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDICINALPRODUCTPACKAGED_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT MEDICINALPRODUCTPACKAGED_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.MEDICINALPRODUCTPACKAGED_RESOURCES_PRF_IN1 ON FHIRAPP.MEDICINALPRODUCTPACKAGED_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.MEDICINALPRODUCTPACKAGED_RESOURCES_TENANT                      ON FHIRAPP.MEDICINALPRODUCTPACKAGED_RESOURCES          FOR ROWS WHERE FHIRAPP.MEDICINALPRODUCTPACKAGED_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDICINALPRODUCTPACKAGED_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDICINALPRODUCTPACKAGED_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTPACKAGED_STR_VALUES_RPS ON FHIRAPP.MEDICINALPRODUCTPACKAGED_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTPACKAGED_STR_VALUES_PLR ON FHIRAPP.MEDICINALPRODUCTPACKAGED_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTPACKAGED_STR_VALUES_RPL ON FHIRAPP.MEDICINALPRODUCTPACKAGED_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTPACKAGED_STR_VALUES_PSR ON FHIRAPP.MEDICINALPRODUCTPACKAGED_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.MEDICINALPRODUCTPACKAGED_STR_VALUES ADD CONSTRAINT FK_MEDICINALPRODUCTPACKAGED_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.MEDICINALPRODUCTPACKAGED_STR_VALUES ADD CONSTRAINT FK_MEDICINALPRODUCTPACKAGED_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.MEDICINALPRODUCTPACKAGED_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.MEDICINALPRODUCTPACKAGED_STR_VALUES_TENANT                      ON FHIRAPP.MEDICINALPRODUCTPACKAGED_STR_VALUES          FOR ROWS WHERE FHIRAPP.MEDICINALPRODUCTPACKAGED_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDICINALPRODUCTPACKAGED_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDICINALPRODUCTPACKAGED_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTPACKAGED_TOKEN_VALUES_PNCSCV ON FHIRAPP.MEDICINALPRODUCTPACKAGED_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTPACKAGED_TOKEN_VALUES_RPS ON FHIRAPP.MEDICINALPRODUCTPACKAGED_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

ALTER TABLE FHIRAPP.MEDICINALPRODUCTPACKAGED_TOKEN_VALUES ADD CONSTRAINT FK_MEDICINALPRODUCTPACKAGED_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.MEDICINALPRODUCTPACKAGED_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.MEDICINALPRODUCTPACKAGED_TOKEN_VALUES ADD CONSTRAINT FK_MEDICINALPRODUCTPACKAGED_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.MEDICINALPRODUCTPACKAGED_TOKEN_VALUES ADD CONSTRAINT FK_MEDICINALPRODUCTPACKAGED_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

CREATE PERMISSION FHIRAPP.MEDICINALPRODUCTPACKAGED_TOKEN_VALUES_TENANT                      ON FHIRAPP.MEDICINALPRODUCTPACKAGED_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.MEDICINALPRODUCTPACKAGED_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDICINALPRODUCTPACKAGED_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDICINALPRODUCTPACKAGED_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTPACKAGED_DATE_VALUES_RPV ON FHIRAPP.MEDICINALPRODUCTPACKAGED_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTPACKAGED_DATE_VALUES_RPSE ON FHIRAPP.MEDICINALPRODUCTPACKAGED_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTPACKAGED_DATE_VALUES_PVR ON FHIRAPP.MEDICINALPRODUCTPACKAGED_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTPACKAGED_DATE_VALUES_PSER ON FHIRAPP.MEDICINALPRODUCTPACKAGED_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTPACKAGED_DATE_VALUES_PESR ON FHIRAPP.MEDICINALPRODUCTPACKAGED_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.MEDICINALPRODUCTPACKAGED_DATE_VALUES ADD CONSTRAINT FK_MEDICINALPRODUCTPACKAGED_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.MEDICINALPRODUCTPACKAGED_DATE_VALUES ADD CONSTRAINT FK_MEDICINALPRODUCTPACKAGED_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.MEDICINALPRODUCTPACKAGED_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.MEDICINALPRODUCTPACKAGED_DATE_VALUES_TENANT                      ON FHIRAPP.MEDICINALPRODUCTPACKAGED_DATE_VALUES          FOR ROWS WHERE FHIRAPP.MEDICINALPRODUCTPACKAGED_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDICINALPRODUCTPACKAGED_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDICINALPRODUCTPACKAGED_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTPACKAGED_NUMBER_VALUES_RPS ON FHIRAPP.MEDICINALPRODUCTPACKAGED_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTPACKAGED_NUMBER_VALUES_PNNV ON FHIRAPP.MEDICINALPRODUCTPACKAGED_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.MEDICINALPRODUCTPACKAGED_NUMBER_VALUES ADD CONSTRAINT FK_MEDICINALPRODUCTPACKAGED_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.MEDICINALPRODUCTPACKAGED_NUMBER_VALUES ADD CONSTRAINT FK_MEDICINALPRODUCTPACKAGED_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.MEDICINALPRODUCTPACKAGED_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.MEDICINALPRODUCTPACKAGED_NUMBER_VALUES_TENANT                      ON FHIRAPP.MEDICINALPRODUCTPACKAGED_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.MEDICINALPRODUCTPACKAGED_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDICINALPRODUCTPACKAGED_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDICINALPRODUCTPACKAGED_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTPACKAGED_LATLNG_VALUES_RPLNG ON FHIRAPP.MEDICINALPRODUCTPACKAGED_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTPACKAGED_LATLNG_VALUES_PNNHV ON FHIRAPP.MEDICINALPRODUCTPACKAGED_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTPACKAGED_LATLNG_VALUES_PNNLV ON FHIRAPP.MEDICINALPRODUCTPACKAGED_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTPACKAGED_LATLNG_VALUES_RPLAT ON FHIRAPP.MEDICINALPRODUCTPACKAGED_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

ALTER TABLE FHIRAPP.MEDICINALPRODUCTPACKAGED_LATLNG_VALUES ADD CONSTRAINT FK_MEDICINALPRODUCTPACKAGED_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.MEDICINALPRODUCTPACKAGED_LATLNG_VALUES ADD CONSTRAINT FK_MEDICINALPRODUCTPACKAGED_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.MEDICINALPRODUCTPACKAGED_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.MEDICINALPRODUCTPACKAGED_LATLNG_VALUES_TENANT                      ON FHIRAPP.MEDICINALPRODUCTPACKAGED_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.MEDICINALPRODUCTPACKAGED_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDICINALPRODUCTPACKAGED_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDICINALPRODUCTPACKAGED_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTPACKAGED_QUANTITY_VALUES_PCHLSR ON FHIRAPP.MEDICINALPRODUCTPACKAGED_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTPACKAGED_QUANTITY_VALUES_RPCLHS ON FHIRAPP.MEDICINALPRODUCTPACKAGED_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTPACKAGED_QUANTITY_VALUES_PNNV ON FHIRAPP.MEDICINALPRODUCTPACKAGED_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTPACKAGED_QUANTITY_VALUES_RPCHLS ON FHIRAPP.MEDICINALPRODUCTPACKAGED_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTPACKAGED_QUANTITY_VALUES_RPS ON FHIRAPP.MEDICINALPRODUCTPACKAGED_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTPACKAGED_QUANTITY_VALUES_PCLHSR ON FHIRAPP.MEDICINALPRODUCTPACKAGED_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.MEDICINALPRODUCTPACKAGED_QUANTITY_VALUES ADD CONSTRAINT FK_MEDICINALPRODUCTPACKAGED_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.MEDICINALPRODUCTPACKAGED_QUANTITY_VALUES ADD CONSTRAINT FK_MEDICINALPRODUCTPACKAGED_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.MEDICINALPRODUCTPACKAGED_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.MEDICINALPRODUCTPACKAGED_QUANTITY_VALUES_TENANT                      ON FHIRAPP.MEDICINALPRODUCTPACKAGED_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.MEDICINALPRODUCTPACKAGED_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDICINALPRODUCTPACKAGED_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.ENDPOINT_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT ENDPOINT_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.ENDPOINT_LOGICAL_RESOURCES ADD CONSTRAINT FK_ENDPOINT_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.ENDPOINT_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.ENDPOINT_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.ENDPOINT_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.ENDPOINT_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.ENDPOINT_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT ENDPOINT_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.ENDPOINT_RESOURCES_PRF_IN1 ON FHIRAPP.ENDPOINT_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.ENDPOINT_RESOURCES_TENANT                      ON FHIRAPP.ENDPOINT_RESOURCES          FOR ROWS WHERE FHIRAPP.ENDPOINT_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.ENDPOINT_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.ENDPOINT_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_ENDPOINT_STR_VALUES_PLR ON FHIRAPP.ENDPOINT_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_ENDPOINT_STR_VALUES_RPS ON FHIRAPP.ENDPOINT_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

CREATE INDEX FHIRAPP.IDX_ENDPOINT_STR_VALUES_PSR ON FHIRAPP.ENDPOINT_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_ENDPOINT_STR_VALUES_RPL ON FHIRAPP.ENDPOINT_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

ALTER TABLE FHIRAPP.ENDPOINT_STR_VALUES ADD CONSTRAINT FK_ENDPOINT_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.ENDPOINT_STR_VALUES ADD CONSTRAINT FK_ENDPOINT_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.ENDPOINT_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.ENDPOINT_STR_VALUES_TENANT                      ON FHIRAPP.ENDPOINT_STR_VALUES          FOR ROWS WHERE FHIRAPP.ENDPOINT_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.ENDPOINT_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.ENDPOINT_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_ENDPOINT_TOKEN_VALUES_PNCSCV ON FHIRAPP.ENDPOINT_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_ENDPOINT_TOKEN_VALUES_RPS ON FHIRAPP.ENDPOINT_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

ALTER TABLE FHIRAPP.ENDPOINT_TOKEN_VALUES ADD CONSTRAINT FK_ENDPOINT_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

ALTER TABLE FHIRAPP.ENDPOINT_TOKEN_VALUES ADD CONSTRAINT FK_ENDPOINT_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.ENDPOINT_TOKEN_VALUES ADD CONSTRAINT FK_ENDPOINT_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.ENDPOINT_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.ENDPOINT_TOKEN_VALUES_TENANT                      ON FHIRAPP.ENDPOINT_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.ENDPOINT_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.ENDPOINT_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.ENDPOINT_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_ENDPOINT_DATE_VALUES_PESR ON FHIRAPP.ENDPOINT_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_ENDPOINT_DATE_VALUES_RPV ON FHIRAPP.ENDPOINT_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

CREATE INDEX FHIRAPP.IDX_ENDPOINT_DATE_VALUES_PVR ON FHIRAPP.ENDPOINT_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_ENDPOINT_DATE_VALUES_PSER ON FHIRAPP.ENDPOINT_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_ENDPOINT_DATE_VALUES_RPSE ON FHIRAPP.ENDPOINT_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

ALTER TABLE FHIRAPP.ENDPOINT_DATE_VALUES ADD CONSTRAINT FK_ENDPOINT_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.ENDPOINT_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.ENDPOINT_DATE_VALUES ADD CONSTRAINT FK_ENDPOINT_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.ENDPOINT_DATE_VALUES_TENANT                      ON FHIRAPP.ENDPOINT_DATE_VALUES          FOR ROWS WHERE FHIRAPP.ENDPOINT_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.ENDPOINT_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.ENDPOINT_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_ENDPOINT_NUMBER_VALUES_PNNV ON FHIRAPP.ENDPOINT_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_ENDPOINT_NUMBER_VALUES_RPS ON FHIRAPP.ENDPOINT_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

ALTER TABLE FHIRAPP.ENDPOINT_NUMBER_VALUES ADD CONSTRAINT FK_ENDPOINT_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.ENDPOINT_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.ENDPOINT_NUMBER_VALUES ADD CONSTRAINT FK_ENDPOINT_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.ENDPOINT_NUMBER_VALUES_TENANT                      ON FHIRAPP.ENDPOINT_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.ENDPOINT_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.ENDPOINT_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.ENDPOINT_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_ENDPOINT_LATLNG_VALUES_RPLNG ON FHIRAPP.ENDPOINT_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_ENDPOINT_LATLNG_VALUES_PNNLV ON FHIRAPP.ENDPOINT_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_ENDPOINT_LATLNG_VALUES_PNNHV ON FHIRAPP.ENDPOINT_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_ENDPOINT_LATLNG_VALUES_RPLAT ON FHIRAPP.ENDPOINT_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

ALTER TABLE FHIRAPP.ENDPOINT_LATLNG_VALUES ADD CONSTRAINT FK_ENDPOINT_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.ENDPOINT_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.ENDPOINT_LATLNG_VALUES ADD CONSTRAINT FK_ENDPOINT_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.ENDPOINT_LATLNG_VALUES_TENANT                      ON FHIRAPP.ENDPOINT_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.ENDPOINT_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.ENDPOINT_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.ENDPOINT_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_ENDPOINT_QUANTITY_VALUES_PNNV ON FHIRAPP.ENDPOINT_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_ENDPOINT_QUANTITY_VALUES_RPCHLS ON FHIRAPP.ENDPOINT_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_ENDPOINT_QUANTITY_VALUES_PCHLSR ON FHIRAPP.ENDPOINT_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_ENDPOINT_QUANTITY_VALUES_RPS ON FHIRAPP.ENDPOINT_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_ENDPOINT_QUANTITY_VALUES_PCLHSR ON FHIRAPP.ENDPOINT_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_ENDPOINT_QUANTITY_VALUES_RPCLHS ON FHIRAPP.ENDPOINT_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

ALTER TABLE FHIRAPP.ENDPOINT_QUANTITY_VALUES ADD CONSTRAINT FK_ENDPOINT_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.ENDPOINT_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.ENDPOINT_QUANTITY_VALUES ADD CONSTRAINT FK_ENDPOINT_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.ENDPOINT_QUANTITY_VALUES_TENANT                      ON FHIRAPP.ENDPOINT_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.ENDPOINT_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.ENDPOINT_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.ENROLLMENTREQUEST_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT ENROLLMENTREQUEST_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.ENROLLMENTREQUEST_LOGICAL_RESOURCES ADD CONSTRAINT FK_ENROLLMENTREQUEST_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.ENROLLMENTREQUEST_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.ENROLLMENTREQUEST_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.ENROLLMENTREQUEST_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.ENROLLMENTREQUEST_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.ENROLLMENTREQUEST_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT ENROLLMENTREQUEST_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.ENROLLMENTREQUEST_RESOURCES_PRF_IN1 ON FHIRAPP.ENROLLMENTREQUEST_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.ENROLLMENTREQUEST_RESOURCES_TENANT                      ON FHIRAPP.ENROLLMENTREQUEST_RESOURCES          FOR ROWS WHERE FHIRAPP.ENROLLMENTREQUEST_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.ENROLLMENTREQUEST_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.ENROLLMENTREQUEST_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_ENROLLMENTREQUEST_STR_VALUES_PLR ON FHIRAPP.ENROLLMENTREQUEST_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_ENROLLMENTREQUEST_STR_VALUES_RPS ON FHIRAPP.ENROLLMENTREQUEST_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

CREATE INDEX FHIRAPP.IDX_ENROLLMENTREQUEST_STR_VALUES_PSR ON FHIRAPP.ENROLLMENTREQUEST_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_ENROLLMENTREQUEST_STR_VALUES_RPL ON FHIRAPP.ENROLLMENTREQUEST_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

ALTER TABLE FHIRAPP.ENROLLMENTREQUEST_STR_VALUES ADD CONSTRAINT FK_ENROLLMENTREQUEST_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.ENROLLMENTREQUEST_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.ENROLLMENTREQUEST_STR_VALUES ADD CONSTRAINT FK_ENROLLMENTREQUEST_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.ENROLLMENTREQUEST_STR_VALUES_TENANT                      ON FHIRAPP.ENROLLMENTREQUEST_STR_VALUES          FOR ROWS WHERE FHIRAPP.ENROLLMENTREQUEST_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.ENROLLMENTREQUEST_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.ENROLLMENTREQUEST_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_ENROLLMENTREQUEST_TOKEN_VALUES_RPS ON FHIRAPP.ENROLLMENTREQUEST_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

CREATE INDEX FHIRAPP.IDX_ENROLLMENTREQUEST_TOKEN_VALUES_PNCSCV ON FHIRAPP.ENROLLMENTREQUEST_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.ENROLLMENTREQUEST_TOKEN_VALUES ADD CONSTRAINT FK_ENROLLMENTREQUEST_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

ALTER TABLE FHIRAPP.ENROLLMENTREQUEST_TOKEN_VALUES ADD CONSTRAINT FK_ENROLLMENTREQUEST_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.ENROLLMENTREQUEST_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.ENROLLMENTREQUEST_TOKEN_VALUES ADD CONSTRAINT FK_ENROLLMENTREQUEST_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.ENROLLMENTREQUEST_TOKEN_VALUES_TENANT                      ON FHIRAPP.ENROLLMENTREQUEST_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.ENROLLMENTREQUEST_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.ENROLLMENTREQUEST_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.ENROLLMENTREQUEST_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_ENROLLMENTREQUEST_DATE_VALUES_PVR ON FHIRAPP.ENROLLMENTREQUEST_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_ENROLLMENTREQUEST_DATE_VALUES_RPSE ON FHIRAPP.ENROLLMENTREQUEST_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

CREATE INDEX FHIRAPP.IDX_ENROLLMENTREQUEST_DATE_VALUES_PSER ON FHIRAPP.ENROLLMENTREQUEST_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_ENROLLMENTREQUEST_DATE_VALUES_RPV ON FHIRAPP.ENROLLMENTREQUEST_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

CREATE INDEX FHIRAPP.IDX_ENROLLMENTREQUEST_DATE_VALUES_PESR ON FHIRAPP.ENROLLMENTREQUEST_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.ENROLLMENTREQUEST_DATE_VALUES ADD CONSTRAINT FK_ENROLLMENTREQUEST_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.ENROLLMENTREQUEST_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.ENROLLMENTREQUEST_DATE_VALUES ADD CONSTRAINT FK_ENROLLMENTREQUEST_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.ENROLLMENTREQUEST_DATE_VALUES_TENANT                      ON FHIRAPP.ENROLLMENTREQUEST_DATE_VALUES          FOR ROWS WHERE FHIRAPP.ENROLLMENTREQUEST_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.ENROLLMENTREQUEST_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.ENROLLMENTREQUEST_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_ENROLLMENTREQUEST_NUMBER_VALUES_PNNV ON FHIRAPP.ENROLLMENTREQUEST_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_ENROLLMENTREQUEST_NUMBER_VALUES_RPS ON FHIRAPP.ENROLLMENTREQUEST_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

ALTER TABLE FHIRAPP.ENROLLMENTREQUEST_NUMBER_VALUES ADD CONSTRAINT FK_ENROLLMENTREQUEST_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.ENROLLMENTREQUEST_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.ENROLLMENTREQUEST_NUMBER_VALUES ADD CONSTRAINT FK_ENROLLMENTREQUEST_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.ENROLLMENTREQUEST_NUMBER_VALUES_TENANT                      ON FHIRAPP.ENROLLMENTREQUEST_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.ENROLLMENTREQUEST_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.ENROLLMENTREQUEST_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.ENROLLMENTREQUEST_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_ENROLLMENTREQUEST_LATLNG_VALUES_RPLNG ON FHIRAPP.ENROLLMENTREQUEST_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_ENROLLMENTREQUEST_LATLNG_VALUES_PNNHV ON FHIRAPP.ENROLLMENTREQUEST_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_ENROLLMENTREQUEST_LATLNG_VALUES_RPLAT ON FHIRAPP.ENROLLMENTREQUEST_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_ENROLLMENTREQUEST_LATLNG_VALUES_PNNLV ON FHIRAPP.ENROLLMENTREQUEST_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.ENROLLMENTREQUEST_LATLNG_VALUES ADD CONSTRAINT FK_ENROLLMENTREQUEST_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.ENROLLMENTREQUEST_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.ENROLLMENTREQUEST_LATLNG_VALUES ADD CONSTRAINT FK_ENROLLMENTREQUEST_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.ENROLLMENTREQUEST_LATLNG_VALUES_TENANT                      ON FHIRAPP.ENROLLMENTREQUEST_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.ENROLLMENTREQUEST_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.ENROLLMENTREQUEST_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.ENROLLMENTREQUEST_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_ENROLLMENTREQUEST_QUANTITY_VALUES_RPCLHS ON FHIRAPP.ENROLLMENTREQUEST_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_ENROLLMENTREQUEST_QUANTITY_VALUES_PNNV ON FHIRAPP.ENROLLMENTREQUEST_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_ENROLLMENTREQUEST_QUANTITY_VALUES_PCHLSR ON FHIRAPP.ENROLLMENTREQUEST_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_ENROLLMENTREQUEST_QUANTITY_VALUES_RPS ON FHIRAPP.ENROLLMENTREQUEST_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_ENROLLMENTREQUEST_QUANTITY_VALUES_PCLHSR ON FHIRAPP.ENROLLMENTREQUEST_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_ENROLLMENTREQUEST_QUANTITY_VALUES_RPCHLS ON FHIRAPP.ENROLLMENTREQUEST_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

ALTER TABLE FHIRAPP.ENROLLMENTREQUEST_QUANTITY_VALUES ADD CONSTRAINT FK_ENROLLMENTREQUEST_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.ENROLLMENTREQUEST_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.ENROLLMENTREQUEST_QUANTITY_VALUES ADD CONSTRAINT FK_ENROLLMENTREQUEST_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.ENROLLMENTREQUEST_QUANTITY_VALUES_TENANT                      ON FHIRAPP.ENROLLMENTREQUEST_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.ENROLLMENTREQUEST_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.ENROLLMENTREQUEST_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.CONSENT_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT CONSENT_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.CONSENT_LOGICAL_RESOURCES ADD CONSTRAINT FK_CONSENT_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.CONSENT_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.CONSENT_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.CONSENT_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.CONSENT_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.CONSENT_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT CONSENT_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.CONSENT_RESOURCES_PRF_IN1 ON FHIRAPP.CONSENT_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.CONSENT_RESOURCES_TENANT                      ON FHIRAPP.CONSENT_RESOURCES          FOR ROWS WHERE FHIRAPP.CONSENT_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.CONSENT_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.CONSENT_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_CONSENT_STR_VALUES_PLR ON FHIRAPP.CONSENT_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_CONSENT_STR_VALUES_RPS ON FHIRAPP.CONSENT_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

CREATE INDEX FHIRAPP.IDX_CONSENT_STR_VALUES_RPL ON FHIRAPP.CONSENT_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

CREATE INDEX FHIRAPP.IDX_CONSENT_STR_VALUES_PSR ON FHIRAPP.CONSENT_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.CONSENT_STR_VALUES ADD CONSTRAINT FK_CONSENT_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.CONSENT_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.CONSENT_STR_VALUES ADD CONSTRAINT FK_CONSENT_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.CONSENT_STR_VALUES_TENANT                      ON FHIRAPP.CONSENT_STR_VALUES          FOR ROWS WHERE FHIRAPP.CONSENT_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.CONSENT_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.CONSENT_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_CONSENT_TOKEN_VALUES_RPS ON FHIRAPP.CONSENT_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

CREATE INDEX FHIRAPP.IDX_CONSENT_TOKEN_VALUES_PNCSCV ON FHIRAPP.CONSENT_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.CONSENT_TOKEN_VALUES ADD CONSTRAINT FK_CONSENT_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

ALTER TABLE FHIRAPP.CONSENT_TOKEN_VALUES ADD CONSTRAINT FK_CONSENT_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.CONSENT_TOKEN_VALUES ADD CONSTRAINT FK_CONSENT_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.CONSENT_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.CONSENT_TOKEN_VALUES_TENANT                      ON FHIRAPP.CONSENT_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.CONSENT_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.CONSENT_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.CONSENT_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_CONSENT_DATE_VALUES_RPV ON FHIRAPP.CONSENT_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

CREATE INDEX FHIRAPP.IDX_CONSENT_DATE_VALUES_PVR ON FHIRAPP.CONSENT_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_CONSENT_DATE_VALUES_RPSE ON FHIRAPP.CONSENT_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

CREATE INDEX FHIRAPP.IDX_CONSENT_DATE_VALUES_PSER ON FHIRAPP.CONSENT_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_CONSENT_DATE_VALUES_PESR ON FHIRAPP.CONSENT_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.CONSENT_DATE_VALUES ADD CONSTRAINT FK_CONSENT_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.CONSENT_DATE_VALUES ADD CONSTRAINT FK_CONSENT_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.CONSENT_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.CONSENT_DATE_VALUES_TENANT                      ON FHIRAPP.CONSENT_DATE_VALUES          FOR ROWS WHERE FHIRAPP.CONSENT_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.CONSENT_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.CONSENT_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_CONSENT_NUMBER_VALUES_RPS ON FHIRAPP.CONSENT_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

CREATE INDEX FHIRAPP.IDX_CONSENT_NUMBER_VALUES_PNNV ON FHIRAPP.CONSENT_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.CONSENT_NUMBER_VALUES ADD CONSTRAINT FK_CONSENT_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.CONSENT_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.CONSENT_NUMBER_VALUES ADD CONSTRAINT FK_CONSENT_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.CONSENT_NUMBER_VALUES_TENANT                      ON FHIRAPP.CONSENT_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.CONSENT_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.CONSENT_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.CONSENT_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_CONSENT_LATLNG_VALUES_RPLNG ON FHIRAPP.CONSENT_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_CONSENT_LATLNG_VALUES_PNNLV ON FHIRAPP.CONSENT_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_CONSENT_LATLNG_VALUES_RPLAT ON FHIRAPP.CONSENT_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_CONSENT_LATLNG_VALUES_PNNHV ON FHIRAPP.CONSENT_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.CONSENT_LATLNG_VALUES ADD CONSTRAINT FK_CONSENT_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.CONSENT_LATLNG_VALUES ADD CONSTRAINT FK_CONSENT_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.CONSENT_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.CONSENT_LATLNG_VALUES_TENANT                      ON FHIRAPP.CONSENT_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.CONSENT_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.CONSENT_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.CONSENT_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_CONSENT_QUANTITY_VALUES_PCHLSR ON FHIRAPP.CONSENT_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_CONSENT_QUANTITY_VALUES_RPCLHS ON FHIRAPP.CONSENT_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_CONSENT_QUANTITY_VALUES_PCLHSR ON FHIRAPP.CONSENT_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_CONSENT_QUANTITY_VALUES_PNNV ON FHIRAPP.CONSENT_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_CONSENT_QUANTITY_VALUES_RPS ON FHIRAPP.CONSENT_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_CONSENT_QUANTITY_VALUES_RPCHLS ON FHIRAPP.CONSENT_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

ALTER TABLE FHIRAPP.CONSENT_QUANTITY_VALUES ADD CONSTRAINT FK_CONSENT_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.CONSENT_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.CONSENT_QUANTITY_VALUES ADD CONSTRAINT FK_CONSENT_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.CONSENT_QUANTITY_VALUES_TENANT                      ON FHIRAPP.CONSENT_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.CONSENT_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.CONSENT_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.CAPABILITYSTATEMENT_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT CAPABILITYSTATEMENT_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.CAPABILITYSTATEMENT_LOGICAL_RESOURCES ADD CONSTRAINT FK_CAPABILITYSTATEMENT_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.CAPABILITYSTATEMENT_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.CAPABILITYSTATEMENT_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.CAPABILITYSTATEMENT_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.CAPABILITYSTATEMENT_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.CAPABILITYSTATEMENT_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT CAPABILITYSTATEMENT_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.CAPABILITYSTATEMENT_RESOURCES_PRF_IN1 ON FHIRAPP.CAPABILITYSTATEMENT_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.CAPABILITYSTATEMENT_RESOURCES_TENANT                      ON FHIRAPP.CAPABILITYSTATEMENT_RESOURCES          FOR ROWS WHERE FHIRAPP.CAPABILITYSTATEMENT_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.CAPABILITYSTATEMENT_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.CAPABILITYSTATEMENT_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_CAPABILITYSTATEMENT_STR_VALUES_RPL ON FHIRAPP.CAPABILITYSTATEMENT_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

CREATE INDEX FHIRAPP.IDX_CAPABILITYSTATEMENT_STR_VALUES_PSR ON FHIRAPP.CAPABILITYSTATEMENT_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_CAPABILITYSTATEMENT_STR_VALUES_RPS ON FHIRAPP.CAPABILITYSTATEMENT_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

CREATE INDEX FHIRAPP.IDX_CAPABILITYSTATEMENT_STR_VALUES_PLR ON FHIRAPP.CAPABILITYSTATEMENT_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.CAPABILITYSTATEMENT_STR_VALUES ADD CONSTRAINT FK_CAPABILITYSTATEMENT_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.CAPABILITYSTATEMENT_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.CAPABILITYSTATEMENT_STR_VALUES ADD CONSTRAINT FK_CAPABILITYSTATEMENT_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.CAPABILITYSTATEMENT_STR_VALUES_TENANT                      ON FHIRAPP.CAPABILITYSTATEMENT_STR_VALUES          FOR ROWS WHERE FHIRAPP.CAPABILITYSTATEMENT_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.CAPABILITYSTATEMENT_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.CAPABILITYSTATEMENT_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_CAPABILITYSTATEMENT_TOKEN_VALUES_RPS ON FHIRAPP.CAPABILITYSTATEMENT_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

CREATE INDEX FHIRAPP.IDX_CAPABILITYSTATEMENT_TOKEN_VALUES_PNCSCV ON FHIRAPP.CAPABILITYSTATEMENT_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.CAPABILITYSTATEMENT_TOKEN_VALUES ADD CONSTRAINT FK_CAPABILITYSTATEMENT_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.CAPABILITYSTATEMENT_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.CAPABILITYSTATEMENT_TOKEN_VALUES ADD CONSTRAINT FK_CAPABILITYSTATEMENT_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.CAPABILITYSTATEMENT_TOKEN_VALUES ADD CONSTRAINT FK_CAPABILITYSTATEMENT_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

CREATE PERMISSION FHIRAPP.CAPABILITYSTATEMENT_TOKEN_VALUES_TENANT                      ON FHIRAPP.CAPABILITYSTATEMENT_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.CAPABILITYSTATEMENT_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.CAPABILITYSTATEMENT_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.CAPABILITYSTATEMENT_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_CAPABILITYSTATEMENT_DATE_VALUES_RPV ON FHIRAPP.CAPABILITYSTATEMENT_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

CREATE INDEX FHIRAPP.IDX_CAPABILITYSTATEMENT_DATE_VALUES_PSER ON FHIRAPP.CAPABILITYSTATEMENT_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_CAPABILITYSTATEMENT_DATE_VALUES_PVR ON FHIRAPP.CAPABILITYSTATEMENT_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_CAPABILITYSTATEMENT_DATE_VALUES_RPSE ON FHIRAPP.CAPABILITYSTATEMENT_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

CREATE INDEX FHIRAPP.IDX_CAPABILITYSTATEMENT_DATE_VALUES_PESR ON FHIRAPP.CAPABILITYSTATEMENT_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.CAPABILITYSTATEMENT_DATE_VALUES ADD CONSTRAINT FK_CAPABILITYSTATEMENT_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.CAPABILITYSTATEMENT_DATE_VALUES ADD CONSTRAINT FK_CAPABILITYSTATEMENT_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.CAPABILITYSTATEMENT_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.CAPABILITYSTATEMENT_DATE_VALUES_TENANT                      ON FHIRAPP.CAPABILITYSTATEMENT_DATE_VALUES          FOR ROWS WHERE FHIRAPP.CAPABILITYSTATEMENT_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.CAPABILITYSTATEMENT_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.CAPABILITYSTATEMENT_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_CAPABILITYSTATEMENT_NUMBER_VALUES_RPS ON FHIRAPP.CAPABILITYSTATEMENT_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

CREATE INDEX FHIRAPP.IDX_CAPABILITYSTATEMENT_NUMBER_VALUES_PNNV ON FHIRAPP.CAPABILITYSTATEMENT_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.CAPABILITYSTATEMENT_NUMBER_VALUES ADD CONSTRAINT FK_CAPABILITYSTATEMENT_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.CAPABILITYSTATEMENT_NUMBER_VALUES ADD CONSTRAINT FK_CAPABILITYSTATEMENT_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.CAPABILITYSTATEMENT_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.CAPABILITYSTATEMENT_NUMBER_VALUES_TENANT                      ON FHIRAPP.CAPABILITYSTATEMENT_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.CAPABILITYSTATEMENT_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.CAPABILITYSTATEMENT_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.CAPABILITYSTATEMENT_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_CAPABILITYSTATEMENT_LATLNG_VALUES_PNNLV ON FHIRAPP.CAPABILITYSTATEMENT_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_CAPABILITYSTATEMENT_LATLNG_VALUES_RPLNG ON FHIRAPP.CAPABILITYSTATEMENT_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_CAPABILITYSTATEMENT_LATLNG_VALUES_RPLAT ON FHIRAPP.CAPABILITYSTATEMENT_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_CAPABILITYSTATEMENT_LATLNG_VALUES_PNNHV ON FHIRAPP.CAPABILITYSTATEMENT_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.CAPABILITYSTATEMENT_LATLNG_VALUES ADD CONSTRAINT FK_CAPABILITYSTATEMENT_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.CAPABILITYSTATEMENT_LATLNG_VALUES ADD CONSTRAINT FK_CAPABILITYSTATEMENT_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.CAPABILITYSTATEMENT_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.CAPABILITYSTATEMENT_LATLNG_VALUES_TENANT                      ON FHIRAPP.CAPABILITYSTATEMENT_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.CAPABILITYSTATEMENT_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.CAPABILITYSTATEMENT_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.CAPABILITYSTATEMENT_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_CAPABILITYSTATEMENT_QUANTITY_VALUES_RPCHLS ON FHIRAPP.CAPABILITYSTATEMENT_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_CAPABILITYSTATEMENT_QUANTITY_VALUES_PCLHSR ON FHIRAPP.CAPABILITYSTATEMENT_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_CAPABILITYSTATEMENT_QUANTITY_VALUES_PNNV ON FHIRAPP.CAPABILITYSTATEMENT_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_CAPABILITYSTATEMENT_QUANTITY_VALUES_PCHLSR ON FHIRAPP.CAPABILITYSTATEMENT_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_CAPABILITYSTATEMENT_QUANTITY_VALUES_RPCLHS ON FHIRAPP.CAPABILITYSTATEMENT_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_CAPABILITYSTATEMENT_QUANTITY_VALUES_RPS ON FHIRAPP.CAPABILITYSTATEMENT_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

ALTER TABLE FHIRAPP.CAPABILITYSTATEMENT_QUANTITY_VALUES ADD CONSTRAINT FK_CAPABILITYSTATEMENT_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.CAPABILITYSTATEMENT_QUANTITY_VALUES ADD CONSTRAINT FK_CAPABILITYSTATEMENT_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.CAPABILITYSTATEMENT_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.CAPABILITYSTATEMENT_QUANTITY_VALUES_TENANT                      ON FHIRAPP.CAPABILITYSTATEMENT_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.CAPABILITYSTATEMENT_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.CAPABILITYSTATEMENT_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEASURE_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT MEASURE_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.MEASURE_LOGICAL_RESOURCES ADD CONSTRAINT FK_MEASURE_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.MEASURE_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.MEASURE_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.MEASURE_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEASURE_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEASURE_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT MEASURE_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.MEASURE_RESOURCES_PRF_IN1 ON FHIRAPP.MEASURE_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.MEASURE_RESOURCES_TENANT                      ON FHIRAPP.MEASURE_RESOURCES          FOR ROWS WHERE FHIRAPP.MEASURE_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEASURE_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEASURE_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_MEASURE_STR_VALUES_RPS ON FHIRAPP.MEASURE_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

CREATE INDEX FHIRAPP.IDX_MEASURE_STR_VALUES_PLR ON FHIRAPP.MEASURE_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEASURE_STR_VALUES_RPL ON FHIRAPP.MEASURE_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

CREATE INDEX FHIRAPP.IDX_MEASURE_STR_VALUES_PSR ON FHIRAPP.MEASURE_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.MEASURE_STR_VALUES ADD CONSTRAINT FK_MEASURE_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.MEASURE_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.MEASURE_STR_VALUES ADD CONSTRAINT FK_MEASURE_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.MEASURE_STR_VALUES_TENANT                      ON FHIRAPP.MEASURE_STR_VALUES          FOR ROWS WHERE FHIRAPP.MEASURE_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEASURE_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEASURE_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_MEASURE_TOKEN_VALUES_RPS ON FHIRAPP.MEASURE_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

CREATE INDEX FHIRAPP.IDX_MEASURE_TOKEN_VALUES_PNCSCV ON FHIRAPP.MEASURE_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.MEASURE_TOKEN_VALUES ADD CONSTRAINT FK_MEASURE_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.MEASURE_TOKEN_VALUES ADD CONSTRAINT FK_MEASURE_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.MEASURE_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.MEASURE_TOKEN_VALUES ADD CONSTRAINT FK_MEASURE_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

CREATE PERMISSION FHIRAPP.MEASURE_TOKEN_VALUES_TENANT                      ON FHIRAPP.MEASURE_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.MEASURE_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEASURE_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEASURE_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_MEASURE_DATE_VALUES_PVR ON FHIRAPP.MEASURE_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEASURE_DATE_VALUES_RPV ON FHIRAPP.MEASURE_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

CREATE INDEX FHIRAPP.IDX_MEASURE_DATE_VALUES_RPSE ON FHIRAPP.MEASURE_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

CREATE INDEX FHIRAPP.IDX_MEASURE_DATE_VALUES_PSER ON FHIRAPP.MEASURE_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEASURE_DATE_VALUES_PESR ON FHIRAPP.MEASURE_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.MEASURE_DATE_VALUES ADD CONSTRAINT FK_MEASURE_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.MEASURE_DATE_VALUES ADD CONSTRAINT FK_MEASURE_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.MEASURE_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.MEASURE_DATE_VALUES_TENANT                      ON FHIRAPP.MEASURE_DATE_VALUES          FOR ROWS WHERE FHIRAPP.MEASURE_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEASURE_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEASURE_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_MEASURE_NUMBER_VALUES_RPS ON FHIRAPP.MEASURE_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

CREATE INDEX FHIRAPP.IDX_MEASURE_NUMBER_VALUES_PNNV ON FHIRAPP.MEASURE_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.MEASURE_NUMBER_VALUES ADD CONSTRAINT FK_MEASURE_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.MEASURE_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.MEASURE_NUMBER_VALUES ADD CONSTRAINT FK_MEASURE_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.MEASURE_NUMBER_VALUES_TENANT                      ON FHIRAPP.MEASURE_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.MEASURE_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEASURE_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEASURE_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_MEASURE_LATLNG_VALUES_PNNLV ON FHIRAPP.MEASURE_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEASURE_LATLNG_VALUES_PNNHV ON FHIRAPP.MEASURE_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEASURE_LATLNG_VALUES_RPLAT ON FHIRAPP.MEASURE_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_MEASURE_LATLNG_VALUES_RPLNG ON FHIRAPP.MEASURE_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

ALTER TABLE FHIRAPP.MEASURE_LATLNG_VALUES ADD CONSTRAINT FK_MEASURE_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.MEASURE_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.MEASURE_LATLNG_VALUES ADD CONSTRAINT FK_MEASURE_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.MEASURE_LATLNG_VALUES_TENANT                      ON FHIRAPP.MEASURE_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.MEASURE_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEASURE_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEASURE_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_MEASURE_QUANTITY_VALUES_PCLHSR ON FHIRAPP.MEASURE_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEASURE_QUANTITY_VALUES_RPCHLS ON FHIRAPP.MEASURE_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_MEASURE_QUANTITY_VALUES_RPCLHS ON FHIRAPP.MEASURE_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_MEASURE_QUANTITY_VALUES_RPS ON FHIRAPP.MEASURE_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_MEASURE_QUANTITY_VALUES_PCHLSR ON FHIRAPP.MEASURE_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEASURE_QUANTITY_VALUES_PNNV ON FHIRAPP.MEASURE_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

ALTER TABLE FHIRAPP.MEASURE_QUANTITY_VALUES ADD CONSTRAINT FK_MEASURE_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.MEASURE_QUANTITY_VALUES ADD CONSTRAINT FK_MEASURE_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.MEASURE_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.MEASURE_QUANTITY_VALUES_TENANT                      ON FHIRAPP.MEASURE_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.MEASURE_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEASURE_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDICATION_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT MEDICATION_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.MEDICATION_LOGICAL_RESOURCES ADD CONSTRAINT FK_MEDICATION_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.MEDICATION_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.MEDICATION_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.MEDICATION_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDICATION_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDICATION_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT MEDICATION_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.MEDICATION_RESOURCES_PRF_IN1 ON FHIRAPP.MEDICATION_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.MEDICATION_RESOURCES_TENANT                      ON FHIRAPP.MEDICATION_RESOURCES          FOR ROWS WHERE FHIRAPP.MEDICATION_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDICATION_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDICATION_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_MEDICATION_STR_VALUES_RPL ON FHIRAPP.MEDICATION_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

CREATE INDEX FHIRAPP.IDX_MEDICATION_STR_VALUES_PSR ON FHIRAPP.MEDICATION_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEDICATION_STR_VALUES_PLR ON FHIRAPP.MEDICATION_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEDICATION_STR_VALUES_RPS ON FHIRAPP.MEDICATION_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

ALTER TABLE FHIRAPP.MEDICATION_STR_VALUES ADD CONSTRAINT FK_MEDICATION_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.MEDICATION_STR_VALUES ADD CONSTRAINT FK_MEDICATION_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.MEDICATION_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.MEDICATION_STR_VALUES_TENANT                      ON FHIRAPP.MEDICATION_STR_VALUES          FOR ROWS WHERE FHIRAPP.MEDICATION_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDICATION_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDICATION_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_MEDICATION_TOKEN_VALUES_RPS ON FHIRAPP.MEDICATION_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

CREATE INDEX FHIRAPP.IDX_MEDICATION_TOKEN_VALUES_PNCSCV ON FHIRAPP.MEDICATION_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.MEDICATION_TOKEN_VALUES ADD CONSTRAINT FK_MEDICATION_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

ALTER TABLE FHIRAPP.MEDICATION_TOKEN_VALUES ADD CONSTRAINT FK_MEDICATION_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.MEDICATION_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.MEDICATION_TOKEN_VALUES ADD CONSTRAINT FK_MEDICATION_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.MEDICATION_TOKEN_VALUES_TENANT                      ON FHIRAPP.MEDICATION_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.MEDICATION_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDICATION_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDICATION_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_MEDICATION_DATE_VALUES_RPV ON FHIRAPP.MEDICATION_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

CREATE INDEX FHIRAPP.IDX_MEDICATION_DATE_VALUES_PSER ON FHIRAPP.MEDICATION_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEDICATION_DATE_VALUES_RPSE ON FHIRAPP.MEDICATION_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

CREATE INDEX FHIRAPP.IDX_MEDICATION_DATE_VALUES_PVR ON FHIRAPP.MEDICATION_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEDICATION_DATE_VALUES_PESR ON FHIRAPP.MEDICATION_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.MEDICATION_DATE_VALUES ADD CONSTRAINT FK_MEDICATION_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.MEDICATION_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.MEDICATION_DATE_VALUES ADD CONSTRAINT FK_MEDICATION_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.MEDICATION_DATE_VALUES_TENANT                      ON FHIRAPP.MEDICATION_DATE_VALUES          FOR ROWS WHERE FHIRAPP.MEDICATION_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDICATION_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDICATION_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_MEDICATION_NUMBER_VALUES_RPS ON FHIRAPP.MEDICATION_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

CREATE INDEX FHIRAPP.IDX_MEDICATION_NUMBER_VALUES_PNNV ON FHIRAPP.MEDICATION_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.MEDICATION_NUMBER_VALUES ADD CONSTRAINT FK_MEDICATION_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.MEDICATION_NUMBER_VALUES ADD CONSTRAINT FK_MEDICATION_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.MEDICATION_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.MEDICATION_NUMBER_VALUES_TENANT                      ON FHIRAPP.MEDICATION_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.MEDICATION_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDICATION_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDICATION_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_MEDICATION_LATLNG_VALUES_RPLNG ON FHIRAPP.MEDICATION_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_MEDICATION_LATLNG_VALUES_PNNHV ON FHIRAPP.MEDICATION_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEDICATION_LATLNG_VALUES_PNNLV ON FHIRAPP.MEDICATION_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEDICATION_LATLNG_VALUES_RPLAT ON FHIRAPP.MEDICATION_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

ALTER TABLE FHIRAPP.MEDICATION_LATLNG_VALUES ADD CONSTRAINT FK_MEDICATION_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.MEDICATION_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.MEDICATION_LATLNG_VALUES ADD CONSTRAINT FK_MEDICATION_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.MEDICATION_LATLNG_VALUES_TENANT                      ON FHIRAPP.MEDICATION_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.MEDICATION_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDICATION_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDICATION_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_MEDICATION_QUANTITY_VALUES_RPCLHS ON FHIRAPP.MEDICATION_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_MEDICATION_QUANTITY_VALUES_PCHLSR ON FHIRAPP.MEDICATION_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEDICATION_QUANTITY_VALUES_RPS ON FHIRAPP.MEDICATION_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_MEDICATION_QUANTITY_VALUES_PCLHSR ON FHIRAPP.MEDICATION_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEDICATION_QUANTITY_VALUES_RPCHLS ON FHIRAPP.MEDICATION_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_MEDICATION_QUANTITY_VALUES_PNNV ON FHIRAPP.MEDICATION_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

ALTER TABLE FHIRAPP.MEDICATION_QUANTITY_VALUES ADD CONSTRAINT FK_MEDICATION_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.MEDICATION_QUANTITY_VALUES ADD CONSTRAINT FK_MEDICATION_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.MEDICATION_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.MEDICATION_QUANTITY_VALUES_TENANT                      ON FHIRAPP.MEDICATION_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.MEDICATION_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDICATION_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.RESEARCHSUBJECT_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT RESEARCHSUBJECT_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.RESEARCHSUBJECT_LOGICAL_RESOURCES ADD CONSTRAINT FK_RESEARCHSUBJECT_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.RESEARCHSUBJECT_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.RESEARCHSUBJECT_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.RESEARCHSUBJECT_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.RESEARCHSUBJECT_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.RESEARCHSUBJECT_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT RESEARCHSUBJECT_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.RESEARCHSUBJECT_RESOURCES_PRF_IN1 ON FHIRAPP.RESEARCHSUBJECT_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.RESEARCHSUBJECT_RESOURCES_TENANT                      ON FHIRAPP.RESEARCHSUBJECT_RESOURCES          FOR ROWS WHERE FHIRAPP.RESEARCHSUBJECT_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.RESEARCHSUBJECT_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.RESEARCHSUBJECT_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_RESEARCHSUBJECT_STR_VALUES_RPL ON FHIRAPP.RESEARCHSUBJECT_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

CREATE INDEX FHIRAPP.IDX_RESEARCHSUBJECT_STR_VALUES_RPS ON FHIRAPP.RESEARCHSUBJECT_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

CREATE INDEX FHIRAPP.IDX_RESEARCHSUBJECT_STR_VALUES_PLR ON FHIRAPP.RESEARCHSUBJECT_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_RESEARCHSUBJECT_STR_VALUES_PSR ON FHIRAPP.RESEARCHSUBJECT_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.RESEARCHSUBJECT_STR_VALUES ADD CONSTRAINT FK_RESEARCHSUBJECT_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.RESEARCHSUBJECT_STR_VALUES ADD CONSTRAINT FK_RESEARCHSUBJECT_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.RESEARCHSUBJECT_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.RESEARCHSUBJECT_STR_VALUES_TENANT                      ON FHIRAPP.RESEARCHSUBJECT_STR_VALUES          FOR ROWS WHERE FHIRAPP.RESEARCHSUBJECT_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.RESEARCHSUBJECT_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.RESEARCHSUBJECT_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_RESEARCHSUBJECT_TOKEN_VALUES_PNCSCV ON FHIRAPP.RESEARCHSUBJECT_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_RESEARCHSUBJECT_TOKEN_VALUES_RPS ON FHIRAPP.RESEARCHSUBJECT_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

ALTER TABLE FHIRAPP.RESEARCHSUBJECT_TOKEN_VALUES ADD CONSTRAINT FK_RESEARCHSUBJECT_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.RESEARCHSUBJECT_TOKEN_VALUES ADD CONSTRAINT FK_RESEARCHSUBJECT_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

ALTER TABLE FHIRAPP.RESEARCHSUBJECT_TOKEN_VALUES ADD CONSTRAINT FK_RESEARCHSUBJECT_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.RESEARCHSUBJECT_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.RESEARCHSUBJECT_TOKEN_VALUES_TENANT                      ON FHIRAPP.RESEARCHSUBJECT_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.RESEARCHSUBJECT_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.RESEARCHSUBJECT_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.RESEARCHSUBJECT_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_RESEARCHSUBJECT_DATE_VALUES_PVR ON FHIRAPP.RESEARCHSUBJECT_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_RESEARCHSUBJECT_DATE_VALUES_PSER ON FHIRAPP.RESEARCHSUBJECT_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_RESEARCHSUBJECT_DATE_VALUES_RPSE ON FHIRAPP.RESEARCHSUBJECT_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

CREATE INDEX FHIRAPP.IDX_RESEARCHSUBJECT_DATE_VALUES_PESR ON FHIRAPP.RESEARCHSUBJECT_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_RESEARCHSUBJECT_DATE_VALUES_RPV ON FHIRAPP.RESEARCHSUBJECT_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

ALTER TABLE FHIRAPP.RESEARCHSUBJECT_DATE_VALUES ADD CONSTRAINT FK_RESEARCHSUBJECT_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.RESEARCHSUBJECT_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.RESEARCHSUBJECT_DATE_VALUES ADD CONSTRAINT FK_RESEARCHSUBJECT_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.RESEARCHSUBJECT_DATE_VALUES_TENANT                      ON FHIRAPP.RESEARCHSUBJECT_DATE_VALUES          FOR ROWS WHERE FHIRAPP.RESEARCHSUBJECT_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.RESEARCHSUBJECT_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.RESEARCHSUBJECT_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_RESEARCHSUBJECT_NUMBER_VALUES_PNNV ON FHIRAPP.RESEARCHSUBJECT_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_RESEARCHSUBJECT_NUMBER_VALUES_RPS ON FHIRAPP.RESEARCHSUBJECT_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

ALTER TABLE FHIRAPP.RESEARCHSUBJECT_NUMBER_VALUES ADD CONSTRAINT FK_RESEARCHSUBJECT_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.RESEARCHSUBJECT_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.RESEARCHSUBJECT_NUMBER_VALUES ADD CONSTRAINT FK_RESEARCHSUBJECT_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.RESEARCHSUBJECT_NUMBER_VALUES_TENANT                      ON FHIRAPP.RESEARCHSUBJECT_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.RESEARCHSUBJECT_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.RESEARCHSUBJECT_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.RESEARCHSUBJECT_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_RESEARCHSUBJECT_LATLNG_VALUES_RPLAT ON FHIRAPP.RESEARCHSUBJECT_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_RESEARCHSUBJECT_LATLNG_VALUES_PNNHV ON FHIRAPP.RESEARCHSUBJECT_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_RESEARCHSUBJECT_LATLNG_VALUES_PNNLV ON FHIRAPP.RESEARCHSUBJECT_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_RESEARCHSUBJECT_LATLNG_VALUES_RPLNG ON FHIRAPP.RESEARCHSUBJECT_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

ALTER TABLE FHIRAPP.RESEARCHSUBJECT_LATLNG_VALUES ADD CONSTRAINT FK_RESEARCHSUBJECT_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.RESEARCHSUBJECT_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.RESEARCHSUBJECT_LATLNG_VALUES ADD CONSTRAINT FK_RESEARCHSUBJECT_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.RESEARCHSUBJECT_LATLNG_VALUES_TENANT                      ON FHIRAPP.RESEARCHSUBJECT_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.RESEARCHSUBJECT_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.RESEARCHSUBJECT_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.RESEARCHSUBJECT_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_RESEARCHSUBJECT_QUANTITY_VALUES_RPS ON FHIRAPP.RESEARCHSUBJECT_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_RESEARCHSUBJECT_QUANTITY_VALUES_RPCHLS ON FHIRAPP.RESEARCHSUBJECT_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_RESEARCHSUBJECT_QUANTITY_VALUES_PCLHSR ON FHIRAPP.RESEARCHSUBJECT_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_RESEARCHSUBJECT_QUANTITY_VALUES_PNNV ON FHIRAPP.RESEARCHSUBJECT_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_RESEARCHSUBJECT_QUANTITY_VALUES_RPCLHS ON FHIRAPP.RESEARCHSUBJECT_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_RESEARCHSUBJECT_QUANTITY_VALUES_PCHLSR ON FHIRAPP.RESEARCHSUBJECT_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.RESEARCHSUBJECT_QUANTITY_VALUES ADD CONSTRAINT FK_RESEARCHSUBJECT_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.RESEARCHSUBJECT_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.RESEARCHSUBJECT_QUANTITY_VALUES ADD CONSTRAINT FK_RESEARCHSUBJECT_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.RESEARCHSUBJECT_QUANTITY_VALUES_TENANT                      ON FHIRAPP.RESEARCHSUBJECT_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.RESEARCHSUBJECT_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.RESEARCHSUBJECT_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.SUBSCRIPTION_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT SUBSCRIPTION_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.SUBSCRIPTION_LOGICAL_RESOURCES ADD CONSTRAINT FK_SUBSCRIPTION_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.SUBSCRIPTION_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.SUBSCRIPTION_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.SUBSCRIPTION_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.SUBSCRIPTION_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.SUBSCRIPTION_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT SUBSCRIPTION_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.SUBSCRIPTION_RESOURCES_PRF_IN1 ON FHIRAPP.SUBSCRIPTION_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.SUBSCRIPTION_RESOURCES_TENANT                      ON FHIRAPP.SUBSCRIPTION_RESOURCES          FOR ROWS WHERE FHIRAPP.SUBSCRIPTION_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.SUBSCRIPTION_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.SUBSCRIPTION_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_SUBSCRIPTION_STR_VALUES_RPL ON FHIRAPP.SUBSCRIPTION_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

CREATE INDEX FHIRAPP.IDX_SUBSCRIPTION_STR_VALUES_PSR ON FHIRAPP.SUBSCRIPTION_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SUBSCRIPTION_STR_VALUES_PLR ON FHIRAPP.SUBSCRIPTION_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SUBSCRIPTION_STR_VALUES_RPS ON FHIRAPP.SUBSCRIPTION_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

ALTER TABLE FHIRAPP.SUBSCRIPTION_STR_VALUES ADD CONSTRAINT FK_SUBSCRIPTION_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.SUBSCRIPTION_STR_VALUES ADD CONSTRAINT FK_SUBSCRIPTION_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.SUBSCRIPTION_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.SUBSCRIPTION_STR_VALUES_TENANT                      ON FHIRAPP.SUBSCRIPTION_STR_VALUES          FOR ROWS WHERE FHIRAPP.SUBSCRIPTION_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.SUBSCRIPTION_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.SUBSCRIPTION_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_SUBSCRIPTION_TOKEN_VALUES_PNCSCV ON FHIRAPP.SUBSCRIPTION_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SUBSCRIPTION_TOKEN_VALUES_RPS ON FHIRAPP.SUBSCRIPTION_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

ALTER TABLE FHIRAPP.SUBSCRIPTION_TOKEN_VALUES ADD CONSTRAINT FK_SUBSCRIPTION_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.SUBSCRIPTION_TOKEN_VALUES ADD CONSTRAINT FK_SUBSCRIPTION_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

ALTER TABLE FHIRAPP.SUBSCRIPTION_TOKEN_VALUES ADD CONSTRAINT FK_SUBSCRIPTION_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.SUBSCRIPTION_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.SUBSCRIPTION_TOKEN_VALUES_TENANT                      ON FHIRAPP.SUBSCRIPTION_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.SUBSCRIPTION_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.SUBSCRIPTION_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.SUBSCRIPTION_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_SUBSCRIPTION_DATE_VALUES_PVR ON FHIRAPP.SUBSCRIPTION_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SUBSCRIPTION_DATE_VALUES_PSER ON FHIRAPP.SUBSCRIPTION_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SUBSCRIPTION_DATE_VALUES_RPSE ON FHIRAPP.SUBSCRIPTION_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

CREATE INDEX FHIRAPP.IDX_SUBSCRIPTION_DATE_VALUES_RPV ON FHIRAPP.SUBSCRIPTION_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

CREATE INDEX FHIRAPP.IDX_SUBSCRIPTION_DATE_VALUES_PESR ON FHIRAPP.SUBSCRIPTION_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.SUBSCRIPTION_DATE_VALUES ADD CONSTRAINT FK_SUBSCRIPTION_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.SUBSCRIPTION_DATE_VALUES ADD CONSTRAINT FK_SUBSCRIPTION_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.SUBSCRIPTION_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.SUBSCRIPTION_DATE_VALUES_TENANT                      ON FHIRAPP.SUBSCRIPTION_DATE_VALUES          FOR ROWS WHERE FHIRAPP.SUBSCRIPTION_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.SUBSCRIPTION_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.SUBSCRIPTION_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_SUBSCRIPTION_NUMBER_VALUES_PNNV ON FHIRAPP.SUBSCRIPTION_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SUBSCRIPTION_NUMBER_VALUES_RPS ON FHIRAPP.SUBSCRIPTION_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

ALTER TABLE FHIRAPP.SUBSCRIPTION_NUMBER_VALUES ADD CONSTRAINT FK_SUBSCRIPTION_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.SUBSCRIPTION_NUMBER_VALUES ADD CONSTRAINT FK_SUBSCRIPTION_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.SUBSCRIPTION_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.SUBSCRIPTION_NUMBER_VALUES_TENANT                      ON FHIRAPP.SUBSCRIPTION_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.SUBSCRIPTION_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.SUBSCRIPTION_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.SUBSCRIPTION_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_SUBSCRIPTION_LATLNG_VALUES_RPLAT ON FHIRAPP.SUBSCRIPTION_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_SUBSCRIPTION_LATLNG_VALUES_PNNHV ON FHIRAPP.SUBSCRIPTION_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SUBSCRIPTION_LATLNG_VALUES_PNNLV ON FHIRAPP.SUBSCRIPTION_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SUBSCRIPTION_LATLNG_VALUES_RPLNG ON FHIRAPP.SUBSCRIPTION_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

ALTER TABLE FHIRAPP.SUBSCRIPTION_LATLNG_VALUES ADD CONSTRAINT FK_SUBSCRIPTION_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.SUBSCRIPTION_LATLNG_VALUES ADD CONSTRAINT FK_SUBSCRIPTION_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.SUBSCRIPTION_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.SUBSCRIPTION_LATLNG_VALUES_TENANT                      ON FHIRAPP.SUBSCRIPTION_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.SUBSCRIPTION_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.SUBSCRIPTION_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.SUBSCRIPTION_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_SUBSCRIPTION_QUANTITY_VALUES_RPS ON FHIRAPP.SUBSCRIPTION_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_SUBSCRIPTION_QUANTITY_VALUES_RPCLHS ON FHIRAPP.SUBSCRIPTION_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_SUBSCRIPTION_QUANTITY_VALUES_PCLHSR ON FHIRAPP.SUBSCRIPTION_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SUBSCRIPTION_QUANTITY_VALUES_PNNV ON FHIRAPP.SUBSCRIPTION_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_SUBSCRIPTION_QUANTITY_VALUES_RPCHLS ON FHIRAPP.SUBSCRIPTION_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_SUBSCRIPTION_QUANTITY_VALUES_PCHLSR ON FHIRAPP.SUBSCRIPTION_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.SUBSCRIPTION_QUANTITY_VALUES ADD CONSTRAINT FK_SUBSCRIPTION_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.SUBSCRIPTION_QUANTITY_VALUES ADD CONSTRAINT FK_SUBSCRIPTION_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.SUBSCRIPTION_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.SUBSCRIPTION_QUANTITY_VALUES_TENANT                      ON FHIRAPP.SUBSCRIPTION_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.SUBSCRIPTION_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.SUBSCRIPTION_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.DOCUMENTREFERENCE_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT DOCUMENTREFERENCE_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.DOCUMENTREFERENCE_LOGICAL_RESOURCES ADD CONSTRAINT FK_DOCUMENTREFERENCE_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.DOCUMENTREFERENCE_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.DOCUMENTREFERENCE_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.DOCUMENTREFERENCE_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.DOCUMENTREFERENCE_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.DOCUMENTREFERENCE_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT DOCUMENTREFERENCE_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.DOCUMENTREFERENCE_RESOURCES_PRF_IN1 ON FHIRAPP.DOCUMENTREFERENCE_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.DOCUMENTREFERENCE_RESOURCES_TENANT                      ON FHIRAPP.DOCUMENTREFERENCE_RESOURCES          FOR ROWS WHERE FHIRAPP.DOCUMENTREFERENCE_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.DOCUMENTREFERENCE_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.DOCUMENTREFERENCE_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_DOCUMENTREFERENCE_STR_VALUES_PLR ON FHIRAPP.DOCUMENTREFERENCE_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_DOCUMENTREFERENCE_STR_VALUES_RPS ON FHIRAPP.DOCUMENTREFERENCE_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

CREATE INDEX FHIRAPP.IDX_DOCUMENTREFERENCE_STR_VALUES_PSR ON FHIRAPP.DOCUMENTREFERENCE_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_DOCUMENTREFERENCE_STR_VALUES_RPL ON FHIRAPP.DOCUMENTREFERENCE_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

ALTER TABLE FHIRAPP.DOCUMENTREFERENCE_STR_VALUES ADD CONSTRAINT FK_DOCUMENTREFERENCE_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.DOCUMENTREFERENCE_STR_VALUES ADD CONSTRAINT FK_DOCUMENTREFERENCE_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.DOCUMENTREFERENCE_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.DOCUMENTREFERENCE_STR_VALUES_TENANT                      ON FHIRAPP.DOCUMENTREFERENCE_STR_VALUES          FOR ROWS WHERE FHIRAPP.DOCUMENTREFERENCE_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.DOCUMENTREFERENCE_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.DOCUMENTREFERENCE_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_DOCUMENTREFERENCE_TOKEN_VALUES_RPS ON FHIRAPP.DOCUMENTREFERENCE_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

CREATE INDEX FHIRAPP.IDX_DOCUMENTREFERENCE_TOKEN_VALUES_PNCSCV ON FHIRAPP.DOCUMENTREFERENCE_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.DOCUMENTREFERENCE_TOKEN_VALUES ADD CONSTRAINT FK_DOCUMENTREFERENCE_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.DOCUMENTREFERENCE_TOKEN_VALUES ADD CONSTRAINT FK_DOCUMENTREFERENCE_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

ALTER TABLE FHIRAPP.DOCUMENTREFERENCE_TOKEN_VALUES ADD CONSTRAINT FK_DOCUMENTREFERENCE_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.DOCUMENTREFERENCE_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.DOCUMENTREFERENCE_TOKEN_VALUES_TENANT                      ON FHIRAPP.DOCUMENTREFERENCE_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.DOCUMENTREFERENCE_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.DOCUMENTREFERENCE_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.DOCUMENTREFERENCE_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_DOCUMENTREFERENCE_DATE_VALUES_PVR ON FHIRAPP.DOCUMENTREFERENCE_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_DOCUMENTREFERENCE_DATE_VALUES_PESR ON FHIRAPP.DOCUMENTREFERENCE_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_DOCUMENTREFERENCE_DATE_VALUES_RPV ON FHIRAPP.DOCUMENTREFERENCE_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

CREATE INDEX FHIRAPP.IDX_DOCUMENTREFERENCE_DATE_VALUES_RPSE ON FHIRAPP.DOCUMENTREFERENCE_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

CREATE INDEX FHIRAPP.IDX_DOCUMENTREFERENCE_DATE_VALUES_PSER ON FHIRAPP.DOCUMENTREFERENCE_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.DOCUMENTREFERENCE_DATE_VALUES ADD CONSTRAINT FK_DOCUMENTREFERENCE_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.DOCUMENTREFERENCE_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.DOCUMENTREFERENCE_DATE_VALUES ADD CONSTRAINT FK_DOCUMENTREFERENCE_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.DOCUMENTREFERENCE_DATE_VALUES_TENANT                      ON FHIRAPP.DOCUMENTREFERENCE_DATE_VALUES          FOR ROWS WHERE FHIRAPP.DOCUMENTREFERENCE_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.DOCUMENTREFERENCE_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.DOCUMENTREFERENCE_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_DOCUMENTREFERENCE_NUMBER_VALUES_RPS ON FHIRAPP.DOCUMENTREFERENCE_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

CREATE INDEX FHIRAPP.IDX_DOCUMENTREFERENCE_NUMBER_VALUES_PNNV ON FHIRAPP.DOCUMENTREFERENCE_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.DOCUMENTREFERENCE_NUMBER_VALUES ADD CONSTRAINT FK_DOCUMENTREFERENCE_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.DOCUMENTREFERENCE_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.DOCUMENTREFERENCE_NUMBER_VALUES ADD CONSTRAINT FK_DOCUMENTREFERENCE_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.DOCUMENTREFERENCE_NUMBER_VALUES_TENANT                      ON FHIRAPP.DOCUMENTREFERENCE_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.DOCUMENTREFERENCE_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.DOCUMENTREFERENCE_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.DOCUMENTREFERENCE_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_DOCUMENTREFERENCE_LATLNG_VALUES_PNNLV ON FHIRAPP.DOCUMENTREFERENCE_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_DOCUMENTREFERENCE_LATLNG_VALUES_RPLNG ON FHIRAPP.DOCUMENTREFERENCE_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_DOCUMENTREFERENCE_LATLNG_VALUES_PNNHV ON FHIRAPP.DOCUMENTREFERENCE_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_DOCUMENTREFERENCE_LATLNG_VALUES_RPLAT ON FHIRAPP.DOCUMENTREFERENCE_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

ALTER TABLE FHIRAPP.DOCUMENTREFERENCE_LATLNG_VALUES ADD CONSTRAINT FK_DOCUMENTREFERENCE_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.DOCUMENTREFERENCE_LATLNG_VALUES ADD CONSTRAINT FK_DOCUMENTREFERENCE_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.DOCUMENTREFERENCE_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.DOCUMENTREFERENCE_LATLNG_VALUES_TENANT                      ON FHIRAPP.DOCUMENTREFERENCE_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.DOCUMENTREFERENCE_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.DOCUMENTREFERENCE_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.DOCUMENTREFERENCE_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_DOCUMENTREFERENCE_QUANTITY_VALUES_RPCLHS ON FHIRAPP.DOCUMENTREFERENCE_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_DOCUMENTREFERENCE_QUANTITY_VALUES_PNNV ON FHIRAPP.DOCUMENTREFERENCE_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_DOCUMENTREFERENCE_QUANTITY_VALUES_PCLHSR ON FHIRAPP.DOCUMENTREFERENCE_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_DOCUMENTREFERENCE_QUANTITY_VALUES_RPCHLS ON FHIRAPP.DOCUMENTREFERENCE_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_DOCUMENTREFERENCE_QUANTITY_VALUES_RPS ON FHIRAPP.DOCUMENTREFERENCE_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_DOCUMENTREFERENCE_QUANTITY_VALUES_PCHLSR ON FHIRAPP.DOCUMENTREFERENCE_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.DOCUMENTREFERENCE_QUANTITY_VALUES ADD CONSTRAINT FK_DOCUMENTREFERENCE_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.DOCUMENTREFERENCE_QUANTITY_VALUES ADD CONSTRAINT FK_DOCUMENTREFERENCE_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.DOCUMENTREFERENCE_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.DOCUMENTREFERENCE_QUANTITY_VALUES_TENANT                      ON FHIRAPP.DOCUMENTREFERENCE_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.DOCUMENTREFERENCE_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.DOCUMENTREFERENCE_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.GRAPHDEFINITION_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT GRAPHDEFINITION_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.GRAPHDEFINITION_LOGICAL_RESOURCES ADD CONSTRAINT FK_GRAPHDEFINITION_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.GRAPHDEFINITION_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.GRAPHDEFINITION_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.GRAPHDEFINITION_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.GRAPHDEFINITION_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.GRAPHDEFINITION_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT GRAPHDEFINITION_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.GRAPHDEFINITION_RESOURCES_PRF_IN1 ON FHIRAPP.GRAPHDEFINITION_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.GRAPHDEFINITION_RESOURCES_TENANT                      ON FHIRAPP.GRAPHDEFINITION_RESOURCES          FOR ROWS WHERE FHIRAPP.GRAPHDEFINITION_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.GRAPHDEFINITION_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.GRAPHDEFINITION_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_GRAPHDEFINITION_STR_VALUES_RPS ON FHIRAPP.GRAPHDEFINITION_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

CREATE INDEX FHIRAPP.IDX_GRAPHDEFINITION_STR_VALUES_PLR ON FHIRAPP.GRAPHDEFINITION_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_GRAPHDEFINITION_STR_VALUES_PSR ON FHIRAPP.GRAPHDEFINITION_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_GRAPHDEFINITION_STR_VALUES_RPL ON FHIRAPP.GRAPHDEFINITION_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

ALTER TABLE FHIRAPP.GRAPHDEFINITION_STR_VALUES ADD CONSTRAINT FK_GRAPHDEFINITION_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.GRAPHDEFINITION_STR_VALUES ADD CONSTRAINT FK_GRAPHDEFINITION_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.GRAPHDEFINITION_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.GRAPHDEFINITION_STR_VALUES_TENANT                      ON FHIRAPP.GRAPHDEFINITION_STR_VALUES          FOR ROWS WHERE FHIRAPP.GRAPHDEFINITION_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.GRAPHDEFINITION_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.GRAPHDEFINITION_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_GRAPHDEFINITION_TOKEN_VALUES_PNCSCV ON FHIRAPP.GRAPHDEFINITION_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_GRAPHDEFINITION_TOKEN_VALUES_RPS ON FHIRAPP.GRAPHDEFINITION_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

ALTER TABLE FHIRAPP.GRAPHDEFINITION_TOKEN_VALUES ADD CONSTRAINT FK_GRAPHDEFINITION_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

ALTER TABLE FHIRAPP.GRAPHDEFINITION_TOKEN_VALUES ADD CONSTRAINT FK_GRAPHDEFINITION_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.GRAPHDEFINITION_TOKEN_VALUES ADD CONSTRAINT FK_GRAPHDEFINITION_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.GRAPHDEFINITION_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.GRAPHDEFINITION_TOKEN_VALUES_TENANT                      ON FHIRAPP.GRAPHDEFINITION_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.GRAPHDEFINITION_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.GRAPHDEFINITION_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.GRAPHDEFINITION_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_GRAPHDEFINITION_DATE_VALUES_PSER ON FHIRAPP.GRAPHDEFINITION_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_GRAPHDEFINITION_DATE_VALUES_PVR ON FHIRAPP.GRAPHDEFINITION_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_GRAPHDEFINITION_DATE_VALUES_RPV ON FHIRAPP.GRAPHDEFINITION_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

CREATE INDEX FHIRAPP.IDX_GRAPHDEFINITION_DATE_VALUES_RPSE ON FHIRAPP.GRAPHDEFINITION_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

CREATE INDEX FHIRAPP.IDX_GRAPHDEFINITION_DATE_VALUES_PESR ON FHIRAPP.GRAPHDEFINITION_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.GRAPHDEFINITION_DATE_VALUES ADD CONSTRAINT FK_GRAPHDEFINITION_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.GRAPHDEFINITION_DATE_VALUES ADD CONSTRAINT FK_GRAPHDEFINITION_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.GRAPHDEFINITION_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.GRAPHDEFINITION_DATE_VALUES_TENANT                      ON FHIRAPP.GRAPHDEFINITION_DATE_VALUES          FOR ROWS WHERE FHIRAPP.GRAPHDEFINITION_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.GRAPHDEFINITION_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.GRAPHDEFINITION_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_GRAPHDEFINITION_NUMBER_VALUES_PNNV ON FHIRAPP.GRAPHDEFINITION_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_GRAPHDEFINITION_NUMBER_VALUES_RPS ON FHIRAPP.GRAPHDEFINITION_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

ALTER TABLE FHIRAPP.GRAPHDEFINITION_NUMBER_VALUES ADD CONSTRAINT FK_GRAPHDEFINITION_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.GRAPHDEFINITION_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.GRAPHDEFINITION_NUMBER_VALUES ADD CONSTRAINT FK_GRAPHDEFINITION_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.GRAPHDEFINITION_NUMBER_VALUES_TENANT                      ON FHIRAPP.GRAPHDEFINITION_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.GRAPHDEFINITION_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.GRAPHDEFINITION_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.GRAPHDEFINITION_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_GRAPHDEFINITION_LATLNG_VALUES_RPLNG ON FHIRAPP.GRAPHDEFINITION_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_GRAPHDEFINITION_LATLNG_VALUES_PNNLV ON FHIRAPP.GRAPHDEFINITION_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_GRAPHDEFINITION_LATLNG_VALUES_PNNHV ON FHIRAPP.GRAPHDEFINITION_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_GRAPHDEFINITION_LATLNG_VALUES_RPLAT ON FHIRAPP.GRAPHDEFINITION_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

ALTER TABLE FHIRAPP.GRAPHDEFINITION_LATLNG_VALUES ADD CONSTRAINT FK_GRAPHDEFINITION_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.GRAPHDEFINITION_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.GRAPHDEFINITION_LATLNG_VALUES ADD CONSTRAINT FK_GRAPHDEFINITION_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.GRAPHDEFINITION_LATLNG_VALUES_TENANT                      ON FHIRAPP.GRAPHDEFINITION_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.GRAPHDEFINITION_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.GRAPHDEFINITION_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.GRAPHDEFINITION_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_GRAPHDEFINITION_QUANTITY_VALUES_PCHLSR ON FHIRAPP.GRAPHDEFINITION_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_GRAPHDEFINITION_QUANTITY_VALUES_RPCLHS ON FHIRAPP.GRAPHDEFINITION_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_GRAPHDEFINITION_QUANTITY_VALUES_PCLHSR ON FHIRAPP.GRAPHDEFINITION_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_GRAPHDEFINITION_QUANTITY_VALUES_PNNV ON FHIRAPP.GRAPHDEFINITION_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_GRAPHDEFINITION_QUANTITY_VALUES_RPS ON FHIRAPP.GRAPHDEFINITION_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_GRAPHDEFINITION_QUANTITY_VALUES_RPCHLS ON FHIRAPP.GRAPHDEFINITION_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

ALTER TABLE FHIRAPP.GRAPHDEFINITION_QUANTITY_VALUES ADD CONSTRAINT FK_GRAPHDEFINITION_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.GRAPHDEFINITION_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.GRAPHDEFINITION_QUANTITY_VALUES ADD CONSTRAINT FK_GRAPHDEFINITION_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.GRAPHDEFINITION_QUANTITY_VALUES_TENANT                      ON FHIRAPP.GRAPHDEFINITION_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.GRAPHDEFINITION_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.GRAPHDEFINITION_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.PARAMETERS_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT PARAMETERS_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.PARAMETERS_LOGICAL_RESOURCES ADD CONSTRAINT FK_PARAMETERS_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.PARAMETERS_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.PARAMETERS_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.PARAMETERS_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.PARAMETERS_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.PARAMETERS_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT PARAMETERS_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.PARAMETERS_RESOURCES_PRF_IN1 ON FHIRAPP.PARAMETERS_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.PARAMETERS_RESOURCES_TENANT                      ON FHIRAPP.PARAMETERS_RESOURCES          FOR ROWS WHERE FHIRAPP.PARAMETERS_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.PARAMETERS_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.PARAMETERS_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_PARAMETERS_STR_VALUES_PSR ON FHIRAPP.PARAMETERS_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_PARAMETERS_STR_VALUES_RPL ON FHIRAPP.PARAMETERS_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

CREATE INDEX FHIRAPP.IDX_PARAMETERS_STR_VALUES_RPS ON FHIRAPP.PARAMETERS_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

CREATE INDEX FHIRAPP.IDX_PARAMETERS_STR_VALUES_PLR ON FHIRAPP.PARAMETERS_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.PARAMETERS_STR_VALUES ADD CONSTRAINT FK_PARAMETERS_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.PARAMETERS_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.PARAMETERS_STR_VALUES ADD CONSTRAINT FK_PARAMETERS_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.PARAMETERS_STR_VALUES_TENANT                      ON FHIRAPP.PARAMETERS_STR_VALUES          FOR ROWS WHERE FHIRAPP.PARAMETERS_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.PARAMETERS_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.PARAMETERS_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_PARAMETERS_TOKEN_VALUES_RPS ON FHIRAPP.PARAMETERS_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

CREATE INDEX FHIRAPP.IDX_PARAMETERS_TOKEN_VALUES_PNCSCV ON FHIRAPP.PARAMETERS_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.PARAMETERS_TOKEN_VALUES ADD CONSTRAINT FK_PARAMETERS_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

ALTER TABLE FHIRAPP.PARAMETERS_TOKEN_VALUES ADD CONSTRAINT FK_PARAMETERS_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.PARAMETERS_TOKEN_VALUES ADD CONSTRAINT FK_PARAMETERS_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.PARAMETERS_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.PARAMETERS_TOKEN_VALUES_TENANT                      ON FHIRAPP.PARAMETERS_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.PARAMETERS_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.PARAMETERS_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.PARAMETERS_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_PARAMETERS_DATE_VALUES_PVR ON FHIRAPP.PARAMETERS_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_PARAMETERS_DATE_VALUES_RPSE ON FHIRAPP.PARAMETERS_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

CREATE INDEX FHIRAPP.IDX_PARAMETERS_DATE_VALUES_PSER ON FHIRAPP.PARAMETERS_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_PARAMETERS_DATE_VALUES_RPV ON FHIRAPP.PARAMETERS_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

CREATE INDEX FHIRAPP.IDX_PARAMETERS_DATE_VALUES_PESR ON FHIRAPP.PARAMETERS_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.PARAMETERS_DATE_VALUES ADD CONSTRAINT FK_PARAMETERS_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.PARAMETERS_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.PARAMETERS_DATE_VALUES ADD CONSTRAINT FK_PARAMETERS_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.PARAMETERS_DATE_VALUES_TENANT                      ON FHIRAPP.PARAMETERS_DATE_VALUES          FOR ROWS WHERE FHIRAPP.PARAMETERS_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.PARAMETERS_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.PARAMETERS_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_PARAMETERS_NUMBER_VALUES_RPS ON FHIRAPP.PARAMETERS_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

CREATE INDEX FHIRAPP.IDX_PARAMETERS_NUMBER_VALUES_PNNV ON FHIRAPP.PARAMETERS_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.PARAMETERS_NUMBER_VALUES ADD CONSTRAINT FK_PARAMETERS_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.PARAMETERS_NUMBER_VALUES ADD CONSTRAINT FK_PARAMETERS_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.PARAMETERS_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.PARAMETERS_NUMBER_VALUES_TENANT                      ON FHIRAPP.PARAMETERS_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.PARAMETERS_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.PARAMETERS_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.PARAMETERS_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_PARAMETERS_LATLNG_VALUES_RPLNG ON FHIRAPP.PARAMETERS_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_PARAMETERS_LATLNG_VALUES_PNNLV ON FHIRAPP.PARAMETERS_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_PARAMETERS_LATLNG_VALUES_PNNHV ON FHIRAPP.PARAMETERS_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_PARAMETERS_LATLNG_VALUES_RPLAT ON FHIRAPP.PARAMETERS_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

ALTER TABLE FHIRAPP.PARAMETERS_LATLNG_VALUES ADD CONSTRAINT FK_PARAMETERS_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.PARAMETERS_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.PARAMETERS_LATLNG_VALUES ADD CONSTRAINT FK_PARAMETERS_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.PARAMETERS_LATLNG_VALUES_TENANT                      ON FHIRAPP.PARAMETERS_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.PARAMETERS_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.PARAMETERS_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.PARAMETERS_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_PARAMETERS_QUANTITY_VALUES_RPS ON FHIRAPP.PARAMETERS_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_PARAMETERS_QUANTITY_VALUES_RPCLHS ON FHIRAPP.PARAMETERS_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_PARAMETERS_QUANTITY_VALUES_PCLHSR ON FHIRAPP.PARAMETERS_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_PARAMETERS_QUANTITY_VALUES_PNNV ON FHIRAPP.PARAMETERS_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_PARAMETERS_QUANTITY_VALUES_RPCHLS ON FHIRAPP.PARAMETERS_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_PARAMETERS_QUANTITY_VALUES_PCHLSR ON FHIRAPP.PARAMETERS_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.PARAMETERS_QUANTITY_VALUES ADD CONSTRAINT FK_PARAMETERS_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.PARAMETERS_QUANTITY_VALUES ADD CONSTRAINT FK_PARAMETERS_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.PARAMETERS_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.PARAMETERS_QUANTITY_VALUES_TENANT                      ON FHIRAPP.PARAMETERS_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.PARAMETERS_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.PARAMETERS_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.COVERAGEELIGIBILITYRESPONSE_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT COVERAGEELIGIBILITYRESPONSE_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.COVERAGEELIGIBILITYRESPONSE_LOGICAL_RESOURCES ADD CONSTRAINT FK_COVERAGEELIGIBILITYRESPONSE_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.COVERAGEELIGIBILITYRESPONSE_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.COVERAGEELIGIBILITYRESPONSE_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.COVERAGEELIGIBILITYRESPONSE_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.COVERAGEELIGIBILITYRESPONSE_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.COVERAGEELIGIBILITYRESPONSE_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT COVERAGEELIGIBILITYRESPONSE_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.COVERAGEELIGIBILITYRESPONSE_RESOURCES_PRF_IN1 ON FHIRAPP.COVERAGEELIGIBILITYRESPONSE_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.COVERAGEELIGIBILITYRESPONSE_RESOURCES_TENANT                      ON FHIRAPP.COVERAGEELIGIBILITYRESPONSE_RESOURCES          FOR ROWS WHERE FHIRAPP.COVERAGEELIGIBILITYRESPONSE_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.COVERAGEELIGIBILITYRESPONSE_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.COVERAGEELIGIBILITYRESPONSE_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_COVERAGEELIGIBILITYRESPONSE_STR_VALUES_RPS ON FHIRAPP.COVERAGEELIGIBILITYRESPONSE_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

CREATE INDEX FHIRAPP.IDX_COVERAGEELIGIBILITYRESPONSE_STR_VALUES_PLR ON FHIRAPP.COVERAGEELIGIBILITYRESPONSE_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_COVERAGEELIGIBILITYRESPONSE_STR_VALUES_PSR ON FHIRAPP.COVERAGEELIGIBILITYRESPONSE_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_COVERAGEELIGIBILITYRESPONSE_STR_VALUES_RPL ON FHIRAPP.COVERAGEELIGIBILITYRESPONSE_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

ALTER TABLE FHIRAPP.COVERAGEELIGIBILITYRESPONSE_STR_VALUES ADD CONSTRAINT FK_COVERAGEELIGIBILITYRESPONSE_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.COVERAGEELIGIBILITYRESPONSE_STR_VALUES ADD CONSTRAINT FK_COVERAGEELIGIBILITYRESPONSE_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.COVERAGEELIGIBILITYRESPONSE_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.COVERAGEELIGIBILITYRESPONSE_STR_VALUES_TENANT                      ON FHIRAPP.COVERAGEELIGIBILITYRESPONSE_STR_VALUES          FOR ROWS WHERE FHIRAPP.COVERAGEELIGIBILITYRESPONSE_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.COVERAGEELIGIBILITYRESPONSE_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.COVERAGEELIGIBILITYRESPONSE_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_COVERAGEELIGIBILITYRESPONSE_TOKEN_VALUES_PNCSCV ON FHIRAPP.COVERAGEELIGIBILITYRESPONSE_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_COVERAGEELIGIBILITYRESPONSE_TOKEN_VALUES_RPS ON FHIRAPP.COVERAGEELIGIBILITYRESPONSE_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

ALTER TABLE FHIRAPP.COVERAGEELIGIBILITYRESPONSE_TOKEN_VALUES ADD CONSTRAINT FK_COVERAGEELIGIBILITYRESPONSE_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.COVERAGEELIGIBILITYRESPONSE_TOKEN_VALUES ADD CONSTRAINT FK_COVERAGEELIGIBILITYRESPONSE_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

ALTER TABLE FHIRAPP.COVERAGEELIGIBILITYRESPONSE_TOKEN_VALUES ADD CONSTRAINT FK_COVERAGEELIGIBILITYRESPONSE_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.COVERAGEELIGIBILITYRESPONSE_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.COVERAGEELIGIBILITYRESPONSE_TOKEN_VALUES_TENANT                      ON FHIRAPP.COVERAGEELIGIBILITYRESPONSE_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.COVERAGEELIGIBILITYRESPONSE_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.COVERAGEELIGIBILITYRESPONSE_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.COVERAGEELIGIBILITYRESPONSE_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_COVERAGEELIGIBILITYRESPONSE_DATE_VALUES_PVR ON FHIRAPP.COVERAGEELIGIBILITYRESPONSE_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_COVERAGEELIGIBILITYRESPONSE_DATE_VALUES_RPV ON FHIRAPP.COVERAGEELIGIBILITYRESPONSE_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

CREATE INDEX FHIRAPP.IDX_COVERAGEELIGIBILITYRESPONSE_DATE_VALUES_PESR ON FHIRAPP.COVERAGEELIGIBILITYRESPONSE_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_COVERAGEELIGIBILITYRESPONSE_DATE_VALUES_RPSE ON FHIRAPP.COVERAGEELIGIBILITYRESPONSE_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

CREATE INDEX FHIRAPP.IDX_COVERAGEELIGIBILITYRESPONSE_DATE_VALUES_PSER ON FHIRAPP.COVERAGEELIGIBILITYRESPONSE_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.COVERAGEELIGIBILITYRESPONSE_DATE_VALUES ADD CONSTRAINT FK_COVERAGEELIGIBILITYRESPONSE_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.COVERAGEELIGIBILITYRESPONSE_DATE_VALUES ADD CONSTRAINT FK_COVERAGEELIGIBILITYRESPONSE_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.COVERAGEELIGIBILITYRESPONSE_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.COVERAGEELIGIBILITYRESPONSE_DATE_VALUES_TENANT                      ON FHIRAPP.COVERAGEELIGIBILITYRESPONSE_DATE_VALUES          FOR ROWS WHERE FHIRAPP.COVERAGEELIGIBILITYRESPONSE_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.COVERAGEELIGIBILITYRESPONSE_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.COVERAGEELIGIBILITYRESPONSE_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_COVERAGEELIGIBILITYRESPONSE_NUMBER_VALUES_PNNV ON FHIRAPP.COVERAGEELIGIBILITYRESPONSE_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_COVERAGEELIGIBILITYRESPONSE_NUMBER_VALUES_RPS ON FHIRAPP.COVERAGEELIGIBILITYRESPONSE_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

ALTER TABLE FHIRAPP.COVERAGEELIGIBILITYRESPONSE_NUMBER_VALUES ADD CONSTRAINT FK_COVERAGEELIGIBILITYRESPONSE_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.COVERAGEELIGIBILITYRESPONSE_NUMBER_VALUES ADD CONSTRAINT FK_COVERAGEELIGIBILITYRESPONSE_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.COVERAGEELIGIBILITYRESPONSE_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.COVERAGEELIGIBILITYRESPONSE_NUMBER_VALUES_TENANT                      ON FHIRAPP.COVERAGEELIGIBILITYRESPONSE_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.COVERAGEELIGIBILITYRESPONSE_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.COVERAGEELIGIBILITYRESPONSE_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.COVERAGEELIGIBILITYRESPONSE_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_COVERAGEELIGIBILITYRESPONSE_LATLNG_VALUES_PNNHV ON FHIRAPP.COVERAGEELIGIBILITYRESPONSE_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_COVERAGEELIGIBILITYRESPONSE_LATLNG_VALUES_RPLNG ON FHIRAPP.COVERAGEELIGIBILITYRESPONSE_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_COVERAGEELIGIBILITYRESPONSE_LATLNG_VALUES_PNNLV ON FHIRAPP.COVERAGEELIGIBILITYRESPONSE_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_COVERAGEELIGIBILITYRESPONSE_LATLNG_VALUES_RPLAT ON FHIRAPP.COVERAGEELIGIBILITYRESPONSE_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

ALTER TABLE FHIRAPP.COVERAGEELIGIBILITYRESPONSE_LATLNG_VALUES ADD CONSTRAINT FK_COVERAGEELIGIBILITYRESPONSE_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.COVERAGEELIGIBILITYRESPONSE_LATLNG_VALUES ADD CONSTRAINT FK_COVERAGEELIGIBILITYRESPONSE_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.COVERAGEELIGIBILITYRESPONSE_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.COVERAGEELIGIBILITYRESPONSE_LATLNG_VALUES_TENANT                      ON FHIRAPP.COVERAGEELIGIBILITYRESPONSE_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.COVERAGEELIGIBILITYRESPONSE_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.COVERAGEELIGIBILITYRESPONSE_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.COVERAGEELIGIBILITYRESPONSE_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_COVERAGEELIGIBILITYRESPONSE_QUANTITY_VALUES_PCHLSR ON FHIRAPP.COVERAGEELIGIBILITYRESPONSE_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_COVERAGEELIGIBILITYRESPONSE_QUANTITY_VALUES_RPCHLS ON FHIRAPP.COVERAGEELIGIBILITYRESPONSE_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_COVERAGEELIGIBILITYRESPONSE_QUANTITY_VALUES_PNNV ON FHIRAPP.COVERAGEELIGIBILITYRESPONSE_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_COVERAGEELIGIBILITYRESPONSE_QUANTITY_VALUES_RPCLHS ON FHIRAPP.COVERAGEELIGIBILITYRESPONSE_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_COVERAGEELIGIBILITYRESPONSE_QUANTITY_VALUES_RPS ON FHIRAPP.COVERAGEELIGIBILITYRESPONSE_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_COVERAGEELIGIBILITYRESPONSE_QUANTITY_VALUES_PCLHSR ON FHIRAPP.COVERAGEELIGIBILITYRESPONSE_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.COVERAGEELIGIBILITYRESPONSE_QUANTITY_VALUES ADD CONSTRAINT FK_COVERAGEELIGIBILITYRESPONSE_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.COVERAGEELIGIBILITYRESPONSE_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.COVERAGEELIGIBILITYRESPONSE_QUANTITY_VALUES ADD CONSTRAINT FK_COVERAGEELIGIBILITYRESPONSE_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.COVERAGEELIGIBILITYRESPONSE_QUANTITY_VALUES_TENANT                      ON FHIRAPP.COVERAGEELIGIBILITYRESPONSE_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.COVERAGEELIGIBILITYRESPONSE_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.COVERAGEELIGIBILITYRESPONSE_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEASUREREPORT_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT MEASUREREPORT_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.MEASUREREPORT_LOGICAL_RESOURCES ADD CONSTRAINT FK_MEASUREREPORT_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.MEASUREREPORT_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.MEASUREREPORT_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.MEASUREREPORT_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEASUREREPORT_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEASUREREPORT_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT MEASUREREPORT_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.MEASUREREPORT_RESOURCES_PRF_IN1 ON FHIRAPP.MEASUREREPORT_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.MEASUREREPORT_RESOURCES_TENANT                      ON FHIRAPP.MEASUREREPORT_RESOURCES          FOR ROWS WHERE FHIRAPP.MEASUREREPORT_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEASUREREPORT_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEASUREREPORT_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_MEASUREREPORT_STR_VALUES_PSR ON FHIRAPP.MEASUREREPORT_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEASUREREPORT_STR_VALUES_RPL ON FHIRAPP.MEASUREREPORT_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

CREATE INDEX FHIRAPP.IDX_MEASUREREPORT_STR_VALUES_RPS ON FHIRAPP.MEASUREREPORT_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

CREATE INDEX FHIRAPP.IDX_MEASUREREPORT_STR_VALUES_PLR ON FHIRAPP.MEASUREREPORT_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.MEASUREREPORT_STR_VALUES ADD CONSTRAINT FK_MEASUREREPORT_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.MEASUREREPORT_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.MEASUREREPORT_STR_VALUES ADD CONSTRAINT FK_MEASUREREPORT_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.MEASUREREPORT_STR_VALUES_TENANT                      ON FHIRAPP.MEASUREREPORT_STR_VALUES          FOR ROWS WHERE FHIRAPP.MEASUREREPORT_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEASUREREPORT_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEASUREREPORT_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_MEASUREREPORT_TOKEN_VALUES_RPS ON FHIRAPP.MEASUREREPORT_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

CREATE INDEX FHIRAPP.IDX_MEASUREREPORT_TOKEN_VALUES_PNCSCV ON FHIRAPP.MEASUREREPORT_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.MEASUREREPORT_TOKEN_VALUES ADD CONSTRAINT FK_MEASUREREPORT_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.MEASUREREPORT_TOKEN_VALUES ADD CONSTRAINT FK_MEASUREREPORT_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.MEASUREREPORT_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.MEASUREREPORT_TOKEN_VALUES ADD CONSTRAINT FK_MEASUREREPORT_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

CREATE PERMISSION FHIRAPP.MEASUREREPORT_TOKEN_VALUES_TENANT                      ON FHIRAPP.MEASUREREPORT_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.MEASUREREPORT_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEASUREREPORT_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEASUREREPORT_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_MEASUREREPORT_DATE_VALUES_RPV ON FHIRAPP.MEASUREREPORT_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

CREATE INDEX FHIRAPP.IDX_MEASUREREPORT_DATE_VALUES_PVR ON FHIRAPP.MEASUREREPORT_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEASUREREPORT_DATE_VALUES_PSER ON FHIRAPP.MEASUREREPORT_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEASUREREPORT_DATE_VALUES_PESR ON FHIRAPP.MEASUREREPORT_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEASUREREPORT_DATE_VALUES_RPSE ON FHIRAPP.MEASUREREPORT_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

ALTER TABLE FHIRAPP.MEASUREREPORT_DATE_VALUES ADD CONSTRAINT FK_MEASUREREPORT_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.MEASUREREPORT_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.MEASUREREPORT_DATE_VALUES ADD CONSTRAINT FK_MEASUREREPORT_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.MEASUREREPORT_DATE_VALUES_TENANT                      ON FHIRAPP.MEASUREREPORT_DATE_VALUES          FOR ROWS WHERE FHIRAPP.MEASUREREPORT_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEASUREREPORT_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEASUREREPORT_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_MEASUREREPORT_NUMBER_VALUES_RPS ON FHIRAPP.MEASUREREPORT_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

CREATE INDEX FHIRAPP.IDX_MEASUREREPORT_NUMBER_VALUES_PNNV ON FHIRAPP.MEASUREREPORT_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.MEASUREREPORT_NUMBER_VALUES ADD CONSTRAINT FK_MEASUREREPORT_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.MEASUREREPORT_NUMBER_VALUES ADD CONSTRAINT FK_MEASUREREPORT_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.MEASUREREPORT_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.MEASUREREPORT_NUMBER_VALUES_TENANT                      ON FHIRAPP.MEASUREREPORT_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.MEASUREREPORT_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEASUREREPORT_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEASUREREPORT_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_MEASUREREPORT_LATLNG_VALUES_PNNHV ON FHIRAPP.MEASUREREPORT_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEASUREREPORT_LATLNG_VALUES_RPLAT ON FHIRAPP.MEASUREREPORT_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_MEASUREREPORT_LATLNG_VALUES_PNNLV ON FHIRAPP.MEASUREREPORT_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEASUREREPORT_LATLNG_VALUES_RPLNG ON FHIRAPP.MEASUREREPORT_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

ALTER TABLE FHIRAPP.MEASUREREPORT_LATLNG_VALUES ADD CONSTRAINT FK_MEASUREREPORT_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.MEASUREREPORT_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.MEASUREREPORT_LATLNG_VALUES ADD CONSTRAINT FK_MEASUREREPORT_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.MEASUREREPORT_LATLNG_VALUES_TENANT                      ON FHIRAPP.MEASUREREPORT_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.MEASUREREPORT_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEASUREREPORT_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEASUREREPORT_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_MEASUREREPORT_QUANTITY_VALUES_RPS ON FHIRAPP.MEASUREREPORT_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_MEASUREREPORT_QUANTITY_VALUES_PCHLSR ON FHIRAPP.MEASUREREPORT_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEASUREREPORT_QUANTITY_VALUES_RPCLHS ON FHIRAPP.MEASUREREPORT_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_MEASUREREPORT_QUANTITY_VALUES_PCLHSR ON FHIRAPP.MEASUREREPORT_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEASUREREPORT_QUANTITY_VALUES_PNNV ON FHIRAPP.MEASUREREPORT_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_MEASUREREPORT_QUANTITY_VALUES_RPCHLS ON FHIRAPP.MEASUREREPORT_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

ALTER TABLE FHIRAPP.MEASUREREPORT_QUANTITY_VALUES ADD CONSTRAINT FK_MEASUREREPORT_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.MEASUREREPORT_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.MEASUREREPORT_QUANTITY_VALUES ADD CONSTRAINT FK_MEASUREREPORT_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.MEASUREREPORT_QUANTITY_VALUES_TENANT                      ON FHIRAPP.MEASUREREPORT_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.MEASUREREPORT_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEASUREREPORT_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.PRACTITIONERROLE_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT PRACTITIONERROLE_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.PRACTITIONERROLE_LOGICAL_RESOURCES ADD CONSTRAINT FK_PRACTITIONERROLE_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.PRACTITIONERROLE_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.PRACTITIONERROLE_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.PRACTITIONERROLE_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.PRACTITIONERROLE_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.PRACTITIONERROLE_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT PRACTITIONERROLE_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.PRACTITIONERROLE_RESOURCES_PRF_IN1 ON FHIRAPP.PRACTITIONERROLE_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.PRACTITIONERROLE_RESOURCES_TENANT                      ON FHIRAPP.PRACTITIONERROLE_RESOURCES          FOR ROWS WHERE FHIRAPP.PRACTITIONERROLE_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.PRACTITIONERROLE_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.PRACTITIONERROLE_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_PRACTITIONERROLE_STR_VALUES_RPL ON FHIRAPP.PRACTITIONERROLE_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

CREATE INDEX FHIRAPP.IDX_PRACTITIONERROLE_STR_VALUES_PSR ON FHIRAPP.PRACTITIONERROLE_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_PRACTITIONERROLE_STR_VALUES_RPS ON FHIRAPP.PRACTITIONERROLE_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

CREATE INDEX FHIRAPP.IDX_PRACTITIONERROLE_STR_VALUES_PLR ON FHIRAPP.PRACTITIONERROLE_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.PRACTITIONERROLE_STR_VALUES ADD CONSTRAINT FK_PRACTITIONERROLE_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.PRACTITIONERROLE_STR_VALUES ADD CONSTRAINT FK_PRACTITIONERROLE_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.PRACTITIONERROLE_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.PRACTITIONERROLE_STR_VALUES_TENANT                      ON FHIRAPP.PRACTITIONERROLE_STR_VALUES          FOR ROWS WHERE FHIRAPP.PRACTITIONERROLE_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.PRACTITIONERROLE_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.PRACTITIONERROLE_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_PRACTITIONERROLE_TOKEN_VALUES_PNCSCV ON FHIRAPP.PRACTITIONERROLE_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_PRACTITIONERROLE_TOKEN_VALUES_RPS ON FHIRAPP.PRACTITIONERROLE_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

ALTER TABLE FHIRAPP.PRACTITIONERROLE_TOKEN_VALUES ADD CONSTRAINT FK_PRACTITIONERROLE_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.PRACTITIONERROLE_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.PRACTITIONERROLE_TOKEN_VALUES ADD CONSTRAINT FK_PRACTITIONERROLE_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.PRACTITIONERROLE_TOKEN_VALUES ADD CONSTRAINT FK_PRACTITIONERROLE_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

CREATE PERMISSION FHIRAPP.PRACTITIONERROLE_TOKEN_VALUES_TENANT                      ON FHIRAPP.PRACTITIONERROLE_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.PRACTITIONERROLE_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.PRACTITIONERROLE_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.PRACTITIONERROLE_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_PRACTITIONERROLE_DATE_VALUES_PESR ON FHIRAPP.PRACTITIONERROLE_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_PRACTITIONERROLE_DATE_VALUES_PVR ON FHIRAPP.PRACTITIONERROLE_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_PRACTITIONERROLE_DATE_VALUES_PSER ON FHIRAPP.PRACTITIONERROLE_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_PRACTITIONERROLE_DATE_VALUES_RPSE ON FHIRAPP.PRACTITIONERROLE_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

CREATE INDEX FHIRAPP.IDX_PRACTITIONERROLE_DATE_VALUES_RPV ON FHIRAPP.PRACTITIONERROLE_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

ALTER TABLE FHIRAPP.PRACTITIONERROLE_DATE_VALUES ADD CONSTRAINT FK_PRACTITIONERROLE_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.PRACTITIONERROLE_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.PRACTITIONERROLE_DATE_VALUES ADD CONSTRAINT FK_PRACTITIONERROLE_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.PRACTITIONERROLE_DATE_VALUES_TENANT                      ON FHIRAPP.PRACTITIONERROLE_DATE_VALUES          FOR ROWS WHERE FHIRAPP.PRACTITIONERROLE_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.PRACTITIONERROLE_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.PRACTITIONERROLE_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_PRACTITIONERROLE_NUMBER_VALUES_PNNV ON FHIRAPP.PRACTITIONERROLE_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_PRACTITIONERROLE_NUMBER_VALUES_RPS ON FHIRAPP.PRACTITIONERROLE_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

ALTER TABLE FHIRAPP.PRACTITIONERROLE_NUMBER_VALUES ADD CONSTRAINT FK_PRACTITIONERROLE_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.PRACTITIONERROLE_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.PRACTITIONERROLE_NUMBER_VALUES ADD CONSTRAINT FK_PRACTITIONERROLE_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.PRACTITIONERROLE_NUMBER_VALUES_TENANT                      ON FHIRAPP.PRACTITIONERROLE_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.PRACTITIONERROLE_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.PRACTITIONERROLE_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.PRACTITIONERROLE_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_PRACTITIONERROLE_LATLNG_VALUES_RPLNG ON FHIRAPP.PRACTITIONERROLE_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_PRACTITIONERROLE_LATLNG_VALUES_PNNLV ON FHIRAPP.PRACTITIONERROLE_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_PRACTITIONERROLE_LATLNG_VALUES_PNNHV ON FHIRAPP.PRACTITIONERROLE_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_PRACTITIONERROLE_LATLNG_VALUES_RPLAT ON FHIRAPP.PRACTITIONERROLE_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

ALTER TABLE FHIRAPP.PRACTITIONERROLE_LATLNG_VALUES ADD CONSTRAINT FK_PRACTITIONERROLE_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.PRACTITIONERROLE_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.PRACTITIONERROLE_LATLNG_VALUES ADD CONSTRAINT FK_PRACTITIONERROLE_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.PRACTITIONERROLE_LATLNG_VALUES_TENANT                      ON FHIRAPP.PRACTITIONERROLE_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.PRACTITIONERROLE_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.PRACTITIONERROLE_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.PRACTITIONERROLE_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_PRACTITIONERROLE_QUANTITY_VALUES_PNNV ON FHIRAPP.PRACTITIONERROLE_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_PRACTITIONERROLE_QUANTITY_VALUES_RPS ON FHIRAPP.PRACTITIONERROLE_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_PRACTITIONERROLE_QUANTITY_VALUES_PCHLSR ON FHIRAPP.PRACTITIONERROLE_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_PRACTITIONERROLE_QUANTITY_VALUES_RPCHLS ON FHIRAPP.PRACTITIONERROLE_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_PRACTITIONERROLE_QUANTITY_VALUES_PCLHSR ON FHIRAPP.PRACTITIONERROLE_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_PRACTITIONERROLE_QUANTITY_VALUES_RPCLHS ON FHIRAPP.PRACTITIONERROLE_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

ALTER TABLE FHIRAPP.PRACTITIONERROLE_QUANTITY_VALUES ADD CONSTRAINT FK_PRACTITIONERROLE_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.PRACTITIONERROLE_QUANTITY_VALUES ADD CONSTRAINT FK_PRACTITIONERROLE_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.PRACTITIONERROLE_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.PRACTITIONERROLE_QUANTITY_VALUES_TENANT                      ON FHIRAPP.PRACTITIONERROLE_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.PRACTITIONERROLE_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.PRACTITIONERROLE_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.SUBSTANCEREFERENCEINFORMATION_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT SUBSTANCEREFERENCEINFORMATION_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.SUBSTANCEREFERENCEINFORMATION_LOGICAL_RESOURCES ADD CONSTRAINT FK_SUBSTANCEREFERENCEINFORMATION_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.SUBSTANCEREFERENCEINFORMATION_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.SUBSTANCEREFERENCEINFORMATION_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.SUBSTANCEREFERENCEINFORMATION_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.SUBSTANCEREFERENCEINFORMATION_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.SUBSTANCEREFERENCEINFORMATION_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT SUBSTANCEREFERENCEINFORMATION_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.SUBSTANCEREFERENCEINFORMATION_RESOURCES_PRF_IN1 ON FHIRAPP.SUBSTANCEREFERENCEINFORMATION_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.SUBSTANCEREFERENCEINFORMATION_RESOURCES_TENANT                      ON FHIRAPP.SUBSTANCEREFERENCEINFORMATION_RESOURCES          FOR ROWS WHERE FHIRAPP.SUBSTANCEREFERENCEINFORMATION_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.SUBSTANCEREFERENCEINFORMATION_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.SUBSTANCEREFERENCEINFORMATION_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_SUBSTANCEREFERENCEINFORMATION_STR_VALUES_RPS ON FHIRAPP.SUBSTANCEREFERENCEINFORMATION_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

CREATE INDEX FHIRAPP.IDX_SUBSTANCEREFERENCEINFORMATION_STR_VALUES_PLR ON FHIRAPP.SUBSTANCEREFERENCEINFORMATION_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SUBSTANCEREFERENCEINFORMATION_STR_VALUES_PSR ON FHIRAPP.SUBSTANCEREFERENCEINFORMATION_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SUBSTANCEREFERENCEINFORMATION_STR_VALUES_RPL ON FHIRAPP.SUBSTANCEREFERENCEINFORMATION_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

ALTER TABLE FHIRAPP.SUBSTANCEREFERENCEINFORMATION_STR_VALUES ADD CONSTRAINT FK_SUBSTANCEREFERENCEINFORMATION_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.SUBSTANCEREFERENCEINFORMATION_STR_VALUES ADD CONSTRAINT FK_SUBSTANCEREFERENCEINFORMATION_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.SUBSTANCEREFERENCEINFORMATION_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.SUBSTANCEREFERENCEINFORMATION_STR_VALUES_TENANT                      ON FHIRAPP.SUBSTANCEREFERENCEINFORMATION_STR_VALUES          FOR ROWS WHERE FHIRAPP.SUBSTANCEREFERENCEINFORMATION_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.SUBSTANCEREFERENCEINFORMATION_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.SUBSTANCEREFERENCEINFORMATION_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_SUBSTANCEREFERENCEINFORMATION_TOKEN_VALUES_RPS ON FHIRAPP.SUBSTANCEREFERENCEINFORMATION_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

CREATE INDEX FHIRAPP.IDX_SUBSTANCEREFERENCEINFORMATION_TOKEN_VALUES_PNCSCV ON FHIRAPP.SUBSTANCEREFERENCEINFORMATION_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.SUBSTANCEREFERENCEINFORMATION_TOKEN_VALUES ADD CONSTRAINT FK_SUBSTANCEREFERENCEINFORMATION_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.SUBSTANCEREFERENCEINFORMATION_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.SUBSTANCEREFERENCEINFORMATION_TOKEN_VALUES ADD CONSTRAINT FK_SUBSTANCEREFERENCEINFORMATION_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.SUBSTANCEREFERENCEINFORMATION_TOKEN_VALUES ADD CONSTRAINT FK_SUBSTANCEREFERENCEINFORMATION_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

CREATE PERMISSION FHIRAPP.SUBSTANCEREFERENCEINFORMATION_TOKEN_VALUES_TENANT                      ON FHIRAPP.SUBSTANCEREFERENCEINFORMATION_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.SUBSTANCEREFERENCEINFORMATION_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.SUBSTANCEREFERENCEINFORMATION_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.SUBSTANCEREFERENCEINFORMATION_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_SUBSTANCEREFERENCEINFORMATION_DATE_VALUES_PSER ON FHIRAPP.SUBSTANCEREFERENCEINFORMATION_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SUBSTANCEREFERENCEINFORMATION_DATE_VALUES_RPSE ON FHIRAPP.SUBSTANCEREFERENCEINFORMATION_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

CREATE INDEX FHIRAPP.IDX_SUBSTANCEREFERENCEINFORMATION_DATE_VALUES_RPV ON FHIRAPP.SUBSTANCEREFERENCEINFORMATION_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

CREATE INDEX FHIRAPP.IDX_SUBSTANCEREFERENCEINFORMATION_DATE_VALUES_PESR ON FHIRAPP.SUBSTANCEREFERENCEINFORMATION_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SUBSTANCEREFERENCEINFORMATION_DATE_VALUES_PVR ON FHIRAPP.SUBSTANCEREFERENCEINFORMATION_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.SUBSTANCEREFERENCEINFORMATION_DATE_VALUES ADD CONSTRAINT FK_SUBSTANCEREFERENCEINFORMATION_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.SUBSTANCEREFERENCEINFORMATION_DATE_VALUES ADD CONSTRAINT FK_SUBSTANCEREFERENCEINFORMATION_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.SUBSTANCEREFERENCEINFORMATION_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.SUBSTANCEREFERENCEINFORMATION_DATE_VALUES_TENANT                      ON FHIRAPP.SUBSTANCEREFERENCEINFORMATION_DATE_VALUES          FOR ROWS WHERE FHIRAPP.SUBSTANCEREFERENCEINFORMATION_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.SUBSTANCEREFERENCEINFORMATION_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.SUBSTANCEREFERENCEINFORMATION_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_SUBSTANCEREFERENCEINFORMATION_NUMBER_VALUES_PNNV ON FHIRAPP.SUBSTANCEREFERENCEINFORMATION_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SUBSTANCEREFERENCEINFORMATION_NUMBER_VALUES_RPS ON FHIRAPP.SUBSTANCEREFERENCEINFORMATION_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

ALTER TABLE FHIRAPP.SUBSTANCEREFERENCEINFORMATION_NUMBER_VALUES ADD CONSTRAINT FK_SUBSTANCEREFERENCEINFORMATION_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.SUBSTANCEREFERENCEINFORMATION_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.SUBSTANCEREFERENCEINFORMATION_NUMBER_VALUES ADD CONSTRAINT FK_SUBSTANCEREFERENCEINFORMATION_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.SUBSTANCEREFERENCEINFORMATION_NUMBER_VALUES_TENANT                      ON FHIRAPP.SUBSTANCEREFERENCEINFORMATION_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.SUBSTANCEREFERENCEINFORMATION_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.SUBSTANCEREFERENCEINFORMATION_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.SUBSTANCEREFERENCEINFORMATION_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_SUBSTANCEREFERENCEINFORMATION_LATLNG_VALUES_PNNHV ON FHIRAPP.SUBSTANCEREFERENCEINFORMATION_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SUBSTANCEREFERENCEINFORMATION_LATLNG_VALUES_RPLAT ON FHIRAPP.SUBSTANCEREFERENCEINFORMATION_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_SUBSTANCEREFERENCEINFORMATION_LATLNG_VALUES_PNNLV ON FHIRAPP.SUBSTANCEREFERENCEINFORMATION_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SUBSTANCEREFERENCEINFORMATION_LATLNG_VALUES_RPLNG ON FHIRAPP.SUBSTANCEREFERENCEINFORMATION_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

ALTER TABLE FHIRAPP.SUBSTANCEREFERENCEINFORMATION_LATLNG_VALUES ADD CONSTRAINT FK_SUBSTANCEREFERENCEINFORMATION_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.SUBSTANCEREFERENCEINFORMATION_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.SUBSTANCEREFERENCEINFORMATION_LATLNG_VALUES ADD CONSTRAINT FK_SUBSTANCEREFERENCEINFORMATION_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.SUBSTANCEREFERENCEINFORMATION_LATLNG_VALUES_TENANT                      ON FHIRAPP.SUBSTANCEREFERENCEINFORMATION_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.SUBSTANCEREFERENCEINFORMATION_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.SUBSTANCEREFERENCEINFORMATION_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.SUBSTANCEREFERENCEINFORMATION_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_SUBSTANCEREFERENCEINFORMATION_QUANTITY_VALUES_RPS ON FHIRAPP.SUBSTANCEREFERENCEINFORMATION_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_SUBSTANCEREFERENCEINFORMATION_QUANTITY_VALUES_RPCHLS ON FHIRAPP.SUBSTANCEREFERENCEINFORMATION_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_SUBSTANCEREFERENCEINFORMATION_QUANTITY_VALUES_PNNV ON FHIRAPP.SUBSTANCEREFERENCEINFORMATION_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_SUBSTANCEREFERENCEINFORMATION_QUANTITY_VALUES_PCHLSR ON FHIRAPP.SUBSTANCEREFERENCEINFORMATION_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SUBSTANCEREFERENCEINFORMATION_QUANTITY_VALUES_RPCLHS ON FHIRAPP.SUBSTANCEREFERENCEINFORMATION_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_SUBSTANCEREFERENCEINFORMATION_QUANTITY_VALUES_PCLHSR ON FHIRAPP.SUBSTANCEREFERENCEINFORMATION_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.SUBSTANCEREFERENCEINFORMATION_QUANTITY_VALUES ADD CONSTRAINT FK_SUBSTANCEREFERENCEINFORMATION_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.SUBSTANCEREFERENCEINFORMATION_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.SUBSTANCEREFERENCEINFORMATION_QUANTITY_VALUES ADD CONSTRAINT FK_SUBSTANCEREFERENCEINFORMATION_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.SUBSTANCEREFERENCEINFORMATION_QUANTITY_VALUES_TENANT                      ON FHIRAPP.SUBSTANCEREFERENCEINFORMATION_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.SUBSTANCEREFERENCEINFORMATION_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.SUBSTANCEREFERENCEINFORMATION_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.RELATEDPERSON_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT RELATEDPERSON_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.RELATEDPERSON_LOGICAL_RESOURCES ADD CONSTRAINT FK_RELATEDPERSON_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.RELATEDPERSON_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.RELATEDPERSON_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.RELATEDPERSON_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.RELATEDPERSON_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.RELATEDPERSON_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT RELATEDPERSON_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.RELATEDPERSON_RESOURCES_PRF_IN1 ON FHIRAPP.RELATEDPERSON_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.RELATEDPERSON_RESOURCES_TENANT                      ON FHIRAPP.RELATEDPERSON_RESOURCES          FOR ROWS WHERE FHIRAPP.RELATEDPERSON_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.RELATEDPERSON_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.RELATEDPERSON_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_RELATEDPERSON_STR_VALUES_PLR ON FHIRAPP.RELATEDPERSON_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_RELATEDPERSON_STR_VALUES_PSR ON FHIRAPP.RELATEDPERSON_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_RELATEDPERSON_STR_VALUES_RPL ON FHIRAPP.RELATEDPERSON_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

CREATE INDEX FHIRAPP.IDX_RELATEDPERSON_STR_VALUES_RPS ON FHIRAPP.RELATEDPERSON_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

ALTER TABLE FHIRAPP.RELATEDPERSON_STR_VALUES ADD CONSTRAINT FK_RELATEDPERSON_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.RELATEDPERSON_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.RELATEDPERSON_STR_VALUES ADD CONSTRAINT FK_RELATEDPERSON_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.RELATEDPERSON_STR_VALUES_TENANT                      ON FHIRAPP.RELATEDPERSON_STR_VALUES          FOR ROWS WHERE FHIRAPP.RELATEDPERSON_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.RELATEDPERSON_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.RELATEDPERSON_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_RELATEDPERSON_TOKEN_VALUES_PNCSCV ON FHIRAPP.RELATEDPERSON_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_RELATEDPERSON_TOKEN_VALUES_RPS ON FHIRAPP.RELATEDPERSON_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

ALTER TABLE FHIRAPP.RELATEDPERSON_TOKEN_VALUES ADD CONSTRAINT FK_RELATEDPERSON_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.RELATEDPERSON_TOKEN_VALUES ADD CONSTRAINT FK_RELATEDPERSON_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

ALTER TABLE FHIRAPP.RELATEDPERSON_TOKEN_VALUES ADD CONSTRAINT FK_RELATEDPERSON_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.RELATEDPERSON_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.RELATEDPERSON_TOKEN_VALUES_TENANT                      ON FHIRAPP.RELATEDPERSON_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.RELATEDPERSON_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.RELATEDPERSON_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.RELATEDPERSON_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_RELATEDPERSON_DATE_VALUES_RPSE ON FHIRAPP.RELATEDPERSON_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

CREATE INDEX FHIRAPP.IDX_RELATEDPERSON_DATE_VALUES_PSER ON FHIRAPP.RELATEDPERSON_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_RELATEDPERSON_DATE_VALUES_PVR ON FHIRAPP.RELATEDPERSON_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_RELATEDPERSON_DATE_VALUES_PESR ON FHIRAPP.RELATEDPERSON_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_RELATEDPERSON_DATE_VALUES_RPV ON FHIRAPP.RELATEDPERSON_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

ALTER TABLE FHIRAPP.RELATEDPERSON_DATE_VALUES ADD CONSTRAINT FK_RELATEDPERSON_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.RELATEDPERSON_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.RELATEDPERSON_DATE_VALUES ADD CONSTRAINT FK_RELATEDPERSON_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.RELATEDPERSON_DATE_VALUES_TENANT                      ON FHIRAPP.RELATEDPERSON_DATE_VALUES          FOR ROWS WHERE FHIRAPP.RELATEDPERSON_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.RELATEDPERSON_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.RELATEDPERSON_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_RELATEDPERSON_NUMBER_VALUES_PNNV ON FHIRAPP.RELATEDPERSON_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_RELATEDPERSON_NUMBER_VALUES_RPS ON FHIRAPP.RELATEDPERSON_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

ALTER TABLE FHIRAPP.RELATEDPERSON_NUMBER_VALUES ADD CONSTRAINT FK_RELATEDPERSON_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.RELATEDPERSON_NUMBER_VALUES ADD CONSTRAINT FK_RELATEDPERSON_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.RELATEDPERSON_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.RELATEDPERSON_NUMBER_VALUES_TENANT                      ON FHIRAPP.RELATEDPERSON_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.RELATEDPERSON_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.RELATEDPERSON_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.RELATEDPERSON_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_RELATEDPERSON_LATLNG_VALUES_RPLAT ON FHIRAPP.RELATEDPERSON_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_RELATEDPERSON_LATLNG_VALUES_PNNLV ON FHIRAPP.RELATEDPERSON_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_RELATEDPERSON_LATLNG_VALUES_PNNHV ON FHIRAPP.RELATEDPERSON_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_RELATEDPERSON_LATLNG_VALUES_RPLNG ON FHIRAPP.RELATEDPERSON_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

ALTER TABLE FHIRAPP.RELATEDPERSON_LATLNG_VALUES ADD CONSTRAINT FK_RELATEDPERSON_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.RELATEDPERSON_LATLNG_VALUES ADD CONSTRAINT FK_RELATEDPERSON_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.RELATEDPERSON_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.RELATEDPERSON_LATLNG_VALUES_TENANT                      ON FHIRAPP.RELATEDPERSON_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.RELATEDPERSON_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.RELATEDPERSON_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.RELATEDPERSON_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_RELATEDPERSON_QUANTITY_VALUES_PCLHSR ON FHIRAPP.RELATEDPERSON_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_RELATEDPERSON_QUANTITY_VALUES_RPCLHS ON FHIRAPP.RELATEDPERSON_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_RELATEDPERSON_QUANTITY_VALUES_PNNV ON FHIRAPP.RELATEDPERSON_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_RELATEDPERSON_QUANTITY_VALUES_RPS ON FHIRAPP.RELATEDPERSON_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_RELATEDPERSON_QUANTITY_VALUES_PCHLSR ON FHIRAPP.RELATEDPERSON_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_RELATEDPERSON_QUANTITY_VALUES_RPCHLS ON FHIRAPP.RELATEDPERSON_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

ALTER TABLE FHIRAPP.RELATEDPERSON_QUANTITY_VALUES ADD CONSTRAINT FK_RELATEDPERSON_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.RELATEDPERSON_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.RELATEDPERSON_QUANTITY_VALUES ADD CONSTRAINT FK_RELATEDPERSON_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.RELATEDPERSON_QUANTITY_VALUES_TENANT                      ON FHIRAPP.RELATEDPERSON_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.RELATEDPERSON_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.RELATEDPERSON_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.SERVICEREQUEST_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT SERVICEREQUEST_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.SERVICEREQUEST_LOGICAL_RESOURCES ADD CONSTRAINT FK_SERVICEREQUEST_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.SERVICEREQUEST_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.SERVICEREQUEST_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.SERVICEREQUEST_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.SERVICEREQUEST_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.SERVICEREQUEST_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT SERVICEREQUEST_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.SERVICEREQUEST_RESOURCES_PRF_IN1 ON FHIRAPP.SERVICEREQUEST_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.SERVICEREQUEST_RESOURCES_TENANT                      ON FHIRAPP.SERVICEREQUEST_RESOURCES          FOR ROWS WHERE FHIRAPP.SERVICEREQUEST_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.SERVICEREQUEST_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.SERVICEREQUEST_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_SERVICEREQUEST_STR_VALUES_RPL ON FHIRAPP.SERVICEREQUEST_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

CREATE INDEX FHIRAPP.IDX_SERVICEREQUEST_STR_VALUES_PSR ON FHIRAPP.SERVICEREQUEST_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SERVICEREQUEST_STR_VALUES_PLR ON FHIRAPP.SERVICEREQUEST_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SERVICEREQUEST_STR_VALUES_RPS ON FHIRAPP.SERVICEREQUEST_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

ALTER TABLE FHIRAPP.SERVICEREQUEST_STR_VALUES ADD CONSTRAINT FK_SERVICEREQUEST_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.SERVICEREQUEST_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.SERVICEREQUEST_STR_VALUES ADD CONSTRAINT FK_SERVICEREQUEST_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.SERVICEREQUEST_STR_VALUES_TENANT                      ON FHIRAPP.SERVICEREQUEST_STR_VALUES          FOR ROWS WHERE FHIRAPP.SERVICEREQUEST_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.SERVICEREQUEST_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.SERVICEREQUEST_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_SERVICEREQUEST_TOKEN_VALUES_RPS ON FHIRAPP.SERVICEREQUEST_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

CREATE INDEX FHIRAPP.IDX_SERVICEREQUEST_TOKEN_VALUES_PNCSCV ON FHIRAPP.SERVICEREQUEST_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.SERVICEREQUEST_TOKEN_VALUES ADD CONSTRAINT FK_SERVICEREQUEST_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

ALTER TABLE FHIRAPP.SERVICEREQUEST_TOKEN_VALUES ADD CONSTRAINT FK_SERVICEREQUEST_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.SERVICEREQUEST_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.SERVICEREQUEST_TOKEN_VALUES ADD CONSTRAINT FK_SERVICEREQUEST_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.SERVICEREQUEST_TOKEN_VALUES_TENANT                      ON FHIRAPP.SERVICEREQUEST_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.SERVICEREQUEST_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.SERVICEREQUEST_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.SERVICEREQUEST_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_SERVICEREQUEST_DATE_VALUES_RPSE ON FHIRAPP.SERVICEREQUEST_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

CREATE INDEX FHIRAPP.IDX_SERVICEREQUEST_DATE_VALUES_PSER ON FHIRAPP.SERVICEREQUEST_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SERVICEREQUEST_DATE_VALUES_RPV ON FHIRAPP.SERVICEREQUEST_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

CREATE INDEX FHIRAPP.IDX_SERVICEREQUEST_DATE_VALUES_PESR ON FHIRAPP.SERVICEREQUEST_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SERVICEREQUEST_DATE_VALUES_PVR ON FHIRAPP.SERVICEREQUEST_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.SERVICEREQUEST_DATE_VALUES ADD CONSTRAINT FK_SERVICEREQUEST_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.SERVICEREQUEST_DATE_VALUES ADD CONSTRAINT FK_SERVICEREQUEST_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.SERVICEREQUEST_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.SERVICEREQUEST_DATE_VALUES_TENANT                      ON FHIRAPP.SERVICEREQUEST_DATE_VALUES          FOR ROWS WHERE FHIRAPP.SERVICEREQUEST_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.SERVICEREQUEST_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.SERVICEREQUEST_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_SERVICEREQUEST_NUMBER_VALUES_PNNV ON FHIRAPP.SERVICEREQUEST_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SERVICEREQUEST_NUMBER_VALUES_RPS ON FHIRAPP.SERVICEREQUEST_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

ALTER TABLE FHIRAPP.SERVICEREQUEST_NUMBER_VALUES ADD CONSTRAINT FK_SERVICEREQUEST_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.SERVICEREQUEST_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.SERVICEREQUEST_NUMBER_VALUES ADD CONSTRAINT FK_SERVICEREQUEST_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.SERVICEREQUEST_NUMBER_VALUES_TENANT                      ON FHIRAPP.SERVICEREQUEST_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.SERVICEREQUEST_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.SERVICEREQUEST_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.SERVICEREQUEST_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_SERVICEREQUEST_LATLNG_VALUES_RPLAT ON FHIRAPP.SERVICEREQUEST_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_SERVICEREQUEST_LATLNG_VALUES_PNNHV ON FHIRAPP.SERVICEREQUEST_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SERVICEREQUEST_LATLNG_VALUES_PNNLV ON FHIRAPP.SERVICEREQUEST_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SERVICEREQUEST_LATLNG_VALUES_RPLNG ON FHIRAPP.SERVICEREQUEST_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

ALTER TABLE FHIRAPP.SERVICEREQUEST_LATLNG_VALUES ADD CONSTRAINT FK_SERVICEREQUEST_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.SERVICEREQUEST_LATLNG_VALUES ADD CONSTRAINT FK_SERVICEREQUEST_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.SERVICEREQUEST_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.SERVICEREQUEST_LATLNG_VALUES_TENANT                      ON FHIRAPP.SERVICEREQUEST_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.SERVICEREQUEST_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.SERVICEREQUEST_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.SERVICEREQUEST_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_SERVICEREQUEST_QUANTITY_VALUES_RPCHLS ON FHIRAPP.SERVICEREQUEST_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_SERVICEREQUEST_QUANTITY_VALUES_PCHLSR ON FHIRAPP.SERVICEREQUEST_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SERVICEREQUEST_QUANTITY_VALUES_RPS ON FHIRAPP.SERVICEREQUEST_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_SERVICEREQUEST_QUANTITY_VALUES_RPCLHS ON FHIRAPP.SERVICEREQUEST_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_SERVICEREQUEST_QUANTITY_VALUES_PNNV ON FHIRAPP.SERVICEREQUEST_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_SERVICEREQUEST_QUANTITY_VALUES_PCLHSR ON FHIRAPP.SERVICEREQUEST_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.SERVICEREQUEST_QUANTITY_VALUES ADD CONSTRAINT FK_SERVICEREQUEST_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.SERVICEREQUEST_QUANTITY_VALUES ADD CONSTRAINT FK_SERVICEREQUEST_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.SERVICEREQUEST_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.SERVICEREQUEST_QUANTITY_VALUES_TENANT                      ON FHIRAPP.SERVICEREQUEST_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.SERVICEREQUEST_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.SERVICEREQUEST_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.SUPPLYREQUEST_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT SUPPLYREQUEST_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.SUPPLYREQUEST_LOGICAL_RESOURCES ADD CONSTRAINT FK_SUPPLYREQUEST_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.SUPPLYREQUEST_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.SUPPLYREQUEST_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.SUPPLYREQUEST_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.SUPPLYREQUEST_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.SUPPLYREQUEST_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT SUPPLYREQUEST_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.SUPPLYREQUEST_RESOURCES_PRF_IN1 ON FHIRAPP.SUPPLYREQUEST_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.SUPPLYREQUEST_RESOURCES_TENANT                      ON FHIRAPP.SUPPLYREQUEST_RESOURCES          FOR ROWS WHERE FHIRAPP.SUPPLYREQUEST_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.SUPPLYREQUEST_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.SUPPLYREQUEST_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_SUPPLYREQUEST_STR_VALUES_PSR ON FHIRAPP.SUPPLYREQUEST_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SUPPLYREQUEST_STR_VALUES_RPL ON FHIRAPP.SUPPLYREQUEST_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

CREATE INDEX FHIRAPP.IDX_SUPPLYREQUEST_STR_VALUES_RPS ON FHIRAPP.SUPPLYREQUEST_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

CREATE INDEX FHIRAPP.IDX_SUPPLYREQUEST_STR_VALUES_PLR ON FHIRAPP.SUPPLYREQUEST_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.SUPPLYREQUEST_STR_VALUES ADD CONSTRAINT FK_SUPPLYREQUEST_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.SUPPLYREQUEST_STR_VALUES ADD CONSTRAINT FK_SUPPLYREQUEST_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.SUPPLYREQUEST_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.SUPPLYREQUEST_STR_VALUES_TENANT                      ON FHIRAPP.SUPPLYREQUEST_STR_VALUES          FOR ROWS WHERE FHIRAPP.SUPPLYREQUEST_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.SUPPLYREQUEST_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.SUPPLYREQUEST_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_SUPPLYREQUEST_TOKEN_VALUES_PNCSCV ON FHIRAPP.SUPPLYREQUEST_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SUPPLYREQUEST_TOKEN_VALUES_RPS ON FHIRAPP.SUPPLYREQUEST_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

ALTER TABLE FHIRAPP.SUPPLYREQUEST_TOKEN_VALUES ADD CONSTRAINT FK_SUPPLYREQUEST_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.SUPPLYREQUEST_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.SUPPLYREQUEST_TOKEN_VALUES ADD CONSTRAINT FK_SUPPLYREQUEST_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.SUPPLYREQUEST_TOKEN_VALUES ADD CONSTRAINT FK_SUPPLYREQUEST_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

CREATE PERMISSION FHIRAPP.SUPPLYREQUEST_TOKEN_VALUES_TENANT                      ON FHIRAPP.SUPPLYREQUEST_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.SUPPLYREQUEST_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.SUPPLYREQUEST_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.SUPPLYREQUEST_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_SUPPLYREQUEST_DATE_VALUES_PESR ON FHIRAPP.SUPPLYREQUEST_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SUPPLYREQUEST_DATE_VALUES_PVR ON FHIRAPP.SUPPLYREQUEST_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SUPPLYREQUEST_DATE_VALUES_RPV ON FHIRAPP.SUPPLYREQUEST_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

CREATE INDEX FHIRAPP.IDX_SUPPLYREQUEST_DATE_VALUES_PSER ON FHIRAPP.SUPPLYREQUEST_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SUPPLYREQUEST_DATE_VALUES_RPSE ON FHIRAPP.SUPPLYREQUEST_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

ALTER TABLE FHIRAPP.SUPPLYREQUEST_DATE_VALUES ADD CONSTRAINT FK_SUPPLYREQUEST_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.SUPPLYREQUEST_DATE_VALUES ADD CONSTRAINT FK_SUPPLYREQUEST_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.SUPPLYREQUEST_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.SUPPLYREQUEST_DATE_VALUES_TENANT                      ON FHIRAPP.SUPPLYREQUEST_DATE_VALUES          FOR ROWS WHERE FHIRAPP.SUPPLYREQUEST_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.SUPPLYREQUEST_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.SUPPLYREQUEST_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_SUPPLYREQUEST_NUMBER_VALUES_RPS ON FHIRAPP.SUPPLYREQUEST_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

CREATE INDEX FHIRAPP.IDX_SUPPLYREQUEST_NUMBER_VALUES_PNNV ON FHIRAPP.SUPPLYREQUEST_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.SUPPLYREQUEST_NUMBER_VALUES ADD CONSTRAINT FK_SUPPLYREQUEST_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.SUPPLYREQUEST_NUMBER_VALUES ADD CONSTRAINT FK_SUPPLYREQUEST_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.SUPPLYREQUEST_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.SUPPLYREQUEST_NUMBER_VALUES_TENANT                      ON FHIRAPP.SUPPLYREQUEST_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.SUPPLYREQUEST_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.SUPPLYREQUEST_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.SUPPLYREQUEST_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_SUPPLYREQUEST_LATLNG_VALUES_PNNHV ON FHIRAPP.SUPPLYREQUEST_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SUPPLYREQUEST_LATLNG_VALUES_RPLAT ON FHIRAPP.SUPPLYREQUEST_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_SUPPLYREQUEST_LATLNG_VALUES_PNNLV ON FHIRAPP.SUPPLYREQUEST_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SUPPLYREQUEST_LATLNG_VALUES_RPLNG ON FHIRAPP.SUPPLYREQUEST_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

ALTER TABLE FHIRAPP.SUPPLYREQUEST_LATLNG_VALUES ADD CONSTRAINT FK_SUPPLYREQUEST_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.SUPPLYREQUEST_LATLNG_VALUES ADD CONSTRAINT FK_SUPPLYREQUEST_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.SUPPLYREQUEST_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.SUPPLYREQUEST_LATLNG_VALUES_TENANT                      ON FHIRAPP.SUPPLYREQUEST_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.SUPPLYREQUEST_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.SUPPLYREQUEST_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.SUPPLYREQUEST_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_SUPPLYREQUEST_QUANTITY_VALUES_PCHLSR ON FHIRAPP.SUPPLYREQUEST_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SUPPLYREQUEST_QUANTITY_VALUES_RPCLHS ON FHIRAPP.SUPPLYREQUEST_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_SUPPLYREQUEST_QUANTITY_VALUES_PNNV ON FHIRAPP.SUPPLYREQUEST_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_SUPPLYREQUEST_QUANTITY_VALUES_RPS ON FHIRAPP.SUPPLYREQUEST_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_SUPPLYREQUEST_QUANTITY_VALUES_PCLHSR ON FHIRAPP.SUPPLYREQUEST_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SUPPLYREQUEST_QUANTITY_VALUES_RPCHLS ON FHIRAPP.SUPPLYREQUEST_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

ALTER TABLE FHIRAPP.SUPPLYREQUEST_QUANTITY_VALUES ADD CONSTRAINT FK_SUPPLYREQUEST_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.SUPPLYREQUEST_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.SUPPLYREQUEST_QUANTITY_VALUES ADD CONSTRAINT FK_SUPPLYREQUEST_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.SUPPLYREQUEST_QUANTITY_VALUES_TENANT                      ON FHIRAPP.SUPPLYREQUEST_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.SUPPLYREQUEST_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.SUPPLYREQUEST_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.PRACTITIONER_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT PRACTITIONER_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.PRACTITIONER_LOGICAL_RESOURCES ADD CONSTRAINT FK_PRACTITIONER_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.PRACTITIONER_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.PRACTITIONER_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.PRACTITIONER_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.PRACTITIONER_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.PRACTITIONER_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT PRACTITIONER_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.PRACTITIONER_RESOURCES_PRF_IN1 ON FHIRAPP.PRACTITIONER_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.PRACTITIONER_RESOURCES_TENANT                      ON FHIRAPP.PRACTITIONER_RESOURCES          FOR ROWS WHERE FHIRAPP.PRACTITIONER_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.PRACTITIONER_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.PRACTITIONER_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_PRACTITIONER_STR_VALUES_RPS ON FHIRAPP.PRACTITIONER_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

CREATE INDEX FHIRAPP.IDX_PRACTITIONER_STR_VALUES_PLR ON FHIRAPP.PRACTITIONER_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_PRACTITIONER_STR_VALUES_RPL ON FHIRAPP.PRACTITIONER_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

CREATE INDEX FHIRAPP.IDX_PRACTITIONER_STR_VALUES_PSR ON FHIRAPP.PRACTITIONER_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.PRACTITIONER_STR_VALUES ADD CONSTRAINT FK_PRACTITIONER_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.PRACTITIONER_STR_VALUES ADD CONSTRAINT FK_PRACTITIONER_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.PRACTITIONER_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.PRACTITIONER_STR_VALUES_TENANT                      ON FHIRAPP.PRACTITIONER_STR_VALUES          FOR ROWS WHERE FHIRAPP.PRACTITIONER_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.PRACTITIONER_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.PRACTITIONER_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_PRACTITIONER_TOKEN_VALUES_PNCSCV ON FHIRAPP.PRACTITIONER_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_PRACTITIONER_TOKEN_VALUES_RPS ON FHIRAPP.PRACTITIONER_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

ALTER TABLE FHIRAPP.PRACTITIONER_TOKEN_VALUES ADD CONSTRAINT FK_PRACTITIONER_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.PRACTITIONER_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.PRACTITIONER_TOKEN_VALUES ADD CONSTRAINT FK_PRACTITIONER_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.PRACTITIONER_TOKEN_VALUES ADD CONSTRAINT FK_PRACTITIONER_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

CREATE PERMISSION FHIRAPP.PRACTITIONER_TOKEN_VALUES_TENANT                      ON FHIRAPP.PRACTITIONER_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.PRACTITIONER_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.PRACTITIONER_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.PRACTITIONER_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_PRACTITIONER_DATE_VALUES_PVR ON FHIRAPP.PRACTITIONER_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_PRACTITIONER_DATE_VALUES_RPSE ON FHIRAPP.PRACTITIONER_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

CREATE INDEX FHIRAPP.IDX_PRACTITIONER_DATE_VALUES_PSER ON FHIRAPP.PRACTITIONER_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_PRACTITIONER_DATE_VALUES_RPV ON FHIRAPP.PRACTITIONER_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

CREATE INDEX FHIRAPP.IDX_PRACTITIONER_DATE_VALUES_PESR ON FHIRAPP.PRACTITIONER_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.PRACTITIONER_DATE_VALUES ADD CONSTRAINT FK_PRACTITIONER_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.PRACTITIONER_DATE_VALUES ADD CONSTRAINT FK_PRACTITIONER_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.PRACTITIONER_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.PRACTITIONER_DATE_VALUES_TENANT                      ON FHIRAPP.PRACTITIONER_DATE_VALUES          FOR ROWS WHERE FHIRAPP.PRACTITIONER_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.PRACTITIONER_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.PRACTITIONER_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_PRACTITIONER_NUMBER_VALUES_PNNV ON FHIRAPP.PRACTITIONER_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_PRACTITIONER_NUMBER_VALUES_RPS ON FHIRAPP.PRACTITIONER_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

ALTER TABLE FHIRAPP.PRACTITIONER_NUMBER_VALUES ADD CONSTRAINT FK_PRACTITIONER_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.PRACTITIONER_NUMBER_VALUES ADD CONSTRAINT FK_PRACTITIONER_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.PRACTITIONER_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.PRACTITIONER_NUMBER_VALUES_TENANT                      ON FHIRAPP.PRACTITIONER_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.PRACTITIONER_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.PRACTITIONER_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.PRACTITIONER_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_PRACTITIONER_LATLNG_VALUES_RPLAT ON FHIRAPP.PRACTITIONER_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_PRACTITIONER_LATLNG_VALUES_PNNHV ON FHIRAPP.PRACTITIONER_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_PRACTITIONER_LATLNG_VALUES_RPLNG ON FHIRAPP.PRACTITIONER_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_PRACTITIONER_LATLNG_VALUES_PNNLV ON FHIRAPP.PRACTITIONER_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.PRACTITIONER_LATLNG_VALUES ADD CONSTRAINT FK_PRACTITIONER_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.PRACTITIONER_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.PRACTITIONER_LATLNG_VALUES ADD CONSTRAINT FK_PRACTITIONER_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.PRACTITIONER_LATLNG_VALUES_TENANT                      ON FHIRAPP.PRACTITIONER_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.PRACTITIONER_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.PRACTITIONER_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.PRACTITIONER_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_PRACTITIONER_QUANTITY_VALUES_PCHLSR ON FHIRAPP.PRACTITIONER_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_PRACTITIONER_QUANTITY_VALUES_RPS ON FHIRAPP.PRACTITIONER_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_PRACTITIONER_QUANTITY_VALUES_RPCHLS ON FHIRAPP.PRACTITIONER_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_PRACTITIONER_QUANTITY_VALUES_PNNV ON FHIRAPP.PRACTITIONER_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_PRACTITIONER_QUANTITY_VALUES_PCLHSR ON FHIRAPP.PRACTITIONER_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_PRACTITIONER_QUANTITY_VALUES_RPCLHS ON FHIRAPP.PRACTITIONER_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

ALTER TABLE FHIRAPP.PRACTITIONER_QUANTITY_VALUES ADD CONSTRAINT FK_PRACTITIONER_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.PRACTITIONER_QUANTITY_VALUES ADD CONSTRAINT FK_PRACTITIONER_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.PRACTITIONER_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.PRACTITIONER_QUANTITY_VALUES_TENANT                      ON FHIRAPP.PRACTITIONER_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.PRACTITIONER_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.PRACTITIONER_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.VERIFICATIONRESULT_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT VERIFICATIONRESULT_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.VERIFICATIONRESULT_LOGICAL_RESOURCES ADD CONSTRAINT FK_VERIFICATIONRESULT_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.VERIFICATIONRESULT_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.VERIFICATIONRESULT_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.VERIFICATIONRESULT_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.VERIFICATIONRESULT_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.VERIFICATIONRESULT_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT VERIFICATIONRESULT_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.VERIFICATIONRESULT_RESOURCES_PRF_IN1 ON FHIRAPP.VERIFICATIONRESULT_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.VERIFICATIONRESULT_RESOURCES_TENANT                      ON FHIRAPP.VERIFICATIONRESULT_RESOURCES          FOR ROWS WHERE FHIRAPP.VERIFICATIONRESULT_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.VERIFICATIONRESULT_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.VERIFICATIONRESULT_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_VERIFICATIONRESULT_STR_VALUES_PLR ON FHIRAPP.VERIFICATIONRESULT_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_VERIFICATIONRESULT_STR_VALUES_RPS ON FHIRAPP.VERIFICATIONRESULT_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

CREATE INDEX FHIRAPP.IDX_VERIFICATIONRESULT_STR_VALUES_RPL ON FHIRAPP.VERIFICATIONRESULT_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

CREATE INDEX FHIRAPP.IDX_VERIFICATIONRESULT_STR_VALUES_PSR ON FHIRAPP.VERIFICATIONRESULT_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.VERIFICATIONRESULT_STR_VALUES ADD CONSTRAINT FK_VERIFICATIONRESULT_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.VERIFICATIONRESULT_STR_VALUES ADD CONSTRAINT FK_VERIFICATIONRESULT_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.VERIFICATIONRESULT_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.VERIFICATIONRESULT_STR_VALUES_TENANT                      ON FHIRAPP.VERIFICATIONRESULT_STR_VALUES          FOR ROWS WHERE FHIRAPP.VERIFICATIONRESULT_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.VERIFICATIONRESULT_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.VERIFICATIONRESULT_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_VERIFICATIONRESULT_TOKEN_VALUES_PNCSCV ON FHIRAPP.VERIFICATIONRESULT_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_VERIFICATIONRESULT_TOKEN_VALUES_RPS ON FHIRAPP.VERIFICATIONRESULT_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

ALTER TABLE FHIRAPP.VERIFICATIONRESULT_TOKEN_VALUES ADD CONSTRAINT FK_VERIFICATIONRESULT_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.VERIFICATIONRESULT_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.VERIFICATIONRESULT_TOKEN_VALUES ADD CONSTRAINT FK_VERIFICATIONRESULT_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.VERIFICATIONRESULT_TOKEN_VALUES ADD CONSTRAINT FK_VERIFICATIONRESULT_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

CREATE PERMISSION FHIRAPP.VERIFICATIONRESULT_TOKEN_VALUES_TENANT                      ON FHIRAPP.VERIFICATIONRESULT_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.VERIFICATIONRESULT_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.VERIFICATIONRESULT_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.VERIFICATIONRESULT_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_VERIFICATIONRESULT_DATE_VALUES_PESR ON FHIRAPP.VERIFICATIONRESULT_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_VERIFICATIONRESULT_DATE_VALUES_RPSE ON FHIRAPP.VERIFICATIONRESULT_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

CREATE INDEX FHIRAPP.IDX_VERIFICATIONRESULT_DATE_VALUES_PSER ON FHIRAPP.VERIFICATIONRESULT_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_VERIFICATIONRESULT_DATE_VALUES_PVR ON FHIRAPP.VERIFICATIONRESULT_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_VERIFICATIONRESULT_DATE_VALUES_RPV ON FHIRAPP.VERIFICATIONRESULT_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

ALTER TABLE FHIRAPP.VERIFICATIONRESULT_DATE_VALUES ADD CONSTRAINT FK_VERIFICATIONRESULT_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.VERIFICATIONRESULT_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.VERIFICATIONRESULT_DATE_VALUES ADD CONSTRAINT FK_VERIFICATIONRESULT_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.VERIFICATIONRESULT_DATE_VALUES_TENANT                      ON FHIRAPP.VERIFICATIONRESULT_DATE_VALUES          FOR ROWS WHERE FHIRAPP.VERIFICATIONRESULT_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.VERIFICATIONRESULT_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.VERIFICATIONRESULT_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_VERIFICATIONRESULT_NUMBER_VALUES_RPS ON FHIRAPP.VERIFICATIONRESULT_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

CREATE INDEX FHIRAPP.IDX_VERIFICATIONRESULT_NUMBER_VALUES_PNNV ON FHIRAPP.VERIFICATIONRESULT_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.VERIFICATIONRESULT_NUMBER_VALUES ADD CONSTRAINT FK_VERIFICATIONRESULT_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.VERIFICATIONRESULT_NUMBER_VALUES ADD CONSTRAINT FK_VERIFICATIONRESULT_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.VERIFICATIONRESULT_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.VERIFICATIONRESULT_NUMBER_VALUES_TENANT                      ON FHIRAPP.VERIFICATIONRESULT_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.VERIFICATIONRESULT_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.VERIFICATIONRESULT_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.VERIFICATIONRESULT_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_VERIFICATIONRESULT_LATLNG_VALUES_PNNHV ON FHIRAPP.VERIFICATIONRESULT_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_VERIFICATIONRESULT_LATLNG_VALUES_PNNLV ON FHIRAPP.VERIFICATIONRESULT_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_VERIFICATIONRESULT_LATLNG_VALUES_RPLAT ON FHIRAPP.VERIFICATIONRESULT_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_VERIFICATIONRESULT_LATLNG_VALUES_RPLNG ON FHIRAPP.VERIFICATIONRESULT_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

ALTER TABLE FHIRAPP.VERIFICATIONRESULT_LATLNG_VALUES ADD CONSTRAINT FK_VERIFICATIONRESULT_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.VERIFICATIONRESULT_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.VERIFICATIONRESULT_LATLNG_VALUES ADD CONSTRAINT FK_VERIFICATIONRESULT_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.VERIFICATIONRESULT_LATLNG_VALUES_TENANT                      ON FHIRAPP.VERIFICATIONRESULT_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.VERIFICATIONRESULT_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.VERIFICATIONRESULT_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.VERIFICATIONRESULT_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_VERIFICATIONRESULT_QUANTITY_VALUES_RPS ON FHIRAPP.VERIFICATIONRESULT_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_VERIFICATIONRESULT_QUANTITY_VALUES_RPCHLS ON FHIRAPP.VERIFICATIONRESULT_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_VERIFICATIONRESULT_QUANTITY_VALUES_PNNV ON FHIRAPP.VERIFICATIONRESULT_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_VERIFICATIONRESULT_QUANTITY_VALUES_PCHLSR ON FHIRAPP.VERIFICATIONRESULT_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_VERIFICATIONRESULT_QUANTITY_VALUES_PCLHSR ON FHIRAPP.VERIFICATIONRESULT_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_VERIFICATIONRESULT_QUANTITY_VALUES_RPCLHS ON FHIRAPP.VERIFICATIONRESULT_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

ALTER TABLE FHIRAPP.VERIFICATIONRESULT_QUANTITY_VALUES ADD CONSTRAINT FK_VERIFICATIONRESULT_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.VERIFICATIONRESULT_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.VERIFICATIONRESULT_QUANTITY_VALUES ADD CONSTRAINT FK_VERIFICATIONRESULT_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.VERIFICATIONRESULT_QUANTITY_VALUES_TENANT                      ON FHIRAPP.VERIFICATIONRESULT_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.VERIFICATIONRESULT_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.VERIFICATIONRESULT_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.SUBSTANCEPROTEIN_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT SUBSTANCEPROTEIN_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.SUBSTANCEPROTEIN_LOGICAL_RESOURCES ADD CONSTRAINT FK_SUBSTANCEPROTEIN_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.SUBSTANCEPROTEIN_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.SUBSTANCEPROTEIN_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.SUBSTANCEPROTEIN_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.SUBSTANCEPROTEIN_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.SUBSTANCEPROTEIN_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT SUBSTANCEPROTEIN_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.SUBSTANCEPROTEIN_RESOURCES_PRF_IN1 ON FHIRAPP.SUBSTANCEPROTEIN_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.SUBSTANCEPROTEIN_RESOURCES_TENANT                      ON FHIRAPP.SUBSTANCEPROTEIN_RESOURCES          FOR ROWS WHERE FHIRAPP.SUBSTANCEPROTEIN_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.SUBSTANCEPROTEIN_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.SUBSTANCEPROTEIN_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_SUBSTANCEPROTEIN_STR_VALUES_RPS ON FHIRAPP.SUBSTANCEPROTEIN_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

CREATE INDEX FHIRAPP.IDX_SUBSTANCEPROTEIN_STR_VALUES_PLR ON FHIRAPP.SUBSTANCEPROTEIN_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SUBSTANCEPROTEIN_STR_VALUES_PSR ON FHIRAPP.SUBSTANCEPROTEIN_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SUBSTANCEPROTEIN_STR_VALUES_RPL ON FHIRAPP.SUBSTANCEPROTEIN_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

ALTER TABLE FHIRAPP.SUBSTANCEPROTEIN_STR_VALUES ADD CONSTRAINT FK_SUBSTANCEPROTEIN_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.SUBSTANCEPROTEIN_STR_VALUES ADD CONSTRAINT FK_SUBSTANCEPROTEIN_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.SUBSTANCEPROTEIN_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.SUBSTANCEPROTEIN_STR_VALUES_TENANT                      ON FHIRAPP.SUBSTANCEPROTEIN_STR_VALUES          FOR ROWS WHERE FHIRAPP.SUBSTANCEPROTEIN_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.SUBSTANCEPROTEIN_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.SUBSTANCEPROTEIN_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_SUBSTANCEPROTEIN_TOKEN_VALUES_RPS ON FHIRAPP.SUBSTANCEPROTEIN_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

CREATE INDEX FHIRAPP.IDX_SUBSTANCEPROTEIN_TOKEN_VALUES_PNCSCV ON FHIRAPP.SUBSTANCEPROTEIN_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.SUBSTANCEPROTEIN_TOKEN_VALUES ADD CONSTRAINT FK_SUBSTANCEPROTEIN_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.SUBSTANCEPROTEIN_TOKEN_VALUES ADD CONSTRAINT FK_SUBSTANCEPROTEIN_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

ALTER TABLE FHIRAPP.SUBSTANCEPROTEIN_TOKEN_VALUES ADD CONSTRAINT FK_SUBSTANCEPROTEIN_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.SUBSTANCEPROTEIN_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.SUBSTANCEPROTEIN_TOKEN_VALUES_TENANT                      ON FHIRAPP.SUBSTANCEPROTEIN_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.SUBSTANCEPROTEIN_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.SUBSTANCEPROTEIN_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.SUBSTANCEPROTEIN_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_SUBSTANCEPROTEIN_DATE_VALUES_RPV ON FHIRAPP.SUBSTANCEPROTEIN_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

CREATE INDEX FHIRAPP.IDX_SUBSTANCEPROTEIN_DATE_VALUES_PESR ON FHIRAPP.SUBSTANCEPROTEIN_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SUBSTANCEPROTEIN_DATE_VALUES_PVR ON FHIRAPP.SUBSTANCEPROTEIN_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SUBSTANCEPROTEIN_DATE_VALUES_PSER ON FHIRAPP.SUBSTANCEPROTEIN_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SUBSTANCEPROTEIN_DATE_VALUES_RPSE ON FHIRAPP.SUBSTANCEPROTEIN_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

ALTER TABLE FHIRAPP.SUBSTANCEPROTEIN_DATE_VALUES ADD CONSTRAINT FK_SUBSTANCEPROTEIN_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.SUBSTANCEPROTEIN_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.SUBSTANCEPROTEIN_DATE_VALUES ADD CONSTRAINT FK_SUBSTANCEPROTEIN_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.SUBSTANCEPROTEIN_DATE_VALUES_TENANT                      ON FHIRAPP.SUBSTANCEPROTEIN_DATE_VALUES          FOR ROWS WHERE FHIRAPP.SUBSTANCEPROTEIN_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.SUBSTANCEPROTEIN_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.SUBSTANCEPROTEIN_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_SUBSTANCEPROTEIN_NUMBER_VALUES_PNNV ON FHIRAPP.SUBSTANCEPROTEIN_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SUBSTANCEPROTEIN_NUMBER_VALUES_RPS ON FHIRAPP.SUBSTANCEPROTEIN_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

ALTER TABLE FHIRAPP.SUBSTANCEPROTEIN_NUMBER_VALUES ADD CONSTRAINT FK_SUBSTANCEPROTEIN_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.SUBSTANCEPROTEIN_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.SUBSTANCEPROTEIN_NUMBER_VALUES ADD CONSTRAINT FK_SUBSTANCEPROTEIN_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.SUBSTANCEPROTEIN_NUMBER_VALUES_TENANT                      ON FHIRAPP.SUBSTANCEPROTEIN_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.SUBSTANCEPROTEIN_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.SUBSTANCEPROTEIN_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.SUBSTANCEPROTEIN_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_SUBSTANCEPROTEIN_LATLNG_VALUES_PNNLV ON FHIRAPP.SUBSTANCEPROTEIN_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SUBSTANCEPROTEIN_LATLNG_VALUES_RPLNG ON FHIRAPP.SUBSTANCEPROTEIN_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_SUBSTANCEPROTEIN_LATLNG_VALUES_PNNHV ON FHIRAPP.SUBSTANCEPROTEIN_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SUBSTANCEPROTEIN_LATLNG_VALUES_RPLAT ON FHIRAPP.SUBSTANCEPROTEIN_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

ALTER TABLE FHIRAPP.SUBSTANCEPROTEIN_LATLNG_VALUES ADD CONSTRAINT FK_SUBSTANCEPROTEIN_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.SUBSTANCEPROTEIN_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.SUBSTANCEPROTEIN_LATLNG_VALUES ADD CONSTRAINT FK_SUBSTANCEPROTEIN_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.SUBSTANCEPROTEIN_LATLNG_VALUES_TENANT                      ON FHIRAPP.SUBSTANCEPROTEIN_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.SUBSTANCEPROTEIN_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.SUBSTANCEPROTEIN_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.SUBSTANCEPROTEIN_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_SUBSTANCEPROTEIN_QUANTITY_VALUES_PNNV ON FHIRAPP.SUBSTANCEPROTEIN_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_SUBSTANCEPROTEIN_QUANTITY_VALUES_PCLHSR ON FHIRAPP.SUBSTANCEPROTEIN_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SUBSTANCEPROTEIN_QUANTITY_VALUES_RPS ON FHIRAPP.SUBSTANCEPROTEIN_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_SUBSTANCEPROTEIN_QUANTITY_VALUES_RPCHLS ON FHIRAPP.SUBSTANCEPROTEIN_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_SUBSTANCEPROTEIN_QUANTITY_VALUES_PCHLSR ON FHIRAPP.SUBSTANCEPROTEIN_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SUBSTANCEPROTEIN_QUANTITY_VALUES_RPCLHS ON FHIRAPP.SUBSTANCEPROTEIN_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

ALTER TABLE FHIRAPP.SUBSTANCEPROTEIN_QUANTITY_VALUES ADD CONSTRAINT FK_SUBSTANCEPROTEIN_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.SUBSTANCEPROTEIN_QUANTITY_VALUES ADD CONSTRAINT FK_SUBSTANCEPROTEIN_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.SUBSTANCEPROTEIN_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.SUBSTANCEPROTEIN_QUANTITY_VALUES_TENANT                      ON FHIRAPP.SUBSTANCEPROTEIN_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.SUBSTANCEPROTEIN_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.SUBSTANCEPROTEIN_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.BODYSTRUCTURE_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT BODYSTRUCTURE_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.BODYSTRUCTURE_LOGICAL_RESOURCES ADD CONSTRAINT FK_BODYSTRUCTURE_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.BODYSTRUCTURE_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.BODYSTRUCTURE_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.BODYSTRUCTURE_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.BODYSTRUCTURE_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.BODYSTRUCTURE_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT BODYSTRUCTURE_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.BODYSTRUCTURE_RESOURCES_PRF_IN1 ON FHIRAPP.BODYSTRUCTURE_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.BODYSTRUCTURE_RESOURCES_TENANT                      ON FHIRAPP.BODYSTRUCTURE_RESOURCES          FOR ROWS WHERE FHIRAPP.BODYSTRUCTURE_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.BODYSTRUCTURE_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.BODYSTRUCTURE_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_BODYSTRUCTURE_STR_VALUES_PLR ON FHIRAPP.BODYSTRUCTURE_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_BODYSTRUCTURE_STR_VALUES_RPS ON FHIRAPP.BODYSTRUCTURE_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

CREATE INDEX FHIRAPP.IDX_BODYSTRUCTURE_STR_VALUES_PSR ON FHIRAPP.BODYSTRUCTURE_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_BODYSTRUCTURE_STR_VALUES_RPL ON FHIRAPP.BODYSTRUCTURE_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

ALTER TABLE FHIRAPP.BODYSTRUCTURE_STR_VALUES ADD CONSTRAINT FK_BODYSTRUCTURE_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.BODYSTRUCTURE_STR_VALUES ADD CONSTRAINT FK_BODYSTRUCTURE_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.BODYSTRUCTURE_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.BODYSTRUCTURE_STR_VALUES_TENANT                      ON FHIRAPP.BODYSTRUCTURE_STR_VALUES          FOR ROWS WHERE FHIRAPP.BODYSTRUCTURE_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.BODYSTRUCTURE_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.BODYSTRUCTURE_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_BODYSTRUCTURE_TOKEN_VALUES_PNCSCV ON FHIRAPP.BODYSTRUCTURE_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_BODYSTRUCTURE_TOKEN_VALUES_RPS ON FHIRAPP.BODYSTRUCTURE_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

ALTER TABLE FHIRAPP.BODYSTRUCTURE_TOKEN_VALUES ADD CONSTRAINT FK_BODYSTRUCTURE_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.BODYSTRUCTURE_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.BODYSTRUCTURE_TOKEN_VALUES ADD CONSTRAINT FK_BODYSTRUCTURE_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

ALTER TABLE FHIRAPP.BODYSTRUCTURE_TOKEN_VALUES ADD CONSTRAINT FK_BODYSTRUCTURE_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.BODYSTRUCTURE_TOKEN_VALUES_TENANT                      ON FHIRAPP.BODYSTRUCTURE_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.BODYSTRUCTURE_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.BODYSTRUCTURE_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.BODYSTRUCTURE_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_BODYSTRUCTURE_DATE_VALUES_PSER ON FHIRAPP.BODYSTRUCTURE_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_BODYSTRUCTURE_DATE_VALUES_RPSE ON FHIRAPP.BODYSTRUCTURE_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

CREATE INDEX FHIRAPP.IDX_BODYSTRUCTURE_DATE_VALUES_RPV ON FHIRAPP.BODYSTRUCTURE_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

CREATE INDEX FHIRAPP.IDX_BODYSTRUCTURE_DATE_VALUES_PVR ON FHIRAPP.BODYSTRUCTURE_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_BODYSTRUCTURE_DATE_VALUES_PESR ON FHIRAPP.BODYSTRUCTURE_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.BODYSTRUCTURE_DATE_VALUES ADD CONSTRAINT FK_BODYSTRUCTURE_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.BODYSTRUCTURE_DATE_VALUES ADD CONSTRAINT FK_BODYSTRUCTURE_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.BODYSTRUCTURE_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.BODYSTRUCTURE_DATE_VALUES_TENANT                      ON FHIRAPP.BODYSTRUCTURE_DATE_VALUES          FOR ROWS WHERE FHIRAPP.BODYSTRUCTURE_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.BODYSTRUCTURE_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.BODYSTRUCTURE_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_BODYSTRUCTURE_NUMBER_VALUES_RPS ON FHIRAPP.BODYSTRUCTURE_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

CREATE INDEX FHIRAPP.IDX_BODYSTRUCTURE_NUMBER_VALUES_PNNV ON FHIRAPP.BODYSTRUCTURE_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.BODYSTRUCTURE_NUMBER_VALUES ADD CONSTRAINT FK_BODYSTRUCTURE_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.BODYSTRUCTURE_NUMBER_VALUES ADD CONSTRAINT FK_BODYSTRUCTURE_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.BODYSTRUCTURE_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.BODYSTRUCTURE_NUMBER_VALUES_TENANT                      ON FHIRAPP.BODYSTRUCTURE_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.BODYSTRUCTURE_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.BODYSTRUCTURE_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.BODYSTRUCTURE_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_BODYSTRUCTURE_LATLNG_VALUES_PNNLV ON FHIRAPP.BODYSTRUCTURE_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_BODYSTRUCTURE_LATLNG_VALUES_RPLNG ON FHIRAPP.BODYSTRUCTURE_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_BODYSTRUCTURE_LATLNG_VALUES_PNNHV ON FHIRAPP.BODYSTRUCTURE_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_BODYSTRUCTURE_LATLNG_VALUES_RPLAT ON FHIRAPP.BODYSTRUCTURE_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

ALTER TABLE FHIRAPP.BODYSTRUCTURE_LATLNG_VALUES ADD CONSTRAINT FK_BODYSTRUCTURE_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.BODYSTRUCTURE_LATLNG_VALUES ADD CONSTRAINT FK_BODYSTRUCTURE_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.BODYSTRUCTURE_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.BODYSTRUCTURE_LATLNG_VALUES_TENANT                      ON FHIRAPP.BODYSTRUCTURE_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.BODYSTRUCTURE_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.BODYSTRUCTURE_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.BODYSTRUCTURE_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_BODYSTRUCTURE_QUANTITY_VALUES_RPCHLS ON FHIRAPP.BODYSTRUCTURE_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_BODYSTRUCTURE_QUANTITY_VALUES_PCLHSR ON FHIRAPP.BODYSTRUCTURE_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_BODYSTRUCTURE_QUANTITY_VALUES_RPCLHS ON FHIRAPP.BODYSTRUCTURE_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_BODYSTRUCTURE_QUANTITY_VALUES_RPS ON FHIRAPP.BODYSTRUCTURE_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_BODYSTRUCTURE_QUANTITY_VALUES_PCHLSR ON FHIRAPP.BODYSTRUCTURE_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_BODYSTRUCTURE_QUANTITY_VALUES_PNNV ON FHIRAPP.BODYSTRUCTURE_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

ALTER TABLE FHIRAPP.BODYSTRUCTURE_QUANTITY_VALUES ADD CONSTRAINT FK_BODYSTRUCTURE_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.BODYSTRUCTURE_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.BODYSTRUCTURE_QUANTITY_VALUES ADD CONSTRAINT FK_BODYSTRUCTURE_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.BODYSTRUCTURE_QUANTITY_VALUES_TENANT                      ON FHIRAPP.BODYSTRUCTURE_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.BODYSTRUCTURE_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.BODYSTRUCTURE_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.SLOT_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT SLOT_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.SLOT_LOGICAL_RESOURCES ADD CONSTRAINT FK_SLOT_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.SLOT_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.SLOT_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.SLOT_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.SLOT_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.SLOT_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT SLOT_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.SLOT_RESOURCES_PRF_IN1 ON FHIRAPP.SLOT_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.SLOT_RESOURCES_TENANT                      ON FHIRAPP.SLOT_RESOURCES          FOR ROWS WHERE FHIRAPP.SLOT_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.SLOT_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.SLOT_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_SLOT_STR_VALUES_RPL ON FHIRAPP.SLOT_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

CREATE INDEX FHIRAPP.IDX_SLOT_STR_VALUES_PSR ON FHIRAPP.SLOT_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SLOT_STR_VALUES_PLR ON FHIRAPP.SLOT_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SLOT_STR_VALUES_RPS ON FHIRAPP.SLOT_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

ALTER TABLE FHIRAPP.SLOT_STR_VALUES ADD CONSTRAINT FK_SLOT_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.SLOT_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.SLOT_STR_VALUES ADD CONSTRAINT FK_SLOT_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.SLOT_STR_VALUES_TENANT                      ON FHIRAPP.SLOT_STR_VALUES          FOR ROWS WHERE FHIRAPP.SLOT_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.SLOT_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.SLOT_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_SLOT_TOKEN_VALUES_RPS ON FHIRAPP.SLOT_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

CREATE INDEX FHIRAPP.IDX_SLOT_TOKEN_VALUES_PNCSCV ON FHIRAPP.SLOT_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.SLOT_TOKEN_VALUES ADD CONSTRAINT FK_SLOT_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.SLOT_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.SLOT_TOKEN_VALUES ADD CONSTRAINT FK_SLOT_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

ALTER TABLE FHIRAPP.SLOT_TOKEN_VALUES ADD CONSTRAINT FK_SLOT_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.SLOT_TOKEN_VALUES_TENANT                      ON FHIRAPP.SLOT_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.SLOT_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.SLOT_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.SLOT_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_SLOT_DATE_VALUES_PVR ON FHIRAPP.SLOT_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SLOT_DATE_VALUES_PSER ON FHIRAPP.SLOT_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SLOT_DATE_VALUES_RPV ON FHIRAPP.SLOT_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

CREATE INDEX FHIRAPP.IDX_SLOT_DATE_VALUES_PESR ON FHIRAPP.SLOT_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SLOT_DATE_VALUES_RPSE ON FHIRAPP.SLOT_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

ALTER TABLE FHIRAPP.SLOT_DATE_VALUES ADD CONSTRAINT FK_SLOT_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.SLOT_DATE_VALUES ADD CONSTRAINT FK_SLOT_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.SLOT_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.SLOT_DATE_VALUES_TENANT                      ON FHIRAPP.SLOT_DATE_VALUES          FOR ROWS WHERE FHIRAPP.SLOT_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.SLOT_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.SLOT_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_SLOT_NUMBER_VALUES_PNNV ON FHIRAPP.SLOT_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SLOT_NUMBER_VALUES_RPS ON FHIRAPP.SLOT_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

ALTER TABLE FHIRAPP.SLOT_NUMBER_VALUES ADD CONSTRAINT FK_SLOT_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.SLOT_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.SLOT_NUMBER_VALUES ADD CONSTRAINT FK_SLOT_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.SLOT_NUMBER_VALUES_TENANT                      ON FHIRAPP.SLOT_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.SLOT_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.SLOT_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.SLOT_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_SLOT_LATLNG_VALUES_PNNHV ON FHIRAPP.SLOT_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SLOT_LATLNG_VALUES_RPLAT ON FHIRAPP.SLOT_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_SLOT_LATLNG_VALUES_PNNLV ON FHIRAPP.SLOT_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SLOT_LATLNG_VALUES_RPLNG ON FHIRAPP.SLOT_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

ALTER TABLE FHIRAPP.SLOT_LATLNG_VALUES ADD CONSTRAINT FK_SLOT_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.SLOT_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.SLOT_LATLNG_VALUES ADD CONSTRAINT FK_SLOT_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.SLOT_LATLNG_VALUES_TENANT                      ON FHIRAPP.SLOT_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.SLOT_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.SLOT_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.SLOT_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_SLOT_QUANTITY_VALUES_RPS ON FHIRAPP.SLOT_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_SLOT_QUANTITY_VALUES_PCLHSR ON FHIRAPP.SLOT_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SLOT_QUANTITY_VALUES_RPCHLS ON FHIRAPP.SLOT_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_SLOT_QUANTITY_VALUES_PNNV ON FHIRAPP.SLOT_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_SLOT_QUANTITY_VALUES_RPCLHS ON FHIRAPP.SLOT_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_SLOT_QUANTITY_VALUES_PCHLSR ON FHIRAPP.SLOT_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.SLOT_QUANTITY_VALUES ADD CONSTRAINT FK_SLOT_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.SLOT_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.SLOT_QUANTITY_VALUES ADD CONSTRAINT FK_SLOT_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.SLOT_QUANTITY_VALUES_TENANT                      ON FHIRAPP.SLOT_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.SLOT_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.SLOT_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.CONTRACT_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT CONTRACT_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.CONTRACT_LOGICAL_RESOURCES ADD CONSTRAINT FK_CONTRACT_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.CONTRACT_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.CONTRACT_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.CONTRACT_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.CONTRACT_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.CONTRACT_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT CONTRACT_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.CONTRACT_RESOURCES_PRF_IN1 ON FHIRAPP.CONTRACT_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.CONTRACT_RESOURCES_TENANT                      ON FHIRAPP.CONTRACT_RESOURCES          FOR ROWS WHERE FHIRAPP.CONTRACT_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.CONTRACT_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.CONTRACT_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_CONTRACT_STR_VALUES_PLR ON FHIRAPP.CONTRACT_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_CONTRACT_STR_VALUES_RPS ON FHIRAPP.CONTRACT_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

CREATE INDEX FHIRAPP.IDX_CONTRACT_STR_VALUES_RPL ON FHIRAPP.CONTRACT_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

CREATE INDEX FHIRAPP.IDX_CONTRACT_STR_VALUES_PSR ON FHIRAPP.CONTRACT_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.CONTRACT_STR_VALUES ADD CONSTRAINT FK_CONTRACT_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.CONTRACT_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.CONTRACT_STR_VALUES ADD CONSTRAINT FK_CONTRACT_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.CONTRACT_STR_VALUES_TENANT                      ON FHIRAPP.CONTRACT_STR_VALUES          FOR ROWS WHERE FHIRAPP.CONTRACT_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.CONTRACT_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.CONTRACT_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_CONTRACT_TOKEN_VALUES_PNCSCV ON FHIRAPP.CONTRACT_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_CONTRACT_TOKEN_VALUES_RPS ON FHIRAPP.CONTRACT_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

ALTER TABLE FHIRAPP.CONTRACT_TOKEN_VALUES ADD CONSTRAINT FK_CONTRACT_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

ALTER TABLE FHIRAPP.CONTRACT_TOKEN_VALUES ADD CONSTRAINT FK_CONTRACT_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.CONTRACT_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.CONTRACT_TOKEN_VALUES ADD CONSTRAINT FK_CONTRACT_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.CONTRACT_TOKEN_VALUES_TENANT                      ON FHIRAPP.CONTRACT_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.CONTRACT_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.CONTRACT_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.CONTRACT_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_CONTRACT_DATE_VALUES_PESR ON FHIRAPP.CONTRACT_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_CONTRACT_DATE_VALUES_RPV ON FHIRAPP.CONTRACT_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

CREATE INDEX FHIRAPP.IDX_CONTRACT_DATE_VALUES_RPSE ON FHIRAPP.CONTRACT_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

CREATE INDEX FHIRAPP.IDX_CONTRACT_DATE_VALUES_PSER ON FHIRAPP.CONTRACT_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_CONTRACT_DATE_VALUES_PVR ON FHIRAPP.CONTRACT_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.CONTRACT_DATE_VALUES ADD CONSTRAINT FK_CONTRACT_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.CONTRACT_DATE_VALUES ADD CONSTRAINT FK_CONTRACT_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.CONTRACT_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.CONTRACT_DATE_VALUES_TENANT                      ON FHIRAPP.CONTRACT_DATE_VALUES          FOR ROWS WHERE FHIRAPP.CONTRACT_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.CONTRACT_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.CONTRACT_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_CONTRACT_NUMBER_VALUES_RPS ON FHIRAPP.CONTRACT_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

CREATE INDEX FHIRAPP.IDX_CONTRACT_NUMBER_VALUES_PNNV ON FHIRAPP.CONTRACT_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.CONTRACT_NUMBER_VALUES ADD CONSTRAINT FK_CONTRACT_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.CONTRACT_NUMBER_VALUES ADD CONSTRAINT FK_CONTRACT_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.CONTRACT_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.CONTRACT_NUMBER_VALUES_TENANT                      ON FHIRAPP.CONTRACT_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.CONTRACT_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.CONTRACT_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.CONTRACT_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_CONTRACT_LATLNG_VALUES_RPLAT ON FHIRAPP.CONTRACT_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_CONTRACT_LATLNG_VALUES_PNNLV ON FHIRAPP.CONTRACT_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_CONTRACT_LATLNG_VALUES_RPLNG ON FHIRAPP.CONTRACT_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_CONTRACT_LATLNG_VALUES_PNNHV ON FHIRAPP.CONTRACT_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.CONTRACT_LATLNG_VALUES ADD CONSTRAINT FK_CONTRACT_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.CONTRACT_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.CONTRACT_LATLNG_VALUES ADD CONSTRAINT FK_CONTRACT_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.CONTRACT_LATLNG_VALUES_TENANT                      ON FHIRAPP.CONTRACT_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.CONTRACT_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.CONTRACT_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.CONTRACT_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_CONTRACT_QUANTITY_VALUES_PNNV ON FHIRAPP.CONTRACT_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_CONTRACT_QUANTITY_VALUES_RPS ON FHIRAPP.CONTRACT_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_CONTRACT_QUANTITY_VALUES_PCLHSR ON FHIRAPP.CONTRACT_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_CONTRACT_QUANTITY_VALUES_RPCLHS ON FHIRAPP.CONTRACT_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_CONTRACT_QUANTITY_VALUES_PCHLSR ON FHIRAPP.CONTRACT_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_CONTRACT_QUANTITY_VALUES_RPCHLS ON FHIRAPP.CONTRACT_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

ALTER TABLE FHIRAPP.CONTRACT_QUANTITY_VALUES ADD CONSTRAINT FK_CONTRACT_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.CONTRACT_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.CONTRACT_QUANTITY_VALUES ADD CONSTRAINT FK_CONTRACT_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.CONTRACT_QUANTITY_VALUES_TENANT                      ON FHIRAPP.CONTRACT_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.CONTRACT_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.CONTRACT_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.PERSON_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT PERSON_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.PERSON_LOGICAL_RESOURCES ADD CONSTRAINT FK_PERSON_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.PERSON_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.PERSON_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.PERSON_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.PERSON_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.PERSON_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT PERSON_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.PERSON_RESOURCES_PRF_IN1 ON FHIRAPP.PERSON_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.PERSON_RESOURCES_TENANT                      ON FHIRAPP.PERSON_RESOURCES          FOR ROWS WHERE FHIRAPP.PERSON_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.PERSON_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.PERSON_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_PERSON_STR_VALUES_RPL ON FHIRAPP.PERSON_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

CREATE INDEX FHIRAPP.IDX_PERSON_STR_VALUES_PSR ON FHIRAPP.PERSON_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_PERSON_STR_VALUES_RPS ON FHIRAPP.PERSON_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

CREATE INDEX FHIRAPP.IDX_PERSON_STR_VALUES_PLR ON FHIRAPP.PERSON_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.PERSON_STR_VALUES ADD CONSTRAINT FK_PERSON_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.PERSON_STR_VALUES ADD CONSTRAINT FK_PERSON_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.PERSON_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.PERSON_STR_VALUES_TENANT                      ON FHIRAPP.PERSON_STR_VALUES          FOR ROWS WHERE FHIRAPP.PERSON_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.PERSON_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.PERSON_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_PERSON_TOKEN_VALUES_PNCSCV ON FHIRAPP.PERSON_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_PERSON_TOKEN_VALUES_RPS ON FHIRAPP.PERSON_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

ALTER TABLE FHIRAPP.PERSON_TOKEN_VALUES ADD CONSTRAINT FK_PERSON_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.PERSON_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.PERSON_TOKEN_VALUES ADD CONSTRAINT FK_PERSON_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.PERSON_TOKEN_VALUES ADD CONSTRAINT FK_PERSON_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

CREATE PERMISSION FHIRAPP.PERSON_TOKEN_VALUES_TENANT                      ON FHIRAPP.PERSON_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.PERSON_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.PERSON_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.PERSON_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_PERSON_DATE_VALUES_PVR ON FHIRAPP.PERSON_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_PERSON_DATE_VALUES_PSER ON FHIRAPP.PERSON_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_PERSON_DATE_VALUES_RPSE ON FHIRAPP.PERSON_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

CREATE INDEX FHIRAPP.IDX_PERSON_DATE_VALUES_PESR ON FHIRAPP.PERSON_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_PERSON_DATE_VALUES_RPV ON FHIRAPP.PERSON_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

ALTER TABLE FHIRAPP.PERSON_DATE_VALUES ADD CONSTRAINT FK_PERSON_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.PERSON_DATE_VALUES ADD CONSTRAINT FK_PERSON_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.PERSON_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.PERSON_DATE_VALUES_TENANT                      ON FHIRAPP.PERSON_DATE_VALUES          FOR ROWS WHERE FHIRAPP.PERSON_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.PERSON_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.PERSON_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_PERSON_NUMBER_VALUES_PNNV ON FHIRAPP.PERSON_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_PERSON_NUMBER_VALUES_RPS ON FHIRAPP.PERSON_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

ALTER TABLE FHIRAPP.PERSON_NUMBER_VALUES ADD CONSTRAINT FK_PERSON_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.PERSON_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.PERSON_NUMBER_VALUES ADD CONSTRAINT FK_PERSON_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.PERSON_NUMBER_VALUES_TENANT                      ON FHIRAPP.PERSON_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.PERSON_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.PERSON_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.PERSON_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_PERSON_LATLNG_VALUES_PNNHV ON FHIRAPP.PERSON_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_PERSON_LATLNG_VALUES_RPLNG ON FHIRAPP.PERSON_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_PERSON_LATLNG_VALUES_RPLAT ON FHIRAPP.PERSON_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_PERSON_LATLNG_VALUES_PNNLV ON FHIRAPP.PERSON_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.PERSON_LATLNG_VALUES ADD CONSTRAINT FK_PERSON_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.PERSON_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.PERSON_LATLNG_VALUES ADD CONSTRAINT FK_PERSON_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.PERSON_LATLNG_VALUES_TENANT                      ON FHIRAPP.PERSON_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.PERSON_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.PERSON_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.PERSON_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_PERSON_QUANTITY_VALUES_RPS ON FHIRAPP.PERSON_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_PERSON_QUANTITY_VALUES_RPCHLS ON FHIRAPP.PERSON_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_PERSON_QUANTITY_VALUES_PCHLSR ON FHIRAPP.PERSON_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_PERSON_QUANTITY_VALUES_PNNV ON FHIRAPP.PERSON_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_PERSON_QUANTITY_VALUES_RPCLHS ON FHIRAPP.PERSON_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_PERSON_QUANTITY_VALUES_PCLHSR ON FHIRAPP.PERSON_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.PERSON_QUANTITY_VALUES ADD CONSTRAINT FK_PERSON_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.PERSON_QUANTITY_VALUES ADD CONSTRAINT FK_PERSON_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.PERSON_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.PERSON_QUANTITY_VALUES_TENANT                      ON FHIRAPP.PERSON_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.PERSON_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.PERSON_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.RISKASSESSMENT_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT RISKASSESSMENT_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.RISKASSESSMENT_LOGICAL_RESOURCES ADD CONSTRAINT FK_RISKASSESSMENT_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.RISKASSESSMENT_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.RISKASSESSMENT_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.RISKASSESSMENT_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.RISKASSESSMENT_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.RISKASSESSMENT_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT RISKASSESSMENT_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.RISKASSESSMENT_RESOURCES_PRF_IN1 ON FHIRAPP.RISKASSESSMENT_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.RISKASSESSMENT_RESOURCES_TENANT                      ON FHIRAPP.RISKASSESSMENT_RESOURCES          FOR ROWS WHERE FHIRAPP.RISKASSESSMENT_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.RISKASSESSMENT_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.RISKASSESSMENT_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_RISKASSESSMENT_STR_VALUES_RPS ON FHIRAPP.RISKASSESSMENT_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

CREATE INDEX FHIRAPP.IDX_RISKASSESSMENT_STR_VALUES_PLR ON FHIRAPP.RISKASSESSMENT_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_RISKASSESSMENT_STR_VALUES_PSR ON FHIRAPP.RISKASSESSMENT_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_RISKASSESSMENT_STR_VALUES_RPL ON FHIRAPP.RISKASSESSMENT_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

ALTER TABLE FHIRAPP.RISKASSESSMENT_STR_VALUES ADD CONSTRAINT FK_RISKASSESSMENT_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.RISKASSESSMENT_STR_VALUES ADD CONSTRAINT FK_RISKASSESSMENT_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.RISKASSESSMENT_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.RISKASSESSMENT_STR_VALUES_TENANT                      ON FHIRAPP.RISKASSESSMENT_STR_VALUES          FOR ROWS WHERE FHIRAPP.RISKASSESSMENT_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.RISKASSESSMENT_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.RISKASSESSMENT_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_RISKASSESSMENT_TOKEN_VALUES_PNCSCV ON FHIRAPP.RISKASSESSMENT_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_RISKASSESSMENT_TOKEN_VALUES_RPS ON FHIRAPP.RISKASSESSMENT_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

ALTER TABLE FHIRAPP.RISKASSESSMENT_TOKEN_VALUES ADD CONSTRAINT FK_RISKASSESSMENT_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

ALTER TABLE FHIRAPP.RISKASSESSMENT_TOKEN_VALUES ADD CONSTRAINT FK_RISKASSESSMENT_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.RISKASSESSMENT_TOKEN_VALUES ADD CONSTRAINT FK_RISKASSESSMENT_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.RISKASSESSMENT_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.RISKASSESSMENT_TOKEN_VALUES_TENANT                      ON FHIRAPP.RISKASSESSMENT_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.RISKASSESSMENT_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.RISKASSESSMENT_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.RISKASSESSMENT_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_RISKASSESSMENT_DATE_VALUES_RPV ON FHIRAPP.RISKASSESSMENT_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

CREATE INDEX FHIRAPP.IDX_RISKASSESSMENT_DATE_VALUES_PSER ON FHIRAPP.RISKASSESSMENT_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_RISKASSESSMENT_DATE_VALUES_RPSE ON FHIRAPP.RISKASSESSMENT_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

CREATE INDEX FHIRAPP.IDX_RISKASSESSMENT_DATE_VALUES_PVR ON FHIRAPP.RISKASSESSMENT_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_RISKASSESSMENT_DATE_VALUES_PESR ON FHIRAPP.RISKASSESSMENT_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.RISKASSESSMENT_DATE_VALUES ADD CONSTRAINT FK_RISKASSESSMENT_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.RISKASSESSMENT_DATE_VALUES ADD CONSTRAINT FK_RISKASSESSMENT_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.RISKASSESSMENT_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.RISKASSESSMENT_DATE_VALUES_TENANT                      ON FHIRAPP.RISKASSESSMENT_DATE_VALUES          FOR ROWS WHERE FHIRAPP.RISKASSESSMENT_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.RISKASSESSMENT_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.RISKASSESSMENT_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_RISKASSESSMENT_NUMBER_VALUES_PNNV ON FHIRAPP.RISKASSESSMENT_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_RISKASSESSMENT_NUMBER_VALUES_RPS ON FHIRAPP.RISKASSESSMENT_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

ALTER TABLE FHIRAPP.RISKASSESSMENT_NUMBER_VALUES ADD CONSTRAINT FK_RISKASSESSMENT_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.RISKASSESSMENT_NUMBER_VALUES ADD CONSTRAINT FK_RISKASSESSMENT_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.RISKASSESSMENT_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.RISKASSESSMENT_NUMBER_VALUES_TENANT                      ON FHIRAPP.RISKASSESSMENT_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.RISKASSESSMENT_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.RISKASSESSMENT_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.RISKASSESSMENT_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_RISKASSESSMENT_LATLNG_VALUES_RPLNG ON FHIRAPP.RISKASSESSMENT_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_RISKASSESSMENT_LATLNG_VALUES_PNNLV ON FHIRAPP.RISKASSESSMENT_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_RISKASSESSMENT_LATLNG_VALUES_PNNHV ON FHIRAPP.RISKASSESSMENT_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_RISKASSESSMENT_LATLNG_VALUES_RPLAT ON FHIRAPP.RISKASSESSMENT_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

ALTER TABLE FHIRAPP.RISKASSESSMENT_LATLNG_VALUES ADD CONSTRAINT FK_RISKASSESSMENT_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.RISKASSESSMENT_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.RISKASSESSMENT_LATLNG_VALUES ADD CONSTRAINT FK_RISKASSESSMENT_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.RISKASSESSMENT_LATLNG_VALUES_TENANT                      ON FHIRAPP.RISKASSESSMENT_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.RISKASSESSMENT_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.RISKASSESSMENT_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.RISKASSESSMENT_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_RISKASSESSMENT_QUANTITY_VALUES_RPS ON FHIRAPP.RISKASSESSMENT_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_RISKASSESSMENT_QUANTITY_VALUES_PCHLSR ON FHIRAPP.RISKASSESSMENT_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_RISKASSESSMENT_QUANTITY_VALUES_PCLHSR ON FHIRAPP.RISKASSESSMENT_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_RISKASSESSMENT_QUANTITY_VALUES_RPCHLS ON FHIRAPP.RISKASSESSMENT_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_RISKASSESSMENT_QUANTITY_VALUES_PNNV ON FHIRAPP.RISKASSESSMENT_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_RISKASSESSMENT_QUANTITY_VALUES_RPCLHS ON FHIRAPP.RISKASSESSMENT_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

ALTER TABLE FHIRAPP.RISKASSESSMENT_QUANTITY_VALUES ADD CONSTRAINT FK_RISKASSESSMENT_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.RISKASSESSMENT_QUANTITY_VALUES ADD CONSTRAINT FK_RISKASSESSMENT_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.RISKASSESSMENT_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.RISKASSESSMENT_QUANTITY_VALUES_TENANT                      ON FHIRAPP.RISKASSESSMENT_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.RISKASSESSMENT_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.RISKASSESSMENT_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.GROUP_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT GROUP_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.GROUP_LOGICAL_RESOURCES ADD CONSTRAINT FK_GROUP_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.GROUP_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.GROUP_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.GROUP_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.GROUP_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.GROUP_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT GROUP_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.GROUP_RESOURCES_PRF_IN1 ON FHIRAPP.GROUP_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.GROUP_RESOURCES_TENANT                      ON FHIRAPP.GROUP_RESOURCES          FOR ROWS WHERE FHIRAPP.GROUP_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.GROUP_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.GROUP_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_GROUP_STR_VALUES_RPS ON FHIRAPP.GROUP_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

CREATE INDEX FHIRAPP.IDX_GROUP_STR_VALUES_PLR ON FHIRAPP.GROUP_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_GROUP_STR_VALUES_RPL ON FHIRAPP.GROUP_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

CREATE INDEX FHIRAPP.IDX_GROUP_STR_VALUES_PSR ON FHIRAPP.GROUP_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.GROUP_STR_VALUES ADD CONSTRAINT FK_GROUP_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.GROUP_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.GROUP_STR_VALUES ADD CONSTRAINT FK_GROUP_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.GROUP_STR_VALUES_TENANT                      ON FHIRAPP.GROUP_STR_VALUES          FOR ROWS WHERE FHIRAPP.GROUP_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.GROUP_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.GROUP_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_GROUP_TOKEN_VALUES_RPS ON FHIRAPP.GROUP_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

CREATE INDEX FHIRAPP.IDX_GROUP_TOKEN_VALUES_PNCSCV ON FHIRAPP.GROUP_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.GROUP_TOKEN_VALUES ADD CONSTRAINT FK_GROUP_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.GROUP_TOKEN_VALUES ADD CONSTRAINT FK_GROUP_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.GROUP_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.GROUP_TOKEN_VALUES ADD CONSTRAINT FK_GROUP_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

CREATE PERMISSION FHIRAPP.GROUP_TOKEN_VALUES_TENANT                      ON FHIRAPP.GROUP_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.GROUP_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.GROUP_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.GROUP_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_GROUP_DATE_VALUES_PSER ON FHIRAPP.GROUP_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_GROUP_DATE_VALUES_RPSE ON FHIRAPP.GROUP_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

CREATE INDEX FHIRAPP.IDX_GROUP_DATE_VALUES_PVR ON FHIRAPP.GROUP_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_GROUP_DATE_VALUES_PESR ON FHIRAPP.GROUP_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_GROUP_DATE_VALUES_RPV ON FHIRAPP.GROUP_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

ALTER TABLE FHIRAPP.GROUP_DATE_VALUES ADD CONSTRAINT FK_GROUP_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.GROUP_DATE_VALUES ADD CONSTRAINT FK_GROUP_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.GROUP_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.GROUP_DATE_VALUES_TENANT                      ON FHIRAPP.GROUP_DATE_VALUES          FOR ROWS WHERE FHIRAPP.GROUP_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.GROUP_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.GROUP_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_GROUP_NUMBER_VALUES_PNNV ON FHIRAPP.GROUP_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_GROUP_NUMBER_VALUES_RPS ON FHIRAPP.GROUP_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

ALTER TABLE FHIRAPP.GROUP_NUMBER_VALUES ADD CONSTRAINT FK_GROUP_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.GROUP_NUMBER_VALUES ADD CONSTRAINT FK_GROUP_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.GROUP_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.GROUP_NUMBER_VALUES_TENANT                      ON FHIRAPP.GROUP_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.GROUP_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.GROUP_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.GROUP_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_GROUP_LATLNG_VALUES_RPLAT ON FHIRAPP.GROUP_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_GROUP_LATLNG_VALUES_PNNLV ON FHIRAPP.GROUP_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_GROUP_LATLNG_VALUES_PNNHV ON FHIRAPP.GROUP_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_GROUP_LATLNG_VALUES_RPLNG ON FHIRAPP.GROUP_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

ALTER TABLE FHIRAPP.GROUP_LATLNG_VALUES ADD CONSTRAINT FK_GROUP_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.GROUP_LATLNG_VALUES ADD CONSTRAINT FK_GROUP_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.GROUP_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.GROUP_LATLNG_VALUES_TENANT                      ON FHIRAPP.GROUP_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.GROUP_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.GROUP_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.GROUP_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_GROUP_QUANTITY_VALUES_PCHLSR ON FHIRAPP.GROUP_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_GROUP_QUANTITY_VALUES_RPCHLS ON FHIRAPP.GROUP_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_GROUP_QUANTITY_VALUES_PNNV ON FHIRAPP.GROUP_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_GROUP_QUANTITY_VALUES_RPS ON FHIRAPP.GROUP_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_GROUP_QUANTITY_VALUES_RPCLHS ON FHIRAPP.GROUP_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_GROUP_QUANTITY_VALUES_PCLHSR ON FHIRAPP.GROUP_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.GROUP_QUANTITY_VALUES ADD CONSTRAINT FK_GROUP_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.GROUP_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.GROUP_QUANTITY_VALUES ADD CONSTRAINT FK_GROUP_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.GROUP_QUANTITY_VALUES_TENANT                      ON FHIRAPP.GROUP_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.GROUP_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.GROUP_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.PAYMENTNOTICE_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT PAYMENTNOTICE_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.PAYMENTNOTICE_LOGICAL_RESOURCES ADD CONSTRAINT FK_PAYMENTNOTICE_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.PAYMENTNOTICE_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.PAYMENTNOTICE_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.PAYMENTNOTICE_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.PAYMENTNOTICE_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.PAYMENTNOTICE_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT PAYMENTNOTICE_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.PAYMENTNOTICE_RESOURCES_PRF_IN1 ON FHIRAPP.PAYMENTNOTICE_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.PAYMENTNOTICE_RESOURCES_TENANT                      ON FHIRAPP.PAYMENTNOTICE_RESOURCES          FOR ROWS WHERE FHIRAPP.PAYMENTNOTICE_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.PAYMENTNOTICE_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.PAYMENTNOTICE_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_PAYMENTNOTICE_STR_VALUES_RPS ON FHIRAPP.PAYMENTNOTICE_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

CREATE INDEX FHIRAPP.IDX_PAYMENTNOTICE_STR_VALUES_PLR ON FHIRAPP.PAYMENTNOTICE_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_PAYMENTNOTICE_STR_VALUES_PSR ON FHIRAPP.PAYMENTNOTICE_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_PAYMENTNOTICE_STR_VALUES_RPL ON FHIRAPP.PAYMENTNOTICE_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

ALTER TABLE FHIRAPP.PAYMENTNOTICE_STR_VALUES ADD CONSTRAINT FK_PAYMENTNOTICE_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.PAYMENTNOTICE_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.PAYMENTNOTICE_STR_VALUES ADD CONSTRAINT FK_PAYMENTNOTICE_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.PAYMENTNOTICE_STR_VALUES_TENANT                      ON FHIRAPP.PAYMENTNOTICE_STR_VALUES          FOR ROWS WHERE FHIRAPP.PAYMENTNOTICE_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.PAYMENTNOTICE_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.PAYMENTNOTICE_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_PAYMENTNOTICE_TOKEN_VALUES_RPS ON FHIRAPP.PAYMENTNOTICE_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

CREATE INDEX FHIRAPP.IDX_PAYMENTNOTICE_TOKEN_VALUES_PNCSCV ON FHIRAPP.PAYMENTNOTICE_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.PAYMENTNOTICE_TOKEN_VALUES ADD CONSTRAINT FK_PAYMENTNOTICE_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

ALTER TABLE FHIRAPP.PAYMENTNOTICE_TOKEN_VALUES ADD CONSTRAINT FK_PAYMENTNOTICE_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.PAYMENTNOTICE_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.PAYMENTNOTICE_TOKEN_VALUES ADD CONSTRAINT FK_PAYMENTNOTICE_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.PAYMENTNOTICE_TOKEN_VALUES_TENANT                      ON FHIRAPP.PAYMENTNOTICE_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.PAYMENTNOTICE_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.PAYMENTNOTICE_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.PAYMENTNOTICE_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_PAYMENTNOTICE_DATE_VALUES_PVR ON FHIRAPP.PAYMENTNOTICE_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_PAYMENTNOTICE_DATE_VALUES_PESR ON FHIRAPP.PAYMENTNOTICE_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_PAYMENTNOTICE_DATE_VALUES_RPV ON FHIRAPP.PAYMENTNOTICE_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

CREATE INDEX FHIRAPP.IDX_PAYMENTNOTICE_DATE_VALUES_RPSE ON FHIRAPP.PAYMENTNOTICE_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

CREATE INDEX FHIRAPP.IDX_PAYMENTNOTICE_DATE_VALUES_PSER ON FHIRAPP.PAYMENTNOTICE_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.PAYMENTNOTICE_DATE_VALUES ADD CONSTRAINT FK_PAYMENTNOTICE_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.PAYMENTNOTICE_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.PAYMENTNOTICE_DATE_VALUES ADD CONSTRAINT FK_PAYMENTNOTICE_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.PAYMENTNOTICE_DATE_VALUES_TENANT                      ON FHIRAPP.PAYMENTNOTICE_DATE_VALUES          FOR ROWS WHERE FHIRAPP.PAYMENTNOTICE_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.PAYMENTNOTICE_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.PAYMENTNOTICE_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_PAYMENTNOTICE_NUMBER_VALUES_RPS ON FHIRAPP.PAYMENTNOTICE_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

CREATE INDEX FHIRAPP.IDX_PAYMENTNOTICE_NUMBER_VALUES_PNNV ON FHIRAPP.PAYMENTNOTICE_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.PAYMENTNOTICE_NUMBER_VALUES ADD CONSTRAINT FK_PAYMENTNOTICE_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.PAYMENTNOTICE_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.PAYMENTNOTICE_NUMBER_VALUES ADD CONSTRAINT FK_PAYMENTNOTICE_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.PAYMENTNOTICE_NUMBER_VALUES_TENANT                      ON FHIRAPP.PAYMENTNOTICE_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.PAYMENTNOTICE_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.PAYMENTNOTICE_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.PAYMENTNOTICE_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_PAYMENTNOTICE_LATLNG_VALUES_PNNHV ON FHIRAPP.PAYMENTNOTICE_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_PAYMENTNOTICE_LATLNG_VALUES_RPLNG ON FHIRAPP.PAYMENTNOTICE_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_PAYMENTNOTICE_LATLNG_VALUES_PNNLV ON FHIRAPP.PAYMENTNOTICE_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_PAYMENTNOTICE_LATLNG_VALUES_RPLAT ON FHIRAPP.PAYMENTNOTICE_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

ALTER TABLE FHIRAPP.PAYMENTNOTICE_LATLNG_VALUES ADD CONSTRAINT FK_PAYMENTNOTICE_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.PAYMENTNOTICE_LATLNG_VALUES ADD CONSTRAINT FK_PAYMENTNOTICE_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.PAYMENTNOTICE_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.PAYMENTNOTICE_LATLNG_VALUES_TENANT                      ON FHIRAPP.PAYMENTNOTICE_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.PAYMENTNOTICE_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.PAYMENTNOTICE_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.PAYMENTNOTICE_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_PAYMENTNOTICE_QUANTITY_VALUES_PCLHSR ON FHIRAPP.PAYMENTNOTICE_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_PAYMENTNOTICE_QUANTITY_VALUES_RPCHLS ON FHIRAPP.PAYMENTNOTICE_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_PAYMENTNOTICE_QUANTITY_VALUES_PCHLSR ON FHIRAPP.PAYMENTNOTICE_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_PAYMENTNOTICE_QUANTITY_VALUES_RPCLHS ON FHIRAPP.PAYMENTNOTICE_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_PAYMENTNOTICE_QUANTITY_VALUES_PNNV ON FHIRAPP.PAYMENTNOTICE_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_PAYMENTNOTICE_QUANTITY_VALUES_RPS ON FHIRAPP.PAYMENTNOTICE_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

ALTER TABLE FHIRAPP.PAYMENTNOTICE_QUANTITY_VALUES ADD CONSTRAINT FK_PAYMENTNOTICE_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.PAYMENTNOTICE_QUANTITY_VALUES ADD CONSTRAINT FK_PAYMENTNOTICE_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.PAYMENTNOTICE_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.PAYMENTNOTICE_QUANTITY_VALUES_TENANT                      ON FHIRAPP.PAYMENTNOTICE_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.PAYMENTNOTICE_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.PAYMENTNOTICE_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.RESEARCHDEFINITION_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT RESEARCHDEFINITION_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.RESEARCHDEFINITION_LOGICAL_RESOURCES ADD CONSTRAINT FK_RESEARCHDEFINITION_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.RESEARCHDEFINITION_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.RESEARCHDEFINITION_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.RESEARCHDEFINITION_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.RESEARCHDEFINITION_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.RESEARCHDEFINITION_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT RESEARCHDEFINITION_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.RESEARCHDEFINITION_RESOURCES_PRF_IN1 ON FHIRAPP.RESEARCHDEFINITION_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.RESEARCHDEFINITION_RESOURCES_TENANT                      ON FHIRAPP.RESEARCHDEFINITION_RESOURCES          FOR ROWS WHERE FHIRAPP.RESEARCHDEFINITION_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.RESEARCHDEFINITION_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.RESEARCHDEFINITION_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_RESEARCHDEFINITION_STR_VALUES_PLR ON FHIRAPP.RESEARCHDEFINITION_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_RESEARCHDEFINITION_STR_VALUES_RPS ON FHIRAPP.RESEARCHDEFINITION_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

CREATE INDEX FHIRAPP.IDX_RESEARCHDEFINITION_STR_VALUES_RPL ON FHIRAPP.RESEARCHDEFINITION_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

CREATE INDEX FHIRAPP.IDX_RESEARCHDEFINITION_STR_VALUES_PSR ON FHIRAPP.RESEARCHDEFINITION_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.RESEARCHDEFINITION_STR_VALUES ADD CONSTRAINT FK_RESEARCHDEFINITION_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.RESEARCHDEFINITION_STR_VALUES ADD CONSTRAINT FK_RESEARCHDEFINITION_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.RESEARCHDEFINITION_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.RESEARCHDEFINITION_STR_VALUES_TENANT                      ON FHIRAPP.RESEARCHDEFINITION_STR_VALUES          FOR ROWS WHERE FHIRAPP.RESEARCHDEFINITION_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.RESEARCHDEFINITION_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.RESEARCHDEFINITION_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_RESEARCHDEFINITION_TOKEN_VALUES_PNCSCV ON FHIRAPP.RESEARCHDEFINITION_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_RESEARCHDEFINITION_TOKEN_VALUES_RPS ON FHIRAPP.RESEARCHDEFINITION_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

ALTER TABLE FHIRAPP.RESEARCHDEFINITION_TOKEN_VALUES ADD CONSTRAINT FK_RESEARCHDEFINITION_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.RESEARCHDEFINITION_TOKEN_VALUES ADD CONSTRAINT FK_RESEARCHDEFINITION_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.RESEARCHDEFINITION_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.RESEARCHDEFINITION_TOKEN_VALUES ADD CONSTRAINT FK_RESEARCHDEFINITION_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

CREATE PERMISSION FHIRAPP.RESEARCHDEFINITION_TOKEN_VALUES_TENANT                      ON FHIRAPP.RESEARCHDEFINITION_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.RESEARCHDEFINITION_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.RESEARCHDEFINITION_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.RESEARCHDEFINITION_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_RESEARCHDEFINITION_DATE_VALUES_PSER ON FHIRAPP.RESEARCHDEFINITION_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_RESEARCHDEFINITION_DATE_VALUES_PVR ON FHIRAPP.RESEARCHDEFINITION_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_RESEARCHDEFINITION_DATE_VALUES_PESR ON FHIRAPP.RESEARCHDEFINITION_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_RESEARCHDEFINITION_DATE_VALUES_RPSE ON FHIRAPP.RESEARCHDEFINITION_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

CREATE INDEX FHIRAPP.IDX_RESEARCHDEFINITION_DATE_VALUES_RPV ON FHIRAPP.RESEARCHDEFINITION_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

ALTER TABLE FHIRAPP.RESEARCHDEFINITION_DATE_VALUES ADD CONSTRAINT FK_RESEARCHDEFINITION_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.RESEARCHDEFINITION_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.RESEARCHDEFINITION_DATE_VALUES ADD CONSTRAINT FK_RESEARCHDEFINITION_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.RESEARCHDEFINITION_DATE_VALUES_TENANT                      ON FHIRAPP.RESEARCHDEFINITION_DATE_VALUES          FOR ROWS WHERE FHIRAPP.RESEARCHDEFINITION_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.RESEARCHDEFINITION_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.RESEARCHDEFINITION_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_RESEARCHDEFINITION_NUMBER_VALUES_PNNV ON FHIRAPP.RESEARCHDEFINITION_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_RESEARCHDEFINITION_NUMBER_VALUES_RPS ON FHIRAPP.RESEARCHDEFINITION_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

ALTER TABLE FHIRAPP.RESEARCHDEFINITION_NUMBER_VALUES ADD CONSTRAINT FK_RESEARCHDEFINITION_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.RESEARCHDEFINITION_NUMBER_VALUES ADD CONSTRAINT FK_RESEARCHDEFINITION_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.RESEARCHDEFINITION_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.RESEARCHDEFINITION_NUMBER_VALUES_TENANT                      ON FHIRAPP.RESEARCHDEFINITION_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.RESEARCHDEFINITION_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.RESEARCHDEFINITION_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.RESEARCHDEFINITION_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_RESEARCHDEFINITION_LATLNG_VALUES_RPLNG ON FHIRAPP.RESEARCHDEFINITION_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_RESEARCHDEFINITION_LATLNG_VALUES_PNNHV ON FHIRAPP.RESEARCHDEFINITION_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_RESEARCHDEFINITION_LATLNG_VALUES_RPLAT ON FHIRAPP.RESEARCHDEFINITION_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_RESEARCHDEFINITION_LATLNG_VALUES_PNNLV ON FHIRAPP.RESEARCHDEFINITION_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.RESEARCHDEFINITION_LATLNG_VALUES ADD CONSTRAINT FK_RESEARCHDEFINITION_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.RESEARCHDEFINITION_LATLNG_VALUES ADD CONSTRAINT FK_RESEARCHDEFINITION_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.RESEARCHDEFINITION_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.RESEARCHDEFINITION_LATLNG_VALUES_TENANT                      ON FHIRAPP.RESEARCHDEFINITION_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.RESEARCHDEFINITION_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.RESEARCHDEFINITION_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.RESEARCHDEFINITION_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_RESEARCHDEFINITION_QUANTITY_VALUES_RPS ON FHIRAPP.RESEARCHDEFINITION_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_RESEARCHDEFINITION_QUANTITY_VALUES_RPCHLS ON FHIRAPP.RESEARCHDEFINITION_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_RESEARCHDEFINITION_QUANTITY_VALUES_PCHLSR ON FHIRAPP.RESEARCHDEFINITION_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_RESEARCHDEFINITION_QUANTITY_VALUES_PNNV ON FHIRAPP.RESEARCHDEFINITION_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_RESEARCHDEFINITION_QUANTITY_VALUES_PCLHSR ON FHIRAPP.RESEARCHDEFINITION_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_RESEARCHDEFINITION_QUANTITY_VALUES_RPCLHS ON FHIRAPP.RESEARCHDEFINITION_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

ALTER TABLE FHIRAPP.RESEARCHDEFINITION_QUANTITY_VALUES ADD CONSTRAINT FK_RESEARCHDEFINITION_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.RESEARCHDEFINITION_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.RESEARCHDEFINITION_QUANTITY_VALUES ADD CONSTRAINT FK_RESEARCHDEFINITION_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.RESEARCHDEFINITION_QUANTITY_VALUES_TENANT                      ON FHIRAPP.RESEARCHDEFINITION_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.RESEARCHDEFINITION_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.RESEARCHDEFINITION_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDICINALPRODUCTMANUFACTURED_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT MEDICINALPRODUCTMANUFACTURED_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.MEDICINALPRODUCTMANUFACTURED_LOGICAL_RESOURCES ADD CONSTRAINT FK_MEDICINALPRODUCTMANUFACTURED_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.MEDICINALPRODUCTMANUFACTURED_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.MEDICINALPRODUCTMANUFACTURED_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.MEDICINALPRODUCTMANUFACTURED_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDICINALPRODUCTMANUFACTURED_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDICINALPRODUCTMANUFACTURED_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT MEDICINALPRODUCTMANUFACTURED_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.MEDICINALPRODUCTMANUFACTURED_RESOURCES_PRF_IN1 ON FHIRAPP.MEDICINALPRODUCTMANUFACTURED_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.MEDICINALPRODUCTMANUFACTURED_RESOURCES_TENANT                      ON FHIRAPP.MEDICINALPRODUCTMANUFACTURED_RESOURCES          FOR ROWS WHERE FHIRAPP.MEDICINALPRODUCTMANUFACTURED_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDICINALPRODUCTMANUFACTURED_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDICINALPRODUCTMANUFACTURED_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTMANUFACTURED_STR_VALUES_PLR ON FHIRAPP.MEDICINALPRODUCTMANUFACTURED_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTMANUFACTURED_STR_VALUES_RPS ON FHIRAPP.MEDICINALPRODUCTMANUFACTURED_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTMANUFACTURED_STR_VALUES_PSR ON FHIRAPP.MEDICINALPRODUCTMANUFACTURED_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTMANUFACTURED_STR_VALUES_RPL ON FHIRAPP.MEDICINALPRODUCTMANUFACTURED_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

ALTER TABLE FHIRAPP.MEDICINALPRODUCTMANUFACTURED_STR_VALUES ADD CONSTRAINT FK_MEDICINALPRODUCTMANUFACTURED_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.MEDICINALPRODUCTMANUFACTURED_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.MEDICINALPRODUCTMANUFACTURED_STR_VALUES ADD CONSTRAINT FK_MEDICINALPRODUCTMANUFACTURED_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.MEDICINALPRODUCTMANUFACTURED_STR_VALUES_TENANT                      ON FHIRAPP.MEDICINALPRODUCTMANUFACTURED_STR_VALUES          FOR ROWS WHERE FHIRAPP.MEDICINALPRODUCTMANUFACTURED_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDICINALPRODUCTMANUFACTURED_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDICINALPRODUCTMANUFACTURED_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTMANUFACTURED_TOKEN_VALUES_RPS ON FHIRAPP.MEDICINALPRODUCTMANUFACTURED_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTMANUFACTURED_TOKEN_VALUES_PNCSCV ON FHIRAPP.MEDICINALPRODUCTMANUFACTURED_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.MEDICINALPRODUCTMANUFACTURED_TOKEN_VALUES ADD CONSTRAINT FK_MEDICINALPRODUCTMANUFACTURED_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

ALTER TABLE FHIRAPP.MEDICINALPRODUCTMANUFACTURED_TOKEN_VALUES ADD CONSTRAINT FK_MEDICINALPRODUCTMANUFACTURED_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.MEDICINALPRODUCTMANUFACTURED_TOKEN_VALUES ADD CONSTRAINT FK_MEDICINALPRODUCTMANUFACTURED_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.MEDICINALPRODUCTMANUFACTURED_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.MEDICINALPRODUCTMANUFACTURED_TOKEN_VALUES_TENANT                      ON FHIRAPP.MEDICINALPRODUCTMANUFACTURED_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.MEDICINALPRODUCTMANUFACTURED_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDICINALPRODUCTMANUFACTURED_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDICINALPRODUCTMANUFACTURED_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTMANUFACTURED_DATE_VALUES_PESR ON FHIRAPP.MEDICINALPRODUCTMANUFACTURED_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTMANUFACTURED_DATE_VALUES_PVR ON FHIRAPP.MEDICINALPRODUCTMANUFACTURED_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTMANUFACTURED_DATE_VALUES_RPSE ON FHIRAPP.MEDICINALPRODUCTMANUFACTURED_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTMANUFACTURED_DATE_VALUES_PSER ON FHIRAPP.MEDICINALPRODUCTMANUFACTURED_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTMANUFACTURED_DATE_VALUES_RPV ON FHIRAPP.MEDICINALPRODUCTMANUFACTURED_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

ALTER TABLE FHIRAPP.MEDICINALPRODUCTMANUFACTURED_DATE_VALUES ADD CONSTRAINT FK_MEDICINALPRODUCTMANUFACTURED_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.MEDICINALPRODUCTMANUFACTURED_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.MEDICINALPRODUCTMANUFACTURED_DATE_VALUES ADD CONSTRAINT FK_MEDICINALPRODUCTMANUFACTURED_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.MEDICINALPRODUCTMANUFACTURED_DATE_VALUES_TENANT                      ON FHIRAPP.MEDICINALPRODUCTMANUFACTURED_DATE_VALUES          FOR ROWS WHERE FHIRAPP.MEDICINALPRODUCTMANUFACTURED_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDICINALPRODUCTMANUFACTURED_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDICINALPRODUCTMANUFACTURED_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTMANUFACTURED_NUMBER_VALUES_PNNV ON FHIRAPP.MEDICINALPRODUCTMANUFACTURED_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTMANUFACTURED_NUMBER_VALUES_RPS ON FHIRAPP.MEDICINALPRODUCTMANUFACTURED_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

ALTER TABLE FHIRAPP.MEDICINALPRODUCTMANUFACTURED_NUMBER_VALUES ADD CONSTRAINT FK_MEDICINALPRODUCTMANUFACTURED_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.MEDICINALPRODUCTMANUFACTURED_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.MEDICINALPRODUCTMANUFACTURED_NUMBER_VALUES ADD CONSTRAINT FK_MEDICINALPRODUCTMANUFACTURED_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.MEDICINALPRODUCTMANUFACTURED_NUMBER_VALUES_TENANT                      ON FHIRAPP.MEDICINALPRODUCTMANUFACTURED_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.MEDICINALPRODUCTMANUFACTURED_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDICINALPRODUCTMANUFACTURED_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDICINALPRODUCTMANUFACTURED_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTMANUFACTURED_LATLNG_VALUES_PNNHV ON FHIRAPP.MEDICINALPRODUCTMANUFACTURED_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTMANUFACTURED_LATLNG_VALUES_RPLAT ON FHIRAPP.MEDICINALPRODUCTMANUFACTURED_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTMANUFACTURED_LATLNG_VALUES_RPLNG ON FHIRAPP.MEDICINALPRODUCTMANUFACTURED_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTMANUFACTURED_LATLNG_VALUES_PNNLV ON FHIRAPP.MEDICINALPRODUCTMANUFACTURED_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.MEDICINALPRODUCTMANUFACTURED_LATLNG_VALUES ADD CONSTRAINT FK_MEDICINALPRODUCTMANUFACTURED_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.MEDICINALPRODUCTMANUFACTURED_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.MEDICINALPRODUCTMANUFACTURED_LATLNG_VALUES ADD CONSTRAINT FK_MEDICINALPRODUCTMANUFACTURED_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.MEDICINALPRODUCTMANUFACTURED_LATLNG_VALUES_TENANT                      ON FHIRAPP.MEDICINALPRODUCTMANUFACTURED_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.MEDICINALPRODUCTMANUFACTURED_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDICINALPRODUCTMANUFACTURED_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDICINALPRODUCTMANUFACTURED_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTMANUFACTURED_QUANTITY_VALUES_RPCLHS ON FHIRAPP.MEDICINALPRODUCTMANUFACTURED_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTMANUFACTURED_QUANTITY_VALUES_RPS ON FHIRAPP.MEDICINALPRODUCTMANUFACTURED_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTMANUFACTURED_QUANTITY_VALUES_PCLHSR ON FHIRAPP.MEDICINALPRODUCTMANUFACTURED_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTMANUFACTURED_QUANTITY_VALUES_RPCHLS ON FHIRAPP.MEDICINALPRODUCTMANUFACTURED_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTMANUFACTURED_QUANTITY_VALUES_PNNV ON FHIRAPP.MEDICINALPRODUCTMANUFACTURED_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTMANUFACTURED_QUANTITY_VALUES_PCHLSR ON FHIRAPP.MEDICINALPRODUCTMANUFACTURED_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.MEDICINALPRODUCTMANUFACTURED_QUANTITY_VALUES ADD CONSTRAINT FK_MEDICINALPRODUCTMANUFACTURED_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.MEDICINALPRODUCTMANUFACTURED_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.MEDICINALPRODUCTMANUFACTURED_QUANTITY_VALUES ADD CONSTRAINT FK_MEDICINALPRODUCTMANUFACTURED_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.MEDICINALPRODUCTMANUFACTURED_QUANTITY_VALUES_TENANT                      ON FHIRAPP.MEDICINALPRODUCTMANUFACTURED_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.MEDICINALPRODUCTMANUFACTURED_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDICINALPRODUCTMANUFACTURED_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.ORGANIZATION_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT ORGANIZATION_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.ORGANIZATION_LOGICAL_RESOURCES ADD CONSTRAINT FK_ORGANIZATION_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.ORGANIZATION_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.ORGANIZATION_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.ORGANIZATION_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.ORGANIZATION_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.ORGANIZATION_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT ORGANIZATION_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.ORGANIZATION_RESOURCES_PRF_IN1 ON FHIRAPP.ORGANIZATION_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.ORGANIZATION_RESOURCES_TENANT                      ON FHIRAPP.ORGANIZATION_RESOURCES          FOR ROWS WHERE FHIRAPP.ORGANIZATION_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.ORGANIZATION_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.ORGANIZATION_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_ORGANIZATION_STR_VALUES_RPL ON FHIRAPP.ORGANIZATION_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

CREATE INDEX FHIRAPP.IDX_ORGANIZATION_STR_VALUES_PSR ON FHIRAPP.ORGANIZATION_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_ORGANIZATION_STR_VALUES_PLR ON FHIRAPP.ORGANIZATION_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_ORGANIZATION_STR_VALUES_RPS ON FHIRAPP.ORGANIZATION_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

ALTER TABLE FHIRAPP.ORGANIZATION_STR_VALUES ADD CONSTRAINT FK_ORGANIZATION_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.ORGANIZATION_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.ORGANIZATION_STR_VALUES ADD CONSTRAINT FK_ORGANIZATION_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.ORGANIZATION_STR_VALUES_TENANT                      ON FHIRAPP.ORGANIZATION_STR_VALUES          FOR ROWS WHERE FHIRAPP.ORGANIZATION_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.ORGANIZATION_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.ORGANIZATION_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_ORGANIZATION_TOKEN_VALUES_RPS ON FHIRAPP.ORGANIZATION_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

CREATE INDEX FHIRAPP.IDX_ORGANIZATION_TOKEN_VALUES_PNCSCV ON FHIRAPP.ORGANIZATION_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.ORGANIZATION_TOKEN_VALUES ADD CONSTRAINT FK_ORGANIZATION_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.ORGANIZATION_TOKEN_VALUES ADD CONSTRAINT FK_ORGANIZATION_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.ORGANIZATION_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.ORGANIZATION_TOKEN_VALUES ADD CONSTRAINT FK_ORGANIZATION_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

CREATE PERMISSION FHIRAPP.ORGANIZATION_TOKEN_VALUES_TENANT                      ON FHIRAPP.ORGANIZATION_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.ORGANIZATION_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.ORGANIZATION_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.ORGANIZATION_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_ORGANIZATION_DATE_VALUES_PVR ON FHIRAPP.ORGANIZATION_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_ORGANIZATION_DATE_VALUES_PESR ON FHIRAPP.ORGANIZATION_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_ORGANIZATION_DATE_VALUES_RPV ON FHIRAPP.ORGANIZATION_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

CREATE INDEX FHIRAPP.IDX_ORGANIZATION_DATE_VALUES_RPSE ON FHIRAPP.ORGANIZATION_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

CREATE INDEX FHIRAPP.IDX_ORGANIZATION_DATE_VALUES_PSER ON FHIRAPP.ORGANIZATION_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.ORGANIZATION_DATE_VALUES ADD CONSTRAINT FK_ORGANIZATION_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.ORGANIZATION_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.ORGANIZATION_DATE_VALUES ADD CONSTRAINT FK_ORGANIZATION_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.ORGANIZATION_DATE_VALUES_TENANT                      ON FHIRAPP.ORGANIZATION_DATE_VALUES          FOR ROWS WHERE FHIRAPP.ORGANIZATION_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.ORGANIZATION_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.ORGANIZATION_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_ORGANIZATION_NUMBER_VALUES_PNNV ON FHIRAPP.ORGANIZATION_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_ORGANIZATION_NUMBER_VALUES_RPS ON FHIRAPP.ORGANIZATION_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

ALTER TABLE FHIRAPP.ORGANIZATION_NUMBER_VALUES ADD CONSTRAINT FK_ORGANIZATION_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.ORGANIZATION_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.ORGANIZATION_NUMBER_VALUES ADD CONSTRAINT FK_ORGANIZATION_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.ORGANIZATION_NUMBER_VALUES_TENANT                      ON FHIRAPP.ORGANIZATION_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.ORGANIZATION_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.ORGANIZATION_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.ORGANIZATION_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_ORGANIZATION_LATLNG_VALUES_PNNLV ON FHIRAPP.ORGANIZATION_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_ORGANIZATION_LATLNG_VALUES_RPLNG ON FHIRAPP.ORGANIZATION_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_ORGANIZATION_LATLNG_VALUES_RPLAT ON FHIRAPP.ORGANIZATION_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_ORGANIZATION_LATLNG_VALUES_PNNHV ON FHIRAPP.ORGANIZATION_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.ORGANIZATION_LATLNG_VALUES ADD CONSTRAINT FK_ORGANIZATION_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.ORGANIZATION_LATLNG_VALUES ADD CONSTRAINT FK_ORGANIZATION_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.ORGANIZATION_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.ORGANIZATION_LATLNG_VALUES_TENANT                      ON FHIRAPP.ORGANIZATION_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.ORGANIZATION_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.ORGANIZATION_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.ORGANIZATION_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_ORGANIZATION_QUANTITY_VALUES_PCLHSR ON FHIRAPP.ORGANIZATION_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_ORGANIZATION_QUANTITY_VALUES_RPCHLS ON FHIRAPP.ORGANIZATION_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_ORGANIZATION_QUANTITY_VALUES_PNNV ON FHIRAPP.ORGANIZATION_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_ORGANIZATION_QUANTITY_VALUES_PCHLSR ON FHIRAPP.ORGANIZATION_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_ORGANIZATION_QUANTITY_VALUES_RPCLHS ON FHIRAPP.ORGANIZATION_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_ORGANIZATION_QUANTITY_VALUES_RPS ON FHIRAPP.ORGANIZATION_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

ALTER TABLE FHIRAPP.ORGANIZATION_QUANTITY_VALUES ADD CONSTRAINT FK_ORGANIZATION_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.ORGANIZATION_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.ORGANIZATION_QUANTITY_VALUES ADD CONSTRAINT FK_ORGANIZATION_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.ORGANIZATION_QUANTITY_VALUES_TENANT                      ON FHIRAPP.ORGANIZATION_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.ORGANIZATION_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.ORGANIZATION_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.CARETEAM_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT CARETEAM_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.CARETEAM_LOGICAL_RESOURCES ADD CONSTRAINT FK_CARETEAM_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.CARETEAM_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.CARETEAM_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.CARETEAM_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.CARETEAM_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.CARETEAM_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT CARETEAM_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.CARETEAM_RESOURCES_PRF_IN1 ON FHIRAPP.CARETEAM_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.CARETEAM_RESOURCES_TENANT                      ON FHIRAPP.CARETEAM_RESOURCES          FOR ROWS WHERE FHIRAPP.CARETEAM_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.CARETEAM_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.CARETEAM_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_CARETEAM_STR_VALUES_RPL ON FHIRAPP.CARETEAM_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

CREATE INDEX FHIRAPP.IDX_CARETEAM_STR_VALUES_PSR ON FHIRAPP.CARETEAM_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_CARETEAM_STR_VALUES_PLR ON FHIRAPP.CARETEAM_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_CARETEAM_STR_VALUES_RPS ON FHIRAPP.CARETEAM_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

ALTER TABLE FHIRAPP.CARETEAM_STR_VALUES ADD CONSTRAINT FK_CARETEAM_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.CARETEAM_STR_VALUES ADD CONSTRAINT FK_CARETEAM_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.CARETEAM_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.CARETEAM_STR_VALUES_TENANT                      ON FHIRAPP.CARETEAM_STR_VALUES          FOR ROWS WHERE FHIRAPP.CARETEAM_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.CARETEAM_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.CARETEAM_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_CARETEAM_TOKEN_VALUES_PNCSCV ON FHIRAPP.CARETEAM_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_CARETEAM_TOKEN_VALUES_RPS ON FHIRAPP.CARETEAM_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

ALTER TABLE FHIRAPP.CARETEAM_TOKEN_VALUES ADD CONSTRAINT FK_CARETEAM_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

ALTER TABLE FHIRAPP.CARETEAM_TOKEN_VALUES ADD CONSTRAINT FK_CARETEAM_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.CARETEAM_TOKEN_VALUES ADD CONSTRAINT FK_CARETEAM_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.CARETEAM_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.CARETEAM_TOKEN_VALUES_TENANT                      ON FHIRAPP.CARETEAM_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.CARETEAM_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.CARETEAM_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.CARETEAM_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_CARETEAM_DATE_VALUES_PESR ON FHIRAPP.CARETEAM_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_CARETEAM_DATE_VALUES_RPV ON FHIRAPP.CARETEAM_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

CREATE INDEX FHIRAPP.IDX_CARETEAM_DATE_VALUES_RPSE ON FHIRAPP.CARETEAM_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

CREATE INDEX FHIRAPP.IDX_CARETEAM_DATE_VALUES_PSER ON FHIRAPP.CARETEAM_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_CARETEAM_DATE_VALUES_PVR ON FHIRAPP.CARETEAM_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.CARETEAM_DATE_VALUES ADD CONSTRAINT FK_CARETEAM_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.CARETEAM_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.CARETEAM_DATE_VALUES ADD CONSTRAINT FK_CARETEAM_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.CARETEAM_DATE_VALUES_TENANT                      ON FHIRAPP.CARETEAM_DATE_VALUES          FOR ROWS WHERE FHIRAPP.CARETEAM_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.CARETEAM_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.CARETEAM_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_CARETEAM_NUMBER_VALUES_PNNV ON FHIRAPP.CARETEAM_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_CARETEAM_NUMBER_VALUES_RPS ON FHIRAPP.CARETEAM_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

ALTER TABLE FHIRAPP.CARETEAM_NUMBER_VALUES ADD CONSTRAINT FK_CARETEAM_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.CARETEAM_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.CARETEAM_NUMBER_VALUES ADD CONSTRAINT FK_CARETEAM_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.CARETEAM_NUMBER_VALUES_TENANT                      ON FHIRAPP.CARETEAM_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.CARETEAM_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.CARETEAM_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.CARETEAM_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_CARETEAM_LATLNG_VALUES_PNNLV ON FHIRAPP.CARETEAM_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_CARETEAM_LATLNG_VALUES_RPLNG ON FHIRAPP.CARETEAM_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_CARETEAM_LATLNG_VALUES_PNNHV ON FHIRAPP.CARETEAM_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_CARETEAM_LATLNG_VALUES_RPLAT ON FHIRAPP.CARETEAM_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

ALTER TABLE FHIRAPP.CARETEAM_LATLNG_VALUES ADD CONSTRAINT FK_CARETEAM_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.CARETEAM_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.CARETEAM_LATLNG_VALUES ADD CONSTRAINT FK_CARETEAM_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.CARETEAM_LATLNG_VALUES_TENANT                      ON FHIRAPP.CARETEAM_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.CARETEAM_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.CARETEAM_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.CARETEAM_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_CARETEAM_QUANTITY_VALUES_PNNV ON FHIRAPP.CARETEAM_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_CARETEAM_QUANTITY_VALUES_PCHLSR ON FHIRAPP.CARETEAM_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_CARETEAM_QUANTITY_VALUES_RPCLHS ON FHIRAPP.CARETEAM_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_CARETEAM_QUANTITY_VALUES_RPS ON FHIRAPP.CARETEAM_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_CARETEAM_QUANTITY_VALUES_PCLHSR ON FHIRAPP.CARETEAM_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_CARETEAM_QUANTITY_VALUES_RPCHLS ON FHIRAPP.CARETEAM_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

ALTER TABLE FHIRAPP.CARETEAM_QUANTITY_VALUES ADD CONSTRAINT FK_CARETEAM_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.CARETEAM_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.CARETEAM_QUANTITY_VALUES ADD CONSTRAINT FK_CARETEAM_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.CARETEAM_QUANTITY_VALUES_TENANT                      ON FHIRAPP.CARETEAM_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.CARETEAM_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.CARETEAM_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.IMPLEMENTATIONGUIDE_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT IMPLEMENTATIONGUIDE_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.IMPLEMENTATIONGUIDE_LOGICAL_RESOURCES ADD CONSTRAINT FK_IMPLEMENTATIONGUIDE_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.IMPLEMENTATIONGUIDE_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.IMPLEMENTATIONGUIDE_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.IMPLEMENTATIONGUIDE_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.IMPLEMENTATIONGUIDE_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.IMPLEMENTATIONGUIDE_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT IMPLEMENTATIONGUIDE_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.IMPLEMENTATIONGUIDE_RESOURCES_PRF_IN1 ON FHIRAPP.IMPLEMENTATIONGUIDE_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.IMPLEMENTATIONGUIDE_RESOURCES_TENANT                      ON FHIRAPP.IMPLEMENTATIONGUIDE_RESOURCES          FOR ROWS WHERE FHIRAPP.IMPLEMENTATIONGUIDE_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.IMPLEMENTATIONGUIDE_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.IMPLEMENTATIONGUIDE_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_IMPLEMENTATIONGUIDE_STR_VALUES_PLR ON FHIRAPP.IMPLEMENTATIONGUIDE_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_IMPLEMENTATIONGUIDE_STR_VALUES_RPS ON FHIRAPP.IMPLEMENTATIONGUIDE_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

CREATE INDEX FHIRAPP.IDX_IMPLEMENTATIONGUIDE_STR_VALUES_PSR ON FHIRAPP.IMPLEMENTATIONGUIDE_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_IMPLEMENTATIONGUIDE_STR_VALUES_RPL ON FHIRAPP.IMPLEMENTATIONGUIDE_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

ALTER TABLE FHIRAPP.IMPLEMENTATIONGUIDE_STR_VALUES ADD CONSTRAINT FK_IMPLEMENTATIONGUIDE_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.IMPLEMENTATIONGUIDE_STR_VALUES ADD CONSTRAINT FK_IMPLEMENTATIONGUIDE_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.IMPLEMENTATIONGUIDE_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.IMPLEMENTATIONGUIDE_STR_VALUES_TENANT                      ON FHIRAPP.IMPLEMENTATIONGUIDE_STR_VALUES          FOR ROWS WHERE FHIRAPP.IMPLEMENTATIONGUIDE_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.IMPLEMENTATIONGUIDE_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.IMPLEMENTATIONGUIDE_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_IMPLEMENTATIONGUIDE_TOKEN_VALUES_PNCSCV ON FHIRAPP.IMPLEMENTATIONGUIDE_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_IMPLEMENTATIONGUIDE_TOKEN_VALUES_RPS ON FHIRAPP.IMPLEMENTATIONGUIDE_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

ALTER TABLE FHIRAPP.IMPLEMENTATIONGUIDE_TOKEN_VALUES ADD CONSTRAINT FK_IMPLEMENTATIONGUIDE_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.IMPLEMENTATIONGUIDE_TOKEN_VALUES ADD CONSTRAINT FK_IMPLEMENTATIONGUIDE_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.IMPLEMENTATIONGUIDE_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.IMPLEMENTATIONGUIDE_TOKEN_VALUES ADD CONSTRAINT FK_IMPLEMENTATIONGUIDE_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

CREATE PERMISSION FHIRAPP.IMPLEMENTATIONGUIDE_TOKEN_VALUES_TENANT                      ON FHIRAPP.IMPLEMENTATIONGUIDE_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.IMPLEMENTATIONGUIDE_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.IMPLEMENTATIONGUIDE_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.IMPLEMENTATIONGUIDE_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_IMPLEMENTATIONGUIDE_DATE_VALUES_PESR ON FHIRAPP.IMPLEMENTATIONGUIDE_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_IMPLEMENTATIONGUIDE_DATE_VALUES_RPV ON FHIRAPP.IMPLEMENTATIONGUIDE_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

CREATE INDEX FHIRAPP.IDX_IMPLEMENTATIONGUIDE_DATE_VALUES_RPSE ON FHIRAPP.IMPLEMENTATIONGUIDE_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

CREATE INDEX FHIRAPP.IDX_IMPLEMENTATIONGUIDE_DATE_VALUES_PSER ON FHIRAPP.IMPLEMENTATIONGUIDE_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_IMPLEMENTATIONGUIDE_DATE_VALUES_PVR ON FHIRAPP.IMPLEMENTATIONGUIDE_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.IMPLEMENTATIONGUIDE_DATE_VALUES ADD CONSTRAINT FK_IMPLEMENTATIONGUIDE_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.IMPLEMENTATIONGUIDE_DATE_VALUES ADD CONSTRAINT FK_IMPLEMENTATIONGUIDE_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.IMPLEMENTATIONGUIDE_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.IMPLEMENTATIONGUIDE_DATE_VALUES_TENANT                      ON FHIRAPP.IMPLEMENTATIONGUIDE_DATE_VALUES          FOR ROWS WHERE FHIRAPP.IMPLEMENTATIONGUIDE_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.IMPLEMENTATIONGUIDE_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.IMPLEMENTATIONGUIDE_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_IMPLEMENTATIONGUIDE_NUMBER_VALUES_RPS ON FHIRAPP.IMPLEMENTATIONGUIDE_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

CREATE INDEX FHIRAPP.IDX_IMPLEMENTATIONGUIDE_NUMBER_VALUES_PNNV ON FHIRAPP.IMPLEMENTATIONGUIDE_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.IMPLEMENTATIONGUIDE_NUMBER_VALUES ADD CONSTRAINT FK_IMPLEMENTATIONGUIDE_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.IMPLEMENTATIONGUIDE_NUMBER_VALUES ADD CONSTRAINT FK_IMPLEMENTATIONGUIDE_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.IMPLEMENTATIONGUIDE_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.IMPLEMENTATIONGUIDE_NUMBER_VALUES_TENANT                      ON FHIRAPP.IMPLEMENTATIONGUIDE_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.IMPLEMENTATIONGUIDE_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.IMPLEMENTATIONGUIDE_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.IMPLEMENTATIONGUIDE_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_IMPLEMENTATIONGUIDE_LATLNG_VALUES_PNNLV ON FHIRAPP.IMPLEMENTATIONGUIDE_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_IMPLEMENTATIONGUIDE_LATLNG_VALUES_RPLNG ON FHIRAPP.IMPLEMENTATIONGUIDE_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_IMPLEMENTATIONGUIDE_LATLNG_VALUES_RPLAT ON FHIRAPP.IMPLEMENTATIONGUIDE_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_IMPLEMENTATIONGUIDE_LATLNG_VALUES_PNNHV ON FHIRAPP.IMPLEMENTATIONGUIDE_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.IMPLEMENTATIONGUIDE_LATLNG_VALUES ADD CONSTRAINT FK_IMPLEMENTATIONGUIDE_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.IMPLEMENTATIONGUIDE_LATLNG_VALUES ADD CONSTRAINT FK_IMPLEMENTATIONGUIDE_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.IMPLEMENTATIONGUIDE_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.IMPLEMENTATIONGUIDE_LATLNG_VALUES_TENANT                      ON FHIRAPP.IMPLEMENTATIONGUIDE_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.IMPLEMENTATIONGUIDE_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.IMPLEMENTATIONGUIDE_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.IMPLEMENTATIONGUIDE_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_IMPLEMENTATIONGUIDE_QUANTITY_VALUES_RPCLHS ON FHIRAPP.IMPLEMENTATIONGUIDE_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_IMPLEMENTATIONGUIDE_QUANTITY_VALUES_PNNV ON FHIRAPP.IMPLEMENTATIONGUIDE_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_IMPLEMENTATIONGUIDE_QUANTITY_VALUES_PCHLSR ON FHIRAPP.IMPLEMENTATIONGUIDE_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_IMPLEMENTATIONGUIDE_QUANTITY_VALUES_PCLHSR ON FHIRAPP.IMPLEMENTATIONGUIDE_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_IMPLEMENTATIONGUIDE_QUANTITY_VALUES_RPCHLS ON FHIRAPP.IMPLEMENTATIONGUIDE_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_IMPLEMENTATIONGUIDE_QUANTITY_VALUES_RPS ON FHIRAPP.IMPLEMENTATIONGUIDE_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

ALTER TABLE FHIRAPP.IMPLEMENTATIONGUIDE_QUANTITY_VALUES ADD CONSTRAINT FK_IMPLEMENTATIONGUIDE_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.IMPLEMENTATIONGUIDE_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.IMPLEMENTATIONGUIDE_QUANTITY_VALUES ADD CONSTRAINT FK_IMPLEMENTATIONGUIDE_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.IMPLEMENTATIONGUIDE_QUANTITY_VALUES_TENANT                      ON FHIRAPP.IMPLEMENTATIONGUIDE_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.IMPLEMENTATIONGUIDE_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.IMPLEMENTATIONGUIDE_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.IMAGINGSTUDY_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT IMAGINGSTUDY_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.IMAGINGSTUDY_LOGICAL_RESOURCES ADD CONSTRAINT FK_IMAGINGSTUDY_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.IMAGINGSTUDY_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.IMAGINGSTUDY_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.IMAGINGSTUDY_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.IMAGINGSTUDY_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.IMAGINGSTUDY_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT IMAGINGSTUDY_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.IMAGINGSTUDY_RESOURCES_PRF_IN1 ON FHIRAPP.IMAGINGSTUDY_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.IMAGINGSTUDY_RESOURCES_TENANT                      ON FHIRAPP.IMAGINGSTUDY_RESOURCES          FOR ROWS WHERE FHIRAPP.IMAGINGSTUDY_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.IMAGINGSTUDY_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.IMAGINGSTUDY_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_IMAGINGSTUDY_STR_VALUES_RPS ON FHIRAPP.IMAGINGSTUDY_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

CREATE INDEX FHIRAPP.IDX_IMAGINGSTUDY_STR_VALUES_PLR ON FHIRAPP.IMAGINGSTUDY_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_IMAGINGSTUDY_STR_VALUES_PSR ON FHIRAPP.IMAGINGSTUDY_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_IMAGINGSTUDY_STR_VALUES_RPL ON FHIRAPP.IMAGINGSTUDY_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

ALTER TABLE FHIRAPP.IMAGINGSTUDY_STR_VALUES ADD CONSTRAINT FK_IMAGINGSTUDY_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.IMAGINGSTUDY_STR_VALUES ADD CONSTRAINT FK_IMAGINGSTUDY_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.IMAGINGSTUDY_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.IMAGINGSTUDY_STR_VALUES_TENANT                      ON FHIRAPP.IMAGINGSTUDY_STR_VALUES          FOR ROWS WHERE FHIRAPP.IMAGINGSTUDY_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.IMAGINGSTUDY_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.IMAGINGSTUDY_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_IMAGINGSTUDY_TOKEN_VALUES_RPS ON FHIRAPP.IMAGINGSTUDY_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

CREATE INDEX FHIRAPP.IDX_IMAGINGSTUDY_TOKEN_VALUES_PNCSCV ON FHIRAPP.IMAGINGSTUDY_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.IMAGINGSTUDY_TOKEN_VALUES ADD CONSTRAINT FK_IMAGINGSTUDY_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

ALTER TABLE FHIRAPP.IMAGINGSTUDY_TOKEN_VALUES ADD CONSTRAINT FK_IMAGINGSTUDY_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.IMAGINGSTUDY_TOKEN_VALUES ADD CONSTRAINT FK_IMAGINGSTUDY_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.IMAGINGSTUDY_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.IMAGINGSTUDY_TOKEN_VALUES_TENANT                      ON FHIRAPP.IMAGINGSTUDY_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.IMAGINGSTUDY_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.IMAGINGSTUDY_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.IMAGINGSTUDY_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_IMAGINGSTUDY_DATE_VALUES_PVR ON FHIRAPP.IMAGINGSTUDY_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_IMAGINGSTUDY_DATE_VALUES_PESR ON FHIRAPP.IMAGINGSTUDY_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_IMAGINGSTUDY_DATE_VALUES_RPV ON FHIRAPP.IMAGINGSTUDY_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

CREATE INDEX FHIRAPP.IDX_IMAGINGSTUDY_DATE_VALUES_PSER ON FHIRAPP.IMAGINGSTUDY_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_IMAGINGSTUDY_DATE_VALUES_RPSE ON FHIRAPP.IMAGINGSTUDY_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

ALTER TABLE FHIRAPP.IMAGINGSTUDY_DATE_VALUES ADD CONSTRAINT FK_IMAGINGSTUDY_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.IMAGINGSTUDY_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.IMAGINGSTUDY_DATE_VALUES ADD CONSTRAINT FK_IMAGINGSTUDY_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.IMAGINGSTUDY_DATE_VALUES_TENANT                      ON FHIRAPP.IMAGINGSTUDY_DATE_VALUES          FOR ROWS WHERE FHIRAPP.IMAGINGSTUDY_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.IMAGINGSTUDY_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.IMAGINGSTUDY_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_IMAGINGSTUDY_NUMBER_VALUES_PNNV ON FHIRAPP.IMAGINGSTUDY_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_IMAGINGSTUDY_NUMBER_VALUES_RPS ON FHIRAPP.IMAGINGSTUDY_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

ALTER TABLE FHIRAPP.IMAGINGSTUDY_NUMBER_VALUES ADD CONSTRAINT FK_IMAGINGSTUDY_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.IMAGINGSTUDY_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.IMAGINGSTUDY_NUMBER_VALUES ADD CONSTRAINT FK_IMAGINGSTUDY_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.IMAGINGSTUDY_NUMBER_VALUES_TENANT                      ON FHIRAPP.IMAGINGSTUDY_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.IMAGINGSTUDY_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.IMAGINGSTUDY_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.IMAGINGSTUDY_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_IMAGINGSTUDY_LATLNG_VALUES_PNNHV ON FHIRAPP.IMAGINGSTUDY_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_IMAGINGSTUDY_LATLNG_VALUES_PNNLV ON FHIRAPP.IMAGINGSTUDY_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_IMAGINGSTUDY_LATLNG_VALUES_RPLNG ON FHIRAPP.IMAGINGSTUDY_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_IMAGINGSTUDY_LATLNG_VALUES_RPLAT ON FHIRAPP.IMAGINGSTUDY_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

ALTER TABLE FHIRAPP.IMAGINGSTUDY_LATLNG_VALUES ADD CONSTRAINT FK_IMAGINGSTUDY_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.IMAGINGSTUDY_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.IMAGINGSTUDY_LATLNG_VALUES ADD CONSTRAINT FK_IMAGINGSTUDY_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.IMAGINGSTUDY_LATLNG_VALUES_TENANT                      ON FHIRAPP.IMAGINGSTUDY_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.IMAGINGSTUDY_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.IMAGINGSTUDY_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.IMAGINGSTUDY_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_IMAGINGSTUDY_QUANTITY_VALUES_RPCLHS ON FHIRAPP.IMAGINGSTUDY_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_IMAGINGSTUDY_QUANTITY_VALUES_PNNV ON FHIRAPP.IMAGINGSTUDY_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_IMAGINGSTUDY_QUANTITY_VALUES_PCLHSR ON FHIRAPP.IMAGINGSTUDY_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_IMAGINGSTUDY_QUANTITY_VALUES_PCHLSR ON FHIRAPP.IMAGINGSTUDY_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_IMAGINGSTUDY_QUANTITY_VALUES_RPCHLS ON FHIRAPP.IMAGINGSTUDY_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_IMAGINGSTUDY_QUANTITY_VALUES_RPS ON FHIRAPP.IMAGINGSTUDY_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

ALTER TABLE FHIRAPP.IMAGINGSTUDY_QUANTITY_VALUES ADD CONSTRAINT FK_IMAGINGSTUDY_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.IMAGINGSTUDY_QUANTITY_VALUES ADD CONSTRAINT FK_IMAGINGSTUDY_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.IMAGINGSTUDY_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.IMAGINGSTUDY_QUANTITY_VALUES_TENANT                      ON FHIRAPP.IMAGINGSTUDY_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.IMAGINGSTUDY_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.IMAGINGSTUDY_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.FAMILYMEMBERHISTORY_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT FAMILYMEMBERHISTORY_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.FAMILYMEMBERHISTORY_LOGICAL_RESOURCES ADD CONSTRAINT FK_FAMILYMEMBERHISTORY_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.FAMILYMEMBERHISTORY_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.FAMILYMEMBERHISTORY_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.FAMILYMEMBERHISTORY_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.FAMILYMEMBERHISTORY_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.FAMILYMEMBERHISTORY_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT FAMILYMEMBERHISTORY_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.FAMILYMEMBERHISTORY_RESOURCES_PRF_IN1 ON FHIRAPP.FAMILYMEMBERHISTORY_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.FAMILYMEMBERHISTORY_RESOURCES_TENANT                      ON FHIRAPP.FAMILYMEMBERHISTORY_RESOURCES          FOR ROWS WHERE FHIRAPP.FAMILYMEMBERHISTORY_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.FAMILYMEMBERHISTORY_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.FAMILYMEMBERHISTORY_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_FAMILYMEMBERHISTORY_STR_VALUES_RPS ON FHIRAPP.FAMILYMEMBERHISTORY_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

CREATE INDEX FHIRAPP.IDX_FAMILYMEMBERHISTORY_STR_VALUES_PLR ON FHIRAPP.FAMILYMEMBERHISTORY_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_FAMILYMEMBERHISTORY_STR_VALUES_PSR ON FHIRAPP.FAMILYMEMBERHISTORY_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_FAMILYMEMBERHISTORY_STR_VALUES_RPL ON FHIRAPP.FAMILYMEMBERHISTORY_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

ALTER TABLE FHIRAPP.FAMILYMEMBERHISTORY_STR_VALUES ADD CONSTRAINT FK_FAMILYMEMBERHISTORY_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.FAMILYMEMBERHISTORY_STR_VALUES ADD CONSTRAINT FK_FAMILYMEMBERHISTORY_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.FAMILYMEMBERHISTORY_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.FAMILYMEMBERHISTORY_STR_VALUES_TENANT                      ON FHIRAPP.FAMILYMEMBERHISTORY_STR_VALUES          FOR ROWS WHERE FHIRAPP.FAMILYMEMBERHISTORY_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.FAMILYMEMBERHISTORY_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.FAMILYMEMBERHISTORY_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_FAMILYMEMBERHISTORY_TOKEN_VALUES_RPS ON FHIRAPP.FAMILYMEMBERHISTORY_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

CREATE INDEX FHIRAPP.IDX_FAMILYMEMBERHISTORY_TOKEN_VALUES_PNCSCV ON FHIRAPP.FAMILYMEMBERHISTORY_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.FAMILYMEMBERHISTORY_TOKEN_VALUES ADD CONSTRAINT FK_FAMILYMEMBERHISTORY_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

ALTER TABLE FHIRAPP.FAMILYMEMBERHISTORY_TOKEN_VALUES ADD CONSTRAINT FK_FAMILYMEMBERHISTORY_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.FAMILYMEMBERHISTORY_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.FAMILYMEMBERHISTORY_TOKEN_VALUES ADD CONSTRAINT FK_FAMILYMEMBERHISTORY_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.FAMILYMEMBERHISTORY_TOKEN_VALUES_TENANT                      ON FHIRAPP.FAMILYMEMBERHISTORY_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.FAMILYMEMBERHISTORY_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.FAMILYMEMBERHISTORY_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.FAMILYMEMBERHISTORY_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_FAMILYMEMBERHISTORY_DATE_VALUES_RPSE ON FHIRAPP.FAMILYMEMBERHISTORY_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

CREATE INDEX FHIRAPP.IDX_FAMILYMEMBERHISTORY_DATE_VALUES_PSER ON FHIRAPP.FAMILYMEMBERHISTORY_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_FAMILYMEMBERHISTORY_DATE_VALUES_RPV ON FHIRAPP.FAMILYMEMBERHISTORY_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

CREATE INDEX FHIRAPP.IDX_FAMILYMEMBERHISTORY_DATE_VALUES_PVR ON FHIRAPP.FAMILYMEMBERHISTORY_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_FAMILYMEMBERHISTORY_DATE_VALUES_PESR ON FHIRAPP.FAMILYMEMBERHISTORY_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.FAMILYMEMBERHISTORY_DATE_VALUES ADD CONSTRAINT FK_FAMILYMEMBERHISTORY_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.FAMILYMEMBERHISTORY_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.FAMILYMEMBERHISTORY_DATE_VALUES ADD CONSTRAINT FK_FAMILYMEMBERHISTORY_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.FAMILYMEMBERHISTORY_DATE_VALUES_TENANT                      ON FHIRAPP.FAMILYMEMBERHISTORY_DATE_VALUES          FOR ROWS WHERE FHIRAPP.FAMILYMEMBERHISTORY_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.FAMILYMEMBERHISTORY_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.FAMILYMEMBERHISTORY_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_FAMILYMEMBERHISTORY_NUMBER_VALUES_PNNV ON FHIRAPP.FAMILYMEMBERHISTORY_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_FAMILYMEMBERHISTORY_NUMBER_VALUES_RPS ON FHIRAPP.FAMILYMEMBERHISTORY_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

ALTER TABLE FHIRAPP.FAMILYMEMBERHISTORY_NUMBER_VALUES ADD CONSTRAINT FK_FAMILYMEMBERHISTORY_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.FAMILYMEMBERHISTORY_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.FAMILYMEMBERHISTORY_NUMBER_VALUES ADD CONSTRAINT FK_FAMILYMEMBERHISTORY_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.FAMILYMEMBERHISTORY_NUMBER_VALUES_TENANT                      ON FHIRAPP.FAMILYMEMBERHISTORY_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.FAMILYMEMBERHISTORY_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.FAMILYMEMBERHISTORY_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.FAMILYMEMBERHISTORY_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_FAMILYMEMBERHISTORY_LATLNG_VALUES_PNNHV ON FHIRAPP.FAMILYMEMBERHISTORY_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_FAMILYMEMBERHISTORY_LATLNG_VALUES_PNNLV ON FHIRAPP.FAMILYMEMBERHISTORY_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_FAMILYMEMBERHISTORY_LATLNG_VALUES_RPLNG ON FHIRAPP.FAMILYMEMBERHISTORY_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_FAMILYMEMBERHISTORY_LATLNG_VALUES_RPLAT ON FHIRAPP.FAMILYMEMBERHISTORY_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

ALTER TABLE FHIRAPP.FAMILYMEMBERHISTORY_LATLNG_VALUES ADD CONSTRAINT FK_FAMILYMEMBERHISTORY_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.FAMILYMEMBERHISTORY_LATLNG_VALUES ADD CONSTRAINT FK_FAMILYMEMBERHISTORY_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.FAMILYMEMBERHISTORY_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.FAMILYMEMBERHISTORY_LATLNG_VALUES_TENANT                      ON FHIRAPP.FAMILYMEMBERHISTORY_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.FAMILYMEMBERHISTORY_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.FAMILYMEMBERHISTORY_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.FAMILYMEMBERHISTORY_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_FAMILYMEMBERHISTORY_QUANTITY_VALUES_PNNV ON FHIRAPP.FAMILYMEMBERHISTORY_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_FAMILYMEMBERHISTORY_QUANTITY_VALUES_RPS ON FHIRAPP.FAMILYMEMBERHISTORY_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_FAMILYMEMBERHISTORY_QUANTITY_VALUES_PCLHSR ON FHIRAPP.FAMILYMEMBERHISTORY_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_FAMILYMEMBERHISTORY_QUANTITY_VALUES_RPCLHS ON FHIRAPP.FAMILYMEMBERHISTORY_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_FAMILYMEMBERHISTORY_QUANTITY_VALUES_PCHLSR ON FHIRAPP.FAMILYMEMBERHISTORY_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_FAMILYMEMBERHISTORY_QUANTITY_VALUES_RPCHLS ON FHIRAPP.FAMILYMEMBERHISTORY_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

ALTER TABLE FHIRAPP.FAMILYMEMBERHISTORY_QUANTITY_VALUES ADD CONSTRAINT FK_FAMILYMEMBERHISTORY_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.FAMILYMEMBERHISTORY_QUANTITY_VALUES ADD CONSTRAINT FK_FAMILYMEMBERHISTORY_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.FAMILYMEMBERHISTORY_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.FAMILYMEMBERHISTORY_QUANTITY_VALUES_TENANT                      ON FHIRAPP.FAMILYMEMBERHISTORY_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.FAMILYMEMBERHISTORY_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.FAMILYMEMBERHISTORY_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.CHARGEITEM_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT CHARGEITEM_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.CHARGEITEM_LOGICAL_RESOURCES ADD CONSTRAINT FK_CHARGEITEM_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.CHARGEITEM_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.CHARGEITEM_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.CHARGEITEM_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.CHARGEITEM_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.CHARGEITEM_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT CHARGEITEM_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.CHARGEITEM_RESOURCES_PRF_IN1 ON FHIRAPP.CHARGEITEM_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.CHARGEITEM_RESOURCES_TENANT                      ON FHIRAPP.CHARGEITEM_RESOURCES          FOR ROWS WHERE FHIRAPP.CHARGEITEM_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.CHARGEITEM_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.CHARGEITEM_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_CHARGEITEM_STR_VALUES_PSR ON FHIRAPP.CHARGEITEM_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_CHARGEITEM_STR_VALUES_RPL ON FHIRAPP.CHARGEITEM_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

CREATE INDEX FHIRAPP.IDX_CHARGEITEM_STR_VALUES_PLR ON FHIRAPP.CHARGEITEM_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_CHARGEITEM_STR_VALUES_RPS ON FHIRAPP.CHARGEITEM_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

ALTER TABLE FHIRAPP.CHARGEITEM_STR_VALUES ADD CONSTRAINT FK_CHARGEITEM_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.CHARGEITEM_STR_VALUES ADD CONSTRAINT FK_CHARGEITEM_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.CHARGEITEM_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.CHARGEITEM_STR_VALUES_TENANT                      ON FHIRAPP.CHARGEITEM_STR_VALUES          FOR ROWS WHERE FHIRAPP.CHARGEITEM_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.CHARGEITEM_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.CHARGEITEM_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_CHARGEITEM_TOKEN_VALUES_RPS ON FHIRAPP.CHARGEITEM_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

CREATE INDEX FHIRAPP.IDX_CHARGEITEM_TOKEN_VALUES_PNCSCV ON FHIRAPP.CHARGEITEM_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.CHARGEITEM_TOKEN_VALUES ADD CONSTRAINT FK_CHARGEITEM_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

ALTER TABLE FHIRAPP.CHARGEITEM_TOKEN_VALUES ADD CONSTRAINT FK_CHARGEITEM_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.CHARGEITEM_TOKEN_VALUES ADD CONSTRAINT FK_CHARGEITEM_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.CHARGEITEM_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.CHARGEITEM_TOKEN_VALUES_TENANT                      ON FHIRAPP.CHARGEITEM_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.CHARGEITEM_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.CHARGEITEM_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.CHARGEITEM_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_CHARGEITEM_DATE_VALUES_PVR ON FHIRAPP.CHARGEITEM_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_CHARGEITEM_DATE_VALUES_PESR ON FHIRAPP.CHARGEITEM_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_CHARGEITEM_DATE_VALUES_PSER ON FHIRAPP.CHARGEITEM_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_CHARGEITEM_DATE_VALUES_RPSE ON FHIRAPP.CHARGEITEM_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

CREATE INDEX FHIRAPP.IDX_CHARGEITEM_DATE_VALUES_RPV ON FHIRAPP.CHARGEITEM_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

ALTER TABLE FHIRAPP.CHARGEITEM_DATE_VALUES ADD CONSTRAINT FK_CHARGEITEM_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.CHARGEITEM_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.CHARGEITEM_DATE_VALUES ADD CONSTRAINT FK_CHARGEITEM_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.CHARGEITEM_DATE_VALUES_TENANT                      ON FHIRAPP.CHARGEITEM_DATE_VALUES          FOR ROWS WHERE FHIRAPP.CHARGEITEM_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.CHARGEITEM_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.CHARGEITEM_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_CHARGEITEM_NUMBER_VALUES_RPS ON FHIRAPP.CHARGEITEM_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

CREATE INDEX FHIRAPP.IDX_CHARGEITEM_NUMBER_VALUES_PNNV ON FHIRAPP.CHARGEITEM_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.CHARGEITEM_NUMBER_VALUES ADD CONSTRAINT FK_CHARGEITEM_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.CHARGEITEM_NUMBER_VALUES ADD CONSTRAINT FK_CHARGEITEM_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.CHARGEITEM_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.CHARGEITEM_NUMBER_VALUES_TENANT                      ON FHIRAPP.CHARGEITEM_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.CHARGEITEM_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.CHARGEITEM_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.CHARGEITEM_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_CHARGEITEM_LATLNG_VALUES_PNNLV ON FHIRAPP.CHARGEITEM_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_CHARGEITEM_LATLNG_VALUES_RPLNG ON FHIRAPP.CHARGEITEM_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_CHARGEITEM_LATLNG_VALUES_PNNHV ON FHIRAPP.CHARGEITEM_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_CHARGEITEM_LATLNG_VALUES_RPLAT ON FHIRAPP.CHARGEITEM_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

ALTER TABLE FHIRAPP.CHARGEITEM_LATLNG_VALUES ADD CONSTRAINT FK_CHARGEITEM_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.CHARGEITEM_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.CHARGEITEM_LATLNG_VALUES ADD CONSTRAINT FK_CHARGEITEM_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.CHARGEITEM_LATLNG_VALUES_TENANT                      ON FHIRAPP.CHARGEITEM_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.CHARGEITEM_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.CHARGEITEM_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.CHARGEITEM_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_CHARGEITEM_QUANTITY_VALUES_RPS ON FHIRAPP.CHARGEITEM_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_CHARGEITEM_QUANTITY_VALUES_PCHLSR ON FHIRAPP.CHARGEITEM_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_CHARGEITEM_QUANTITY_VALUES_RPCHLS ON FHIRAPP.CHARGEITEM_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_CHARGEITEM_QUANTITY_VALUES_PNNV ON FHIRAPP.CHARGEITEM_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_CHARGEITEM_QUANTITY_VALUES_RPCLHS ON FHIRAPP.CHARGEITEM_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_CHARGEITEM_QUANTITY_VALUES_PCLHSR ON FHIRAPP.CHARGEITEM_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.CHARGEITEM_QUANTITY_VALUES ADD CONSTRAINT FK_CHARGEITEM_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.CHARGEITEM_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.CHARGEITEM_QUANTITY_VALUES ADD CONSTRAINT FK_CHARGEITEM_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.CHARGEITEM_QUANTITY_VALUES_TENANT                      ON FHIRAPP.CHARGEITEM_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.CHARGEITEM_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.CHARGEITEM_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.RESEARCHELEMENTDEFINITION_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT RESEARCHELEMENTDEFINITION_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.RESEARCHELEMENTDEFINITION_LOGICAL_RESOURCES ADD CONSTRAINT FK_RESEARCHELEMENTDEFINITION_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.RESEARCHELEMENTDEFINITION_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.RESEARCHELEMENTDEFINITION_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.RESEARCHELEMENTDEFINITION_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.RESEARCHELEMENTDEFINITION_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.RESEARCHELEMENTDEFINITION_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT RESEARCHELEMENTDEFINITION_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.RESEARCHELEMENTDEFINITION_RESOURCES_PRF_IN1 ON FHIRAPP.RESEARCHELEMENTDEFINITION_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.RESEARCHELEMENTDEFINITION_RESOURCES_TENANT                      ON FHIRAPP.RESEARCHELEMENTDEFINITION_RESOURCES          FOR ROWS WHERE FHIRAPP.RESEARCHELEMENTDEFINITION_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.RESEARCHELEMENTDEFINITION_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.RESEARCHELEMENTDEFINITION_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_RESEARCHELEMENTDEFINITION_STR_VALUES_RPS ON FHIRAPP.RESEARCHELEMENTDEFINITION_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

CREATE INDEX FHIRAPP.IDX_RESEARCHELEMENTDEFINITION_STR_VALUES_PLR ON FHIRAPP.RESEARCHELEMENTDEFINITION_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_RESEARCHELEMENTDEFINITION_STR_VALUES_PSR ON FHIRAPP.RESEARCHELEMENTDEFINITION_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_RESEARCHELEMENTDEFINITION_STR_VALUES_RPL ON FHIRAPP.RESEARCHELEMENTDEFINITION_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

ALTER TABLE FHIRAPP.RESEARCHELEMENTDEFINITION_STR_VALUES ADD CONSTRAINT FK_RESEARCHELEMENTDEFINITION_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.RESEARCHELEMENTDEFINITION_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.RESEARCHELEMENTDEFINITION_STR_VALUES ADD CONSTRAINT FK_RESEARCHELEMENTDEFINITION_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.RESEARCHELEMENTDEFINITION_STR_VALUES_TENANT                      ON FHIRAPP.RESEARCHELEMENTDEFINITION_STR_VALUES          FOR ROWS WHERE FHIRAPP.RESEARCHELEMENTDEFINITION_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.RESEARCHELEMENTDEFINITION_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.RESEARCHELEMENTDEFINITION_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_RESEARCHELEMENTDEFINITION_TOKEN_VALUES_PNCSCV ON FHIRAPP.RESEARCHELEMENTDEFINITION_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_RESEARCHELEMENTDEFINITION_TOKEN_VALUES_RPS ON FHIRAPP.RESEARCHELEMENTDEFINITION_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

ALTER TABLE FHIRAPP.RESEARCHELEMENTDEFINITION_TOKEN_VALUES ADD CONSTRAINT FK_RESEARCHELEMENTDEFINITION_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.RESEARCHELEMENTDEFINITION_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.RESEARCHELEMENTDEFINITION_TOKEN_VALUES ADD CONSTRAINT FK_RESEARCHELEMENTDEFINITION_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.RESEARCHELEMENTDEFINITION_TOKEN_VALUES ADD CONSTRAINT FK_RESEARCHELEMENTDEFINITION_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

CREATE PERMISSION FHIRAPP.RESEARCHELEMENTDEFINITION_TOKEN_VALUES_TENANT                      ON FHIRAPP.RESEARCHELEMENTDEFINITION_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.RESEARCHELEMENTDEFINITION_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.RESEARCHELEMENTDEFINITION_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.RESEARCHELEMENTDEFINITION_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_RESEARCHELEMENTDEFINITION_DATE_VALUES_PVR ON FHIRAPP.RESEARCHELEMENTDEFINITION_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_RESEARCHELEMENTDEFINITION_DATE_VALUES_PESR ON FHIRAPP.RESEARCHELEMENTDEFINITION_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_RESEARCHELEMENTDEFINITION_DATE_VALUES_RPSE ON FHIRAPP.RESEARCHELEMENTDEFINITION_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

CREATE INDEX FHIRAPP.IDX_RESEARCHELEMENTDEFINITION_DATE_VALUES_PSER ON FHIRAPP.RESEARCHELEMENTDEFINITION_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_RESEARCHELEMENTDEFINITION_DATE_VALUES_RPV ON FHIRAPP.RESEARCHELEMENTDEFINITION_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

ALTER TABLE FHIRAPP.RESEARCHELEMENTDEFINITION_DATE_VALUES ADD CONSTRAINT FK_RESEARCHELEMENTDEFINITION_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.RESEARCHELEMENTDEFINITION_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.RESEARCHELEMENTDEFINITION_DATE_VALUES ADD CONSTRAINT FK_RESEARCHELEMENTDEFINITION_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.RESEARCHELEMENTDEFINITION_DATE_VALUES_TENANT                      ON FHIRAPP.RESEARCHELEMENTDEFINITION_DATE_VALUES          FOR ROWS WHERE FHIRAPP.RESEARCHELEMENTDEFINITION_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.RESEARCHELEMENTDEFINITION_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.RESEARCHELEMENTDEFINITION_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_RESEARCHELEMENTDEFINITION_NUMBER_VALUES_RPS ON FHIRAPP.RESEARCHELEMENTDEFINITION_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

CREATE INDEX FHIRAPP.IDX_RESEARCHELEMENTDEFINITION_NUMBER_VALUES_PNNV ON FHIRAPP.RESEARCHELEMENTDEFINITION_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.RESEARCHELEMENTDEFINITION_NUMBER_VALUES ADD CONSTRAINT FK_RESEARCHELEMENTDEFINITION_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.RESEARCHELEMENTDEFINITION_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.RESEARCHELEMENTDEFINITION_NUMBER_VALUES ADD CONSTRAINT FK_RESEARCHELEMENTDEFINITION_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.RESEARCHELEMENTDEFINITION_NUMBER_VALUES_TENANT                      ON FHIRAPP.RESEARCHELEMENTDEFINITION_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.RESEARCHELEMENTDEFINITION_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.RESEARCHELEMENTDEFINITION_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.RESEARCHELEMENTDEFINITION_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_RESEARCHELEMENTDEFINITION_LATLNG_VALUES_PNNHV ON FHIRAPP.RESEARCHELEMENTDEFINITION_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_RESEARCHELEMENTDEFINITION_LATLNG_VALUES_PNNLV ON FHIRAPP.RESEARCHELEMENTDEFINITION_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_RESEARCHELEMENTDEFINITION_LATLNG_VALUES_RPLAT ON FHIRAPP.RESEARCHELEMENTDEFINITION_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_RESEARCHELEMENTDEFINITION_LATLNG_VALUES_RPLNG ON FHIRAPP.RESEARCHELEMENTDEFINITION_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

ALTER TABLE FHIRAPP.RESEARCHELEMENTDEFINITION_LATLNG_VALUES ADD CONSTRAINT FK_RESEARCHELEMENTDEFINITION_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.RESEARCHELEMENTDEFINITION_LATLNG_VALUES ADD CONSTRAINT FK_RESEARCHELEMENTDEFINITION_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.RESEARCHELEMENTDEFINITION_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.RESEARCHELEMENTDEFINITION_LATLNG_VALUES_TENANT                      ON FHIRAPP.RESEARCHELEMENTDEFINITION_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.RESEARCHELEMENTDEFINITION_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.RESEARCHELEMENTDEFINITION_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.RESEARCHELEMENTDEFINITION_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_RESEARCHELEMENTDEFINITION_QUANTITY_VALUES_RPCHLS ON FHIRAPP.RESEARCHELEMENTDEFINITION_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_RESEARCHELEMENTDEFINITION_QUANTITY_VALUES_RPS ON FHIRAPP.RESEARCHELEMENTDEFINITION_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_RESEARCHELEMENTDEFINITION_QUANTITY_VALUES_PNNV ON FHIRAPP.RESEARCHELEMENTDEFINITION_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_RESEARCHELEMENTDEFINITION_QUANTITY_VALUES_PCLHSR ON FHIRAPP.RESEARCHELEMENTDEFINITION_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_RESEARCHELEMENTDEFINITION_QUANTITY_VALUES_RPCLHS ON FHIRAPP.RESEARCHELEMENTDEFINITION_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_RESEARCHELEMENTDEFINITION_QUANTITY_VALUES_PCHLSR ON FHIRAPP.RESEARCHELEMENTDEFINITION_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.RESEARCHELEMENTDEFINITION_QUANTITY_VALUES ADD CONSTRAINT FK_RESEARCHELEMENTDEFINITION_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.RESEARCHELEMENTDEFINITION_QUANTITY_VALUES ADD CONSTRAINT FK_RESEARCHELEMENTDEFINITION_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.RESEARCHELEMENTDEFINITION_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.RESEARCHELEMENTDEFINITION_QUANTITY_VALUES_TENANT                      ON FHIRAPP.RESEARCHELEMENTDEFINITION_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.RESEARCHELEMENTDEFINITION_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.RESEARCHELEMENTDEFINITION_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.OBSERVATIONDEFINITION_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT OBSERVATIONDEFINITION_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.OBSERVATIONDEFINITION_LOGICAL_RESOURCES ADD CONSTRAINT FK_OBSERVATIONDEFINITION_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.OBSERVATIONDEFINITION_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.OBSERVATIONDEFINITION_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.OBSERVATIONDEFINITION_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.OBSERVATIONDEFINITION_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.OBSERVATIONDEFINITION_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT OBSERVATIONDEFINITION_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.OBSERVATIONDEFINITION_RESOURCES_PRF_IN1 ON FHIRAPP.OBSERVATIONDEFINITION_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.OBSERVATIONDEFINITION_RESOURCES_TENANT                      ON FHIRAPP.OBSERVATIONDEFINITION_RESOURCES          FOR ROWS WHERE FHIRAPP.OBSERVATIONDEFINITION_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.OBSERVATIONDEFINITION_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.OBSERVATIONDEFINITION_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_OBSERVATIONDEFINITION_STR_VALUES_PLR ON FHIRAPP.OBSERVATIONDEFINITION_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_OBSERVATIONDEFINITION_STR_VALUES_RPS ON FHIRAPP.OBSERVATIONDEFINITION_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

CREATE INDEX FHIRAPP.IDX_OBSERVATIONDEFINITION_STR_VALUES_RPL ON FHIRAPP.OBSERVATIONDEFINITION_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

CREATE INDEX FHIRAPP.IDX_OBSERVATIONDEFINITION_STR_VALUES_PSR ON FHIRAPP.OBSERVATIONDEFINITION_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.OBSERVATIONDEFINITION_STR_VALUES ADD CONSTRAINT FK_OBSERVATIONDEFINITION_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.OBSERVATIONDEFINITION_STR_VALUES ADD CONSTRAINT FK_OBSERVATIONDEFINITION_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.OBSERVATIONDEFINITION_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.OBSERVATIONDEFINITION_STR_VALUES_TENANT                      ON FHIRAPP.OBSERVATIONDEFINITION_STR_VALUES          FOR ROWS WHERE FHIRAPP.OBSERVATIONDEFINITION_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.OBSERVATIONDEFINITION_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.OBSERVATIONDEFINITION_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_OBSERVATIONDEFINITION_TOKEN_VALUES_RPS ON FHIRAPP.OBSERVATIONDEFINITION_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

CREATE INDEX FHIRAPP.IDX_OBSERVATIONDEFINITION_TOKEN_VALUES_PNCSCV ON FHIRAPP.OBSERVATIONDEFINITION_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.OBSERVATIONDEFINITION_TOKEN_VALUES ADD CONSTRAINT FK_OBSERVATIONDEFINITION_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.OBSERVATIONDEFINITION_TOKEN_VALUES ADD CONSTRAINT FK_OBSERVATIONDEFINITION_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

ALTER TABLE FHIRAPP.OBSERVATIONDEFINITION_TOKEN_VALUES ADD CONSTRAINT FK_OBSERVATIONDEFINITION_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.OBSERVATIONDEFINITION_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.OBSERVATIONDEFINITION_TOKEN_VALUES_TENANT                      ON FHIRAPP.OBSERVATIONDEFINITION_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.OBSERVATIONDEFINITION_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.OBSERVATIONDEFINITION_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.OBSERVATIONDEFINITION_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_OBSERVATIONDEFINITION_DATE_VALUES_RPV ON FHIRAPP.OBSERVATIONDEFINITION_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

CREATE INDEX FHIRAPP.IDX_OBSERVATIONDEFINITION_DATE_VALUES_PSER ON FHIRAPP.OBSERVATIONDEFINITION_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_OBSERVATIONDEFINITION_DATE_VALUES_PVR ON FHIRAPP.OBSERVATIONDEFINITION_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_OBSERVATIONDEFINITION_DATE_VALUES_RPSE ON FHIRAPP.OBSERVATIONDEFINITION_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

CREATE INDEX FHIRAPP.IDX_OBSERVATIONDEFINITION_DATE_VALUES_PESR ON FHIRAPP.OBSERVATIONDEFINITION_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.OBSERVATIONDEFINITION_DATE_VALUES ADD CONSTRAINT FK_OBSERVATIONDEFINITION_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.OBSERVATIONDEFINITION_DATE_VALUES ADD CONSTRAINT FK_OBSERVATIONDEFINITION_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.OBSERVATIONDEFINITION_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.OBSERVATIONDEFINITION_DATE_VALUES_TENANT                      ON FHIRAPP.OBSERVATIONDEFINITION_DATE_VALUES          FOR ROWS WHERE FHIRAPP.OBSERVATIONDEFINITION_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.OBSERVATIONDEFINITION_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.OBSERVATIONDEFINITION_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_OBSERVATIONDEFINITION_NUMBER_VALUES_PNNV ON FHIRAPP.OBSERVATIONDEFINITION_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_OBSERVATIONDEFINITION_NUMBER_VALUES_RPS ON FHIRAPP.OBSERVATIONDEFINITION_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

ALTER TABLE FHIRAPP.OBSERVATIONDEFINITION_NUMBER_VALUES ADD CONSTRAINT FK_OBSERVATIONDEFINITION_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.OBSERVATIONDEFINITION_NUMBER_VALUES ADD CONSTRAINT FK_OBSERVATIONDEFINITION_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.OBSERVATIONDEFINITION_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.OBSERVATIONDEFINITION_NUMBER_VALUES_TENANT                      ON FHIRAPP.OBSERVATIONDEFINITION_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.OBSERVATIONDEFINITION_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.OBSERVATIONDEFINITION_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.OBSERVATIONDEFINITION_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_OBSERVATIONDEFINITION_LATLNG_VALUES_RPLAT ON FHIRAPP.OBSERVATIONDEFINITION_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_OBSERVATIONDEFINITION_LATLNG_VALUES_PNNHV ON FHIRAPP.OBSERVATIONDEFINITION_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_OBSERVATIONDEFINITION_LATLNG_VALUES_PNNLV ON FHIRAPP.OBSERVATIONDEFINITION_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_OBSERVATIONDEFINITION_LATLNG_VALUES_RPLNG ON FHIRAPP.OBSERVATIONDEFINITION_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

ALTER TABLE FHIRAPP.OBSERVATIONDEFINITION_LATLNG_VALUES ADD CONSTRAINT FK_OBSERVATIONDEFINITION_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.OBSERVATIONDEFINITION_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.OBSERVATIONDEFINITION_LATLNG_VALUES ADD CONSTRAINT FK_OBSERVATIONDEFINITION_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.OBSERVATIONDEFINITION_LATLNG_VALUES_TENANT                      ON FHIRAPP.OBSERVATIONDEFINITION_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.OBSERVATIONDEFINITION_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.OBSERVATIONDEFINITION_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.OBSERVATIONDEFINITION_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_OBSERVATIONDEFINITION_QUANTITY_VALUES_PCHLSR ON FHIRAPP.OBSERVATIONDEFINITION_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_OBSERVATIONDEFINITION_QUANTITY_VALUES_RPS ON FHIRAPP.OBSERVATIONDEFINITION_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_OBSERVATIONDEFINITION_QUANTITY_VALUES_RPCHLS ON FHIRAPP.OBSERVATIONDEFINITION_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_OBSERVATIONDEFINITION_QUANTITY_VALUES_PNNV ON FHIRAPP.OBSERVATIONDEFINITION_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_OBSERVATIONDEFINITION_QUANTITY_VALUES_PCLHSR ON FHIRAPP.OBSERVATIONDEFINITION_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_OBSERVATIONDEFINITION_QUANTITY_VALUES_RPCLHS ON FHIRAPP.OBSERVATIONDEFINITION_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

ALTER TABLE FHIRAPP.OBSERVATIONDEFINITION_QUANTITY_VALUES ADD CONSTRAINT FK_OBSERVATIONDEFINITION_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.OBSERVATIONDEFINITION_QUANTITY_VALUES ADD CONSTRAINT FK_OBSERVATIONDEFINITION_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.OBSERVATIONDEFINITION_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.OBSERVATIONDEFINITION_QUANTITY_VALUES_TENANT                      ON FHIRAPP.OBSERVATIONDEFINITION_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.OBSERVATIONDEFINITION_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.OBSERVATIONDEFINITION_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.ENCOUNTER_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT ENCOUNTER_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.ENCOUNTER_LOGICAL_RESOURCES ADD CONSTRAINT FK_ENCOUNTER_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.ENCOUNTER_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.ENCOUNTER_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.ENCOUNTER_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.ENCOUNTER_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.ENCOUNTER_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT ENCOUNTER_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.ENCOUNTER_RESOURCES_PRF_IN1 ON FHIRAPP.ENCOUNTER_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.ENCOUNTER_RESOURCES_TENANT                      ON FHIRAPP.ENCOUNTER_RESOURCES          FOR ROWS WHERE FHIRAPP.ENCOUNTER_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.ENCOUNTER_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.ENCOUNTER_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_ENCOUNTER_STR_VALUES_RPS ON FHIRAPP.ENCOUNTER_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

CREATE INDEX FHIRAPP.IDX_ENCOUNTER_STR_VALUES_PLR ON FHIRAPP.ENCOUNTER_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_ENCOUNTER_STR_VALUES_PSR ON FHIRAPP.ENCOUNTER_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_ENCOUNTER_STR_VALUES_RPL ON FHIRAPP.ENCOUNTER_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

ALTER TABLE FHIRAPP.ENCOUNTER_STR_VALUES ADD CONSTRAINT FK_ENCOUNTER_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.ENCOUNTER_STR_VALUES ADD CONSTRAINT FK_ENCOUNTER_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.ENCOUNTER_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.ENCOUNTER_STR_VALUES_TENANT                      ON FHIRAPP.ENCOUNTER_STR_VALUES          FOR ROWS WHERE FHIRAPP.ENCOUNTER_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.ENCOUNTER_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.ENCOUNTER_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_ENCOUNTER_TOKEN_VALUES_PNCSCV ON FHIRAPP.ENCOUNTER_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_ENCOUNTER_TOKEN_VALUES_RPS ON FHIRAPP.ENCOUNTER_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

ALTER TABLE FHIRAPP.ENCOUNTER_TOKEN_VALUES ADD CONSTRAINT FK_ENCOUNTER_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.ENCOUNTER_TOKEN_VALUES ADD CONSTRAINT FK_ENCOUNTER_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.ENCOUNTER_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.ENCOUNTER_TOKEN_VALUES ADD CONSTRAINT FK_ENCOUNTER_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

CREATE PERMISSION FHIRAPP.ENCOUNTER_TOKEN_VALUES_TENANT                      ON FHIRAPP.ENCOUNTER_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.ENCOUNTER_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.ENCOUNTER_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.ENCOUNTER_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_ENCOUNTER_DATE_VALUES_PSER ON FHIRAPP.ENCOUNTER_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_ENCOUNTER_DATE_VALUES_RPSE ON FHIRAPP.ENCOUNTER_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

CREATE INDEX FHIRAPP.IDX_ENCOUNTER_DATE_VALUES_PESR ON FHIRAPP.ENCOUNTER_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_ENCOUNTER_DATE_VALUES_PVR ON FHIRAPP.ENCOUNTER_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_ENCOUNTER_DATE_VALUES_RPV ON FHIRAPP.ENCOUNTER_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

ALTER TABLE FHIRAPP.ENCOUNTER_DATE_VALUES ADD CONSTRAINT FK_ENCOUNTER_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.ENCOUNTER_DATE_VALUES ADD CONSTRAINT FK_ENCOUNTER_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.ENCOUNTER_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.ENCOUNTER_DATE_VALUES_TENANT                      ON FHIRAPP.ENCOUNTER_DATE_VALUES          FOR ROWS WHERE FHIRAPP.ENCOUNTER_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.ENCOUNTER_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.ENCOUNTER_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_ENCOUNTER_NUMBER_VALUES_PNNV ON FHIRAPP.ENCOUNTER_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_ENCOUNTER_NUMBER_VALUES_RPS ON FHIRAPP.ENCOUNTER_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

ALTER TABLE FHIRAPP.ENCOUNTER_NUMBER_VALUES ADD CONSTRAINT FK_ENCOUNTER_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.ENCOUNTER_NUMBER_VALUES ADD CONSTRAINT FK_ENCOUNTER_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.ENCOUNTER_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.ENCOUNTER_NUMBER_VALUES_TENANT                      ON FHIRAPP.ENCOUNTER_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.ENCOUNTER_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.ENCOUNTER_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.ENCOUNTER_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_ENCOUNTER_LATLNG_VALUES_PNNLV ON FHIRAPP.ENCOUNTER_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_ENCOUNTER_LATLNG_VALUES_PNNHV ON FHIRAPP.ENCOUNTER_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_ENCOUNTER_LATLNG_VALUES_RPLAT ON FHIRAPP.ENCOUNTER_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_ENCOUNTER_LATLNG_VALUES_RPLNG ON FHIRAPP.ENCOUNTER_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

ALTER TABLE FHIRAPP.ENCOUNTER_LATLNG_VALUES ADD CONSTRAINT FK_ENCOUNTER_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.ENCOUNTER_LATLNG_VALUES ADD CONSTRAINT FK_ENCOUNTER_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.ENCOUNTER_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.ENCOUNTER_LATLNG_VALUES_TENANT                      ON FHIRAPP.ENCOUNTER_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.ENCOUNTER_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.ENCOUNTER_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.ENCOUNTER_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_ENCOUNTER_QUANTITY_VALUES_PCHLSR ON FHIRAPP.ENCOUNTER_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_ENCOUNTER_QUANTITY_VALUES_RPS ON FHIRAPP.ENCOUNTER_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_ENCOUNTER_QUANTITY_VALUES_RPCLHS ON FHIRAPP.ENCOUNTER_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_ENCOUNTER_QUANTITY_VALUES_PNNV ON FHIRAPP.ENCOUNTER_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_ENCOUNTER_QUANTITY_VALUES_RPCHLS ON FHIRAPP.ENCOUNTER_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_ENCOUNTER_QUANTITY_VALUES_PCLHSR ON FHIRAPP.ENCOUNTER_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.ENCOUNTER_QUANTITY_VALUES ADD CONSTRAINT FK_ENCOUNTER_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.ENCOUNTER_QUANTITY_VALUES ADD CONSTRAINT FK_ENCOUNTER_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.ENCOUNTER_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.ENCOUNTER_QUANTITY_VALUES_TENANT                      ON FHIRAPP.ENCOUNTER_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.ENCOUNTER_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.ENCOUNTER_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.SUBSTANCE_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT SUBSTANCE_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.SUBSTANCE_LOGICAL_RESOURCES ADD CONSTRAINT FK_SUBSTANCE_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.SUBSTANCE_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.SUBSTANCE_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.SUBSTANCE_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.SUBSTANCE_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.SUBSTANCE_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT SUBSTANCE_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.SUBSTANCE_RESOURCES_PRF_IN1 ON FHIRAPP.SUBSTANCE_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.SUBSTANCE_RESOURCES_TENANT                      ON FHIRAPP.SUBSTANCE_RESOURCES          FOR ROWS WHERE FHIRAPP.SUBSTANCE_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.SUBSTANCE_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.SUBSTANCE_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_SUBSTANCE_STR_VALUES_PSR ON FHIRAPP.SUBSTANCE_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SUBSTANCE_STR_VALUES_RPL ON FHIRAPP.SUBSTANCE_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

CREATE INDEX FHIRAPP.IDX_SUBSTANCE_STR_VALUES_RPS ON FHIRAPP.SUBSTANCE_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

CREATE INDEX FHIRAPP.IDX_SUBSTANCE_STR_VALUES_PLR ON FHIRAPP.SUBSTANCE_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.SUBSTANCE_STR_VALUES ADD CONSTRAINT FK_SUBSTANCE_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.SUBSTANCE_STR_VALUES ADD CONSTRAINT FK_SUBSTANCE_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.SUBSTANCE_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.SUBSTANCE_STR_VALUES_TENANT                      ON FHIRAPP.SUBSTANCE_STR_VALUES          FOR ROWS WHERE FHIRAPP.SUBSTANCE_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.SUBSTANCE_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.SUBSTANCE_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_SUBSTANCE_TOKEN_VALUES_RPS ON FHIRAPP.SUBSTANCE_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

CREATE INDEX FHIRAPP.IDX_SUBSTANCE_TOKEN_VALUES_PNCSCV ON FHIRAPP.SUBSTANCE_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.SUBSTANCE_TOKEN_VALUES ADD CONSTRAINT FK_SUBSTANCE_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.SUBSTANCE_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.SUBSTANCE_TOKEN_VALUES ADD CONSTRAINT FK_SUBSTANCE_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.SUBSTANCE_TOKEN_VALUES ADD CONSTRAINT FK_SUBSTANCE_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

CREATE PERMISSION FHIRAPP.SUBSTANCE_TOKEN_VALUES_TENANT                      ON FHIRAPP.SUBSTANCE_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.SUBSTANCE_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.SUBSTANCE_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.SUBSTANCE_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_SUBSTANCE_DATE_VALUES_PESR ON FHIRAPP.SUBSTANCE_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SUBSTANCE_DATE_VALUES_RPV ON FHIRAPP.SUBSTANCE_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

CREATE INDEX FHIRAPP.IDX_SUBSTANCE_DATE_VALUES_PVR ON FHIRAPP.SUBSTANCE_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SUBSTANCE_DATE_VALUES_PSER ON FHIRAPP.SUBSTANCE_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SUBSTANCE_DATE_VALUES_RPSE ON FHIRAPP.SUBSTANCE_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

ALTER TABLE FHIRAPP.SUBSTANCE_DATE_VALUES ADD CONSTRAINT FK_SUBSTANCE_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.SUBSTANCE_DATE_VALUES ADD CONSTRAINT FK_SUBSTANCE_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.SUBSTANCE_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.SUBSTANCE_DATE_VALUES_TENANT                      ON FHIRAPP.SUBSTANCE_DATE_VALUES          FOR ROWS WHERE FHIRAPP.SUBSTANCE_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.SUBSTANCE_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.SUBSTANCE_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_SUBSTANCE_NUMBER_VALUES_PNNV ON FHIRAPP.SUBSTANCE_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SUBSTANCE_NUMBER_VALUES_RPS ON FHIRAPP.SUBSTANCE_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

ALTER TABLE FHIRAPP.SUBSTANCE_NUMBER_VALUES ADD CONSTRAINT FK_SUBSTANCE_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.SUBSTANCE_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.SUBSTANCE_NUMBER_VALUES ADD CONSTRAINT FK_SUBSTANCE_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.SUBSTANCE_NUMBER_VALUES_TENANT                      ON FHIRAPP.SUBSTANCE_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.SUBSTANCE_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.SUBSTANCE_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.SUBSTANCE_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_SUBSTANCE_LATLNG_VALUES_PNNLV ON FHIRAPP.SUBSTANCE_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SUBSTANCE_LATLNG_VALUES_RPLNG ON FHIRAPP.SUBSTANCE_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_SUBSTANCE_LATLNG_VALUES_RPLAT ON FHIRAPP.SUBSTANCE_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_SUBSTANCE_LATLNG_VALUES_PNNHV ON FHIRAPP.SUBSTANCE_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.SUBSTANCE_LATLNG_VALUES ADD CONSTRAINT FK_SUBSTANCE_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.SUBSTANCE_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.SUBSTANCE_LATLNG_VALUES ADD CONSTRAINT FK_SUBSTANCE_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.SUBSTANCE_LATLNG_VALUES_TENANT                      ON FHIRAPP.SUBSTANCE_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.SUBSTANCE_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.SUBSTANCE_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.SUBSTANCE_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_SUBSTANCE_QUANTITY_VALUES_RPS ON FHIRAPP.SUBSTANCE_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_SUBSTANCE_QUANTITY_VALUES_PCHLSR ON FHIRAPP.SUBSTANCE_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SUBSTANCE_QUANTITY_VALUES_RPCHLS ON FHIRAPP.SUBSTANCE_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_SUBSTANCE_QUANTITY_VALUES_PNNV ON FHIRAPP.SUBSTANCE_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_SUBSTANCE_QUANTITY_VALUES_PCLHSR ON FHIRAPP.SUBSTANCE_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SUBSTANCE_QUANTITY_VALUES_RPCLHS ON FHIRAPP.SUBSTANCE_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

ALTER TABLE FHIRAPP.SUBSTANCE_QUANTITY_VALUES ADD CONSTRAINT FK_SUBSTANCE_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.SUBSTANCE_QUANTITY_VALUES ADD CONSTRAINT FK_SUBSTANCE_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.SUBSTANCE_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.SUBSTANCE_QUANTITY_VALUES_TENANT                      ON FHIRAPP.SUBSTANCE_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.SUBSTANCE_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.SUBSTANCE_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.SUBSTANCESPECIFICATION_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT SUBSTANCESPECIFICATION_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.SUBSTANCESPECIFICATION_LOGICAL_RESOURCES ADD CONSTRAINT FK_SUBSTANCESPECIFICATION_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.SUBSTANCESPECIFICATION_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.SUBSTANCESPECIFICATION_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.SUBSTANCESPECIFICATION_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.SUBSTANCESPECIFICATION_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.SUBSTANCESPECIFICATION_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT SUBSTANCESPECIFICATION_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.SUBSTANCESPECIFICATION_RESOURCES_PRF_IN1 ON FHIRAPP.SUBSTANCESPECIFICATION_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.SUBSTANCESPECIFICATION_RESOURCES_TENANT                      ON FHIRAPP.SUBSTANCESPECIFICATION_RESOURCES          FOR ROWS WHERE FHIRAPP.SUBSTANCESPECIFICATION_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.SUBSTANCESPECIFICATION_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.SUBSTANCESPECIFICATION_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_SUBSTANCESPECIFICATION_STR_VALUES_PLR ON FHIRAPP.SUBSTANCESPECIFICATION_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SUBSTANCESPECIFICATION_STR_VALUES_RPS ON FHIRAPP.SUBSTANCESPECIFICATION_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

CREATE INDEX FHIRAPP.IDX_SUBSTANCESPECIFICATION_STR_VALUES_PSR ON FHIRAPP.SUBSTANCESPECIFICATION_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SUBSTANCESPECIFICATION_STR_VALUES_RPL ON FHIRAPP.SUBSTANCESPECIFICATION_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

ALTER TABLE FHIRAPP.SUBSTANCESPECIFICATION_STR_VALUES ADD CONSTRAINT FK_SUBSTANCESPECIFICATION_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.SUBSTANCESPECIFICATION_STR_VALUES ADD CONSTRAINT FK_SUBSTANCESPECIFICATION_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.SUBSTANCESPECIFICATION_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.SUBSTANCESPECIFICATION_STR_VALUES_TENANT                      ON FHIRAPP.SUBSTANCESPECIFICATION_STR_VALUES          FOR ROWS WHERE FHIRAPP.SUBSTANCESPECIFICATION_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.SUBSTANCESPECIFICATION_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.SUBSTANCESPECIFICATION_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_SUBSTANCESPECIFICATION_TOKEN_VALUES_RPS ON FHIRAPP.SUBSTANCESPECIFICATION_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

CREATE INDEX FHIRAPP.IDX_SUBSTANCESPECIFICATION_TOKEN_VALUES_PNCSCV ON FHIRAPP.SUBSTANCESPECIFICATION_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.SUBSTANCESPECIFICATION_TOKEN_VALUES ADD CONSTRAINT FK_SUBSTANCESPECIFICATION_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.SUBSTANCESPECIFICATION_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.SUBSTANCESPECIFICATION_TOKEN_VALUES ADD CONSTRAINT FK_SUBSTANCESPECIFICATION_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

ALTER TABLE FHIRAPP.SUBSTANCESPECIFICATION_TOKEN_VALUES ADD CONSTRAINT FK_SUBSTANCESPECIFICATION_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.SUBSTANCESPECIFICATION_TOKEN_VALUES_TENANT                      ON FHIRAPP.SUBSTANCESPECIFICATION_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.SUBSTANCESPECIFICATION_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.SUBSTANCESPECIFICATION_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.SUBSTANCESPECIFICATION_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_SUBSTANCESPECIFICATION_DATE_VALUES_RPV ON FHIRAPP.SUBSTANCESPECIFICATION_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

CREATE INDEX FHIRAPP.IDX_SUBSTANCESPECIFICATION_DATE_VALUES_PVR ON FHIRAPP.SUBSTANCESPECIFICATION_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SUBSTANCESPECIFICATION_DATE_VALUES_PSER ON FHIRAPP.SUBSTANCESPECIFICATION_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SUBSTANCESPECIFICATION_DATE_VALUES_RPSE ON FHIRAPP.SUBSTANCESPECIFICATION_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

CREATE INDEX FHIRAPP.IDX_SUBSTANCESPECIFICATION_DATE_VALUES_PESR ON FHIRAPP.SUBSTANCESPECIFICATION_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.SUBSTANCESPECIFICATION_DATE_VALUES ADD CONSTRAINT FK_SUBSTANCESPECIFICATION_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.SUBSTANCESPECIFICATION_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.SUBSTANCESPECIFICATION_DATE_VALUES ADD CONSTRAINT FK_SUBSTANCESPECIFICATION_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.SUBSTANCESPECIFICATION_DATE_VALUES_TENANT                      ON FHIRAPP.SUBSTANCESPECIFICATION_DATE_VALUES          FOR ROWS WHERE FHIRAPP.SUBSTANCESPECIFICATION_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.SUBSTANCESPECIFICATION_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.SUBSTANCESPECIFICATION_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_SUBSTANCESPECIFICATION_NUMBER_VALUES_RPS ON FHIRAPP.SUBSTANCESPECIFICATION_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

CREATE INDEX FHIRAPP.IDX_SUBSTANCESPECIFICATION_NUMBER_VALUES_PNNV ON FHIRAPP.SUBSTANCESPECIFICATION_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.SUBSTANCESPECIFICATION_NUMBER_VALUES ADD CONSTRAINT FK_SUBSTANCESPECIFICATION_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.SUBSTANCESPECIFICATION_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.SUBSTANCESPECIFICATION_NUMBER_VALUES ADD CONSTRAINT FK_SUBSTANCESPECIFICATION_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.SUBSTANCESPECIFICATION_NUMBER_VALUES_TENANT                      ON FHIRAPP.SUBSTANCESPECIFICATION_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.SUBSTANCESPECIFICATION_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.SUBSTANCESPECIFICATION_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.SUBSTANCESPECIFICATION_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_SUBSTANCESPECIFICATION_LATLNG_VALUES_RPLNG ON FHIRAPP.SUBSTANCESPECIFICATION_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_SUBSTANCESPECIFICATION_LATLNG_VALUES_PNNLV ON FHIRAPP.SUBSTANCESPECIFICATION_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SUBSTANCESPECIFICATION_LATLNG_VALUES_PNNHV ON FHIRAPP.SUBSTANCESPECIFICATION_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SUBSTANCESPECIFICATION_LATLNG_VALUES_RPLAT ON FHIRAPP.SUBSTANCESPECIFICATION_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

ALTER TABLE FHIRAPP.SUBSTANCESPECIFICATION_LATLNG_VALUES ADD CONSTRAINT FK_SUBSTANCESPECIFICATION_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.SUBSTANCESPECIFICATION_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.SUBSTANCESPECIFICATION_LATLNG_VALUES ADD CONSTRAINT FK_SUBSTANCESPECIFICATION_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.SUBSTANCESPECIFICATION_LATLNG_VALUES_TENANT                      ON FHIRAPP.SUBSTANCESPECIFICATION_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.SUBSTANCESPECIFICATION_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.SUBSTANCESPECIFICATION_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.SUBSTANCESPECIFICATION_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_SUBSTANCESPECIFICATION_QUANTITY_VALUES_PCLHSR ON FHIRAPP.SUBSTANCESPECIFICATION_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SUBSTANCESPECIFICATION_QUANTITY_VALUES_RPCHLS ON FHIRAPP.SUBSTANCESPECIFICATION_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_SUBSTANCESPECIFICATION_QUANTITY_VALUES_PNNV ON FHIRAPP.SUBSTANCESPECIFICATION_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_SUBSTANCESPECIFICATION_QUANTITY_VALUES_RPS ON FHIRAPP.SUBSTANCESPECIFICATION_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_SUBSTANCESPECIFICATION_QUANTITY_VALUES_PCHLSR ON FHIRAPP.SUBSTANCESPECIFICATION_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SUBSTANCESPECIFICATION_QUANTITY_VALUES_RPCLHS ON FHIRAPP.SUBSTANCESPECIFICATION_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

ALTER TABLE FHIRAPP.SUBSTANCESPECIFICATION_QUANTITY_VALUES ADD CONSTRAINT FK_SUBSTANCESPECIFICATION_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.SUBSTANCESPECIFICATION_QUANTITY_VALUES ADD CONSTRAINT FK_SUBSTANCESPECIFICATION_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.SUBSTANCESPECIFICATION_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.SUBSTANCESPECIFICATION_QUANTITY_VALUES_TENANT                      ON FHIRAPP.SUBSTANCESPECIFICATION_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.SUBSTANCESPECIFICATION_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.SUBSTANCESPECIFICATION_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.SEARCHPARAMETER_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT SEARCHPARAMETER_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.SEARCHPARAMETER_LOGICAL_RESOURCES ADD CONSTRAINT FK_SEARCHPARAMETER_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.SEARCHPARAMETER_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.SEARCHPARAMETER_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.SEARCHPARAMETER_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.SEARCHPARAMETER_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.SEARCHPARAMETER_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT SEARCHPARAMETER_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.SEARCHPARAMETER_RESOURCES_PRF_IN1 ON FHIRAPP.SEARCHPARAMETER_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.SEARCHPARAMETER_RESOURCES_TENANT                      ON FHIRAPP.SEARCHPARAMETER_RESOURCES          FOR ROWS WHERE FHIRAPP.SEARCHPARAMETER_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.SEARCHPARAMETER_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.SEARCHPARAMETER_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_SEARCHPARAMETER_STR_VALUES_PSR ON FHIRAPP.SEARCHPARAMETER_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SEARCHPARAMETER_STR_VALUES_RPS ON FHIRAPP.SEARCHPARAMETER_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

CREATE INDEX FHIRAPP.IDX_SEARCHPARAMETER_STR_VALUES_PLR ON FHIRAPP.SEARCHPARAMETER_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SEARCHPARAMETER_STR_VALUES_RPL ON FHIRAPP.SEARCHPARAMETER_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

ALTER TABLE FHIRAPP.SEARCHPARAMETER_STR_VALUES ADD CONSTRAINT FK_SEARCHPARAMETER_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.SEARCHPARAMETER_STR_VALUES ADD CONSTRAINT FK_SEARCHPARAMETER_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.SEARCHPARAMETER_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.SEARCHPARAMETER_STR_VALUES_TENANT                      ON FHIRAPP.SEARCHPARAMETER_STR_VALUES          FOR ROWS WHERE FHIRAPP.SEARCHPARAMETER_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.SEARCHPARAMETER_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.SEARCHPARAMETER_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_SEARCHPARAMETER_TOKEN_VALUES_RPS ON FHIRAPP.SEARCHPARAMETER_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

CREATE INDEX FHIRAPP.IDX_SEARCHPARAMETER_TOKEN_VALUES_PNCSCV ON FHIRAPP.SEARCHPARAMETER_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.SEARCHPARAMETER_TOKEN_VALUES ADD CONSTRAINT FK_SEARCHPARAMETER_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.SEARCHPARAMETER_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.SEARCHPARAMETER_TOKEN_VALUES ADD CONSTRAINT FK_SEARCHPARAMETER_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

ALTER TABLE FHIRAPP.SEARCHPARAMETER_TOKEN_VALUES ADD CONSTRAINT FK_SEARCHPARAMETER_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.SEARCHPARAMETER_TOKEN_VALUES_TENANT                      ON FHIRAPP.SEARCHPARAMETER_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.SEARCHPARAMETER_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.SEARCHPARAMETER_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.SEARCHPARAMETER_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_SEARCHPARAMETER_DATE_VALUES_PESR ON FHIRAPP.SEARCHPARAMETER_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SEARCHPARAMETER_DATE_VALUES_RPV ON FHIRAPP.SEARCHPARAMETER_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

CREATE INDEX FHIRAPP.IDX_SEARCHPARAMETER_DATE_VALUES_PVR ON FHIRAPP.SEARCHPARAMETER_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SEARCHPARAMETER_DATE_VALUES_PSER ON FHIRAPP.SEARCHPARAMETER_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SEARCHPARAMETER_DATE_VALUES_RPSE ON FHIRAPP.SEARCHPARAMETER_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

ALTER TABLE FHIRAPP.SEARCHPARAMETER_DATE_VALUES ADD CONSTRAINT FK_SEARCHPARAMETER_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.SEARCHPARAMETER_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.SEARCHPARAMETER_DATE_VALUES ADD CONSTRAINT FK_SEARCHPARAMETER_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.SEARCHPARAMETER_DATE_VALUES_TENANT                      ON FHIRAPP.SEARCHPARAMETER_DATE_VALUES          FOR ROWS WHERE FHIRAPP.SEARCHPARAMETER_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.SEARCHPARAMETER_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.SEARCHPARAMETER_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_SEARCHPARAMETER_NUMBER_VALUES_PNNV ON FHIRAPP.SEARCHPARAMETER_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SEARCHPARAMETER_NUMBER_VALUES_RPS ON FHIRAPP.SEARCHPARAMETER_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

ALTER TABLE FHIRAPP.SEARCHPARAMETER_NUMBER_VALUES ADD CONSTRAINT FK_SEARCHPARAMETER_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.SEARCHPARAMETER_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.SEARCHPARAMETER_NUMBER_VALUES ADD CONSTRAINT FK_SEARCHPARAMETER_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.SEARCHPARAMETER_NUMBER_VALUES_TENANT                      ON FHIRAPP.SEARCHPARAMETER_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.SEARCHPARAMETER_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.SEARCHPARAMETER_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.SEARCHPARAMETER_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_SEARCHPARAMETER_LATLNG_VALUES_PNNHV ON FHIRAPP.SEARCHPARAMETER_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SEARCHPARAMETER_LATLNG_VALUES_RPLNG ON FHIRAPP.SEARCHPARAMETER_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_SEARCHPARAMETER_LATLNG_VALUES_RPLAT ON FHIRAPP.SEARCHPARAMETER_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_SEARCHPARAMETER_LATLNG_VALUES_PNNLV ON FHIRAPP.SEARCHPARAMETER_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.SEARCHPARAMETER_LATLNG_VALUES ADD CONSTRAINT FK_SEARCHPARAMETER_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.SEARCHPARAMETER_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.SEARCHPARAMETER_LATLNG_VALUES ADD CONSTRAINT FK_SEARCHPARAMETER_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.SEARCHPARAMETER_LATLNG_VALUES_TENANT                      ON FHIRAPP.SEARCHPARAMETER_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.SEARCHPARAMETER_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.SEARCHPARAMETER_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.SEARCHPARAMETER_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_SEARCHPARAMETER_QUANTITY_VALUES_PNNV ON FHIRAPP.SEARCHPARAMETER_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_SEARCHPARAMETER_QUANTITY_VALUES_RPCHLS ON FHIRAPP.SEARCHPARAMETER_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_SEARCHPARAMETER_QUANTITY_VALUES_PCLHSR ON FHIRAPP.SEARCHPARAMETER_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SEARCHPARAMETER_QUANTITY_VALUES_RPS ON FHIRAPP.SEARCHPARAMETER_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_SEARCHPARAMETER_QUANTITY_VALUES_RPCLHS ON FHIRAPP.SEARCHPARAMETER_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_SEARCHPARAMETER_QUANTITY_VALUES_PCHLSR ON FHIRAPP.SEARCHPARAMETER_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.SEARCHPARAMETER_QUANTITY_VALUES ADD CONSTRAINT FK_SEARCHPARAMETER_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.SEARCHPARAMETER_QUANTITY_VALUES ADD CONSTRAINT FK_SEARCHPARAMETER_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.SEARCHPARAMETER_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.SEARCHPARAMETER_QUANTITY_VALUES_TENANT                      ON FHIRAPP.SEARCHPARAMETER_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.SEARCHPARAMETER_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.SEARCHPARAMETER_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.ACTIVITYDEFINITION_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT ACTIVITYDEFINITION_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.ACTIVITYDEFINITION_LOGICAL_RESOURCES ADD CONSTRAINT FK_ACTIVITYDEFINITION_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.ACTIVITYDEFINITION_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.ACTIVITYDEFINITION_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.ACTIVITYDEFINITION_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.ACTIVITYDEFINITION_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.ACTIVITYDEFINITION_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT ACTIVITYDEFINITION_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.ACTIVITYDEFINITION_RESOURCES_PRF_IN1 ON FHIRAPP.ACTIVITYDEFINITION_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.ACTIVITYDEFINITION_RESOURCES_TENANT                      ON FHIRAPP.ACTIVITYDEFINITION_RESOURCES          FOR ROWS WHERE FHIRAPP.ACTIVITYDEFINITION_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.ACTIVITYDEFINITION_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.ACTIVITYDEFINITION_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_ACTIVITYDEFINITION_STR_VALUES_RPL ON FHIRAPP.ACTIVITYDEFINITION_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

CREATE INDEX FHIRAPP.IDX_ACTIVITYDEFINITION_STR_VALUES_PSR ON FHIRAPP.ACTIVITYDEFINITION_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_ACTIVITYDEFINITION_STR_VALUES_PLR ON FHIRAPP.ACTIVITYDEFINITION_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_ACTIVITYDEFINITION_STR_VALUES_RPS ON FHIRAPP.ACTIVITYDEFINITION_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

ALTER TABLE FHIRAPP.ACTIVITYDEFINITION_STR_VALUES ADD CONSTRAINT FK_ACTIVITYDEFINITION_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.ACTIVITYDEFINITION_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.ACTIVITYDEFINITION_STR_VALUES ADD CONSTRAINT FK_ACTIVITYDEFINITION_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.ACTIVITYDEFINITION_STR_VALUES_TENANT                      ON FHIRAPP.ACTIVITYDEFINITION_STR_VALUES          FOR ROWS WHERE FHIRAPP.ACTIVITYDEFINITION_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.ACTIVITYDEFINITION_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.ACTIVITYDEFINITION_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_ACTIVITYDEFINITION_TOKEN_VALUES_RPS ON FHIRAPP.ACTIVITYDEFINITION_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

CREATE INDEX FHIRAPP.IDX_ACTIVITYDEFINITION_TOKEN_VALUES_PNCSCV ON FHIRAPP.ACTIVITYDEFINITION_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.ACTIVITYDEFINITION_TOKEN_VALUES ADD CONSTRAINT FK_ACTIVITYDEFINITION_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.ACTIVITYDEFINITION_TOKEN_VALUES ADD CONSTRAINT FK_ACTIVITYDEFINITION_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

ALTER TABLE FHIRAPP.ACTIVITYDEFINITION_TOKEN_VALUES ADD CONSTRAINT FK_ACTIVITYDEFINITION_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.ACTIVITYDEFINITION_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.ACTIVITYDEFINITION_TOKEN_VALUES_TENANT                      ON FHIRAPP.ACTIVITYDEFINITION_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.ACTIVITYDEFINITION_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.ACTIVITYDEFINITION_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.ACTIVITYDEFINITION_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_ACTIVITYDEFINITION_DATE_VALUES_RPSE ON FHIRAPP.ACTIVITYDEFINITION_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

CREATE INDEX FHIRAPP.IDX_ACTIVITYDEFINITION_DATE_VALUES_PSER ON FHIRAPP.ACTIVITYDEFINITION_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_ACTIVITYDEFINITION_DATE_VALUES_RPV ON FHIRAPP.ACTIVITYDEFINITION_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

CREATE INDEX FHIRAPP.IDX_ACTIVITYDEFINITION_DATE_VALUES_PVR ON FHIRAPP.ACTIVITYDEFINITION_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_ACTIVITYDEFINITION_DATE_VALUES_PESR ON FHIRAPP.ACTIVITYDEFINITION_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.ACTIVITYDEFINITION_DATE_VALUES ADD CONSTRAINT FK_ACTIVITYDEFINITION_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.ACTIVITYDEFINITION_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.ACTIVITYDEFINITION_DATE_VALUES ADD CONSTRAINT FK_ACTIVITYDEFINITION_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.ACTIVITYDEFINITION_DATE_VALUES_TENANT                      ON FHIRAPP.ACTIVITYDEFINITION_DATE_VALUES          FOR ROWS WHERE FHIRAPP.ACTIVITYDEFINITION_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.ACTIVITYDEFINITION_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.ACTIVITYDEFINITION_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_ACTIVITYDEFINITION_NUMBER_VALUES_PNNV ON FHIRAPP.ACTIVITYDEFINITION_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_ACTIVITYDEFINITION_NUMBER_VALUES_RPS ON FHIRAPP.ACTIVITYDEFINITION_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

ALTER TABLE FHIRAPP.ACTIVITYDEFINITION_NUMBER_VALUES ADD CONSTRAINT FK_ACTIVITYDEFINITION_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.ACTIVITYDEFINITION_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.ACTIVITYDEFINITION_NUMBER_VALUES ADD CONSTRAINT FK_ACTIVITYDEFINITION_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.ACTIVITYDEFINITION_NUMBER_VALUES_TENANT                      ON FHIRAPP.ACTIVITYDEFINITION_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.ACTIVITYDEFINITION_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.ACTIVITYDEFINITION_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.ACTIVITYDEFINITION_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_ACTIVITYDEFINITION_LATLNG_VALUES_PNNHV ON FHIRAPP.ACTIVITYDEFINITION_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_ACTIVITYDEFINITION_LATLNG_VALUES_RPLNG ON FHIRAPP.ACTIVITYDEFINITION_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_ACTIVITYDEFINITION_LATLNG_VALUES_PNNLV ON FHIRAPP.ACTIVITYDEFINITION_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_ACTIVITYDEFINITION_LATLNG_VALUES_RPLAT ON FHIRAPP.ACTIVITYDEFINITION_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

ALTER TABLE FHIRAPP.ACTIVITYDEFINITION_LATLNG_VALUES ADD CONSTRAINT FK_ACTIVITYDEFINITION_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.ACTIVITYDEFINITION_LATLNG_VALUES ADD CONSTRAINT FK_ACTIVITYDEFINITION_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.ACTIVITYDEFINITION_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.ACTIVITYDEFINITION_LATLNG_VALUES_TENANT                      ON FHIRAPP.ACTIVITYDEFINITION_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.ACTIVITYDEFINITION_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.ACTIVITYDEFINITION_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.ACTIVITYDEFINITION_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_ACTIVITYDEFINITION_QUANTITY_VALUES_RPCHLS ON FHIRAPP.ACTIVITYDEFINITION_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_ACTIVITYDEFINITION_QUANTITY_VALUES_PCLHSR ON FHIRAPP.ACTIVITYDEFINITION_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_ACTIVITYDEFINITION_QUANTITY_VALUES_PCHLSR ON FHIRAPP.ACTIVITYDEFINITION_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_ACTIVITYDEFINITION_QUANTITY_VALUES_RPCLHS ON FHIRAPP.ACTIVITYDEFINITION_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_ACTIVITYDEFINITION_QUANTITY_VALUES_RPS ON FHIRAPP.ACTIVITYDEFINITION_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_ACTIVITYDEFINITION_QUANTITY_VALUES_PNNV ON FHIRAPP.ACTIVITYDEFINITION_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

ALTER TABLE FHIRAPP.ACTIVITYDEFINITION_QUANTITY_VALUES ADD CONSTRAINT FK_ACTIVITYDEFINITION_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.ACTIVITYDEFINITION_QUANTITY_VALUES ADD CONSTRAINT FK_ACTIVITYDEFINITION_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.ACTIVITYDEFINITION_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.ACTIVITYDEFINITION_QUANTITY_VALUES_TENANT                      ON FHIRAPP.ACTIVITYDEFINITION_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.ACTIVITYDEFINITION_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.ACTIVITYDEFINITION_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.COMMUNICATION_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT COMMUNICATION_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.COMMUNICATION_LOGICAL_RESOURCES ADD CONSTRAINT FK_COMMUNICATION_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.COMMUNICATION_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.COMMUNICATION_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.COMMUNICATION_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.COMMUNICATION_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.COMMUNICATION_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT COMMUNICATION_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.COMMUNICATION_RESOURCES_PRF_IN1 ON FHIRAPP.COMMUNICATION_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.COMMUNICATION_RESOURCES_TENANT                      ON FHIRAPP.COMMUNICATION_RESOURCES          FOR ROWS WHERE FHIRAPP.COMMUNICATION_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.COMMUNICATION_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.COMMUNICATION_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_COMMUNICATION_STR_VALUES_PLR ON FHIRAPP.COMMUNICATION_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_COMMUNICATION_STR_VALUES_RPS ON FHIRAPP.COMMUNICATION_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

CREATE INDEX FHIRAPP.IDX_COMMUNICATION_STR_VALUES_PSR ON FHIRAPP.COMMUNICATION_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_COMMUNICATION_STR_VALUES_RPL ON FHIRAPP.COMMUNICATION_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

ALTER TABLE FHIRAPP.COMMUNICATION_STR_VALUES ADD CONSTRAINT FK_COMMUNICATION_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.COMMUNICATION_STR_VALUES ADD CONSTRAINT FK_COMMUNICATION_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.COMMUNICATION_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.COMMUNICATION_STR_VALUES_TENANT                      ON FHIRAPP.COMMUNICATION_STR_VALUES          FOR ROWS WHERE FHIRAPP.COMMUNICATION_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.COMMUNICATION_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.COMMUNICATION_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_COMMUNICATION_TOKEN_VALUES_PNCSCV ON FHIRAPP.COMMUNICATION_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_COMMUNICATION_TOKEN_VALUES_RPS ON FHIRAPP.COMMUNICATION_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

ALTER TABLE FHIRAPP.COMMUNICATION_TOKEN_VALUES ADD CONSTRAINT FK_COMMUNICATION_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

ALTER TABLE FHIRAPP.COMMUNICATION_TOKEN_VALUES ADD CONSTRAINT FK_COMMUNICATION_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.COMMUNICATION_TOKEN_VALUES ADD CONSTRAINT FK_COMMUNICATION_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.COMMUNICATION_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.COMMUNICATION_TOKEN_VALUES_TENANT                      ON FHIRAPP.COMMUNICATION_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.COMMUNICATION_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.COMMUNICATION_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.COMMUNICATION_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_COMMUNICATION_DATE_VALUES_PESR ON FHIRAPP.COMMUNICATION_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_COMMUNICATION_DATE_VALUES_RPSE ON FHIRAPP.COMMUNICATION_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

CREATE INDEX FHIRAPP.IDX_COMMUNICATION_DATE_VALUES_RPV ON FHIRAPP.COMMUNICATION_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

CREATE INDEX FHIRAPP.IDX_COMMUNICATION_DATE_VALUES_PSER ON FHIRAPP.COMMUNICATION_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_COMMUNICATION_DATE_VALUES_PVR ON FHIRAPP.COMMUNICATION_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.COMMUNICATION_DATE_VALUES ADD CONSTRAINT FK_COMMUNICATION_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.COMMUNICATION_DATE_VALUES ADD CONSTRAINT FK_COMMUNICATION_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.COMMUNICATION_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.COMMUNICATION_DATE_VALUES_TENANT                      ON FHIRAPP.COMMUNICATION_DATE_VALUES          FOR ROWS WHERE FHIRAPP.COMMUNICATION_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.COMMUNICATION_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.COMMUNICATION_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_COMMUNICATION_NUMBER_VALUES_PNNV ON FHIRAPP.COMMUNICATION_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_COMMUNICATION_NUMBER_VALUES_RPS ON FHIRAPP.COMMUNICATION_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

ALTER TABLE FHIRAPP.COMMUNICATION_NUMBER_VALUES ADD CONSTRAINT FK_COMMUNICATION_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.COMMUNICATION_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.COMMUNICATION_NUMBER_VALUES ADD CONSTRAINT FK_COMMUNICATION_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.COMMUNICATION_NUMBER_VALUES_TENANT                      ON FHIRAPP.COMMUNICATION_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.COMMUNICATION_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.COMMUNICATION_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.COMMUNICATION_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_COMMUNICATION_LATLNG_VALUES_PNNLV ON FHIRAPP.COMMUNICATION_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_COMMUNICATION_LATLNG_VALUES_RPLAT ON FHIRAPP.COMMUNICATION_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_COMMUNICATION_LATLNG_VALUES_PNNHV ON FHIRAPP.COMMUNICATION_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_COMMUNICATION_LATLNG_VALUES_RPLNG ON FHIRAPP.COMMUNICATION_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

ALTER TABLE FHIRAPP.COMMUNICATION_LATLNG_VALUES ADD CONSTRAINT FK_COMMUNICATION_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.COMMUNICATION_LATLNG_VALUES ADD CONSTRAINT FK_COMMUNICATION_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.COMMUNICATION_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.COMMUNICATION_LATLNG_VALUES_TENANT                      ON FHIRAPP.COMMUNICATION_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.COMMUNICATION_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.COMMUNICATION_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.COMMUNICATION_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_COMMUNICATION_QUANTITY_VALUES_PCHLSR ON FHIRAPP.COMMUNICATION_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_COMMUNICATION_QUANTITY_VALUES_RPCHLS ON FHIRAPP.COMMUNICATION_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_COMMUNICATION_QUANTITY_VALUES_PNNV ON FHIRAPP.COMMUNICATION_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_COMMUNICATION_QUANTITY_VALUES_RPS ON FHIRAPP.COMMUNICATION_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_COMMUNICATION_QUANTITY_VALUES_PCLHSR ON FHIRAPP.COMMUNICATION_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_COMMUNICATION_QUANTITY_VALUES_RPCLHS ON FHIRAPP.COMMUNICATION_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

ALTER TABLE FHIRAPP.COMMUNICATION_QUANTITY_VALUES ADD CONSTRAINT FK_COMMUNICATION_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.COMMUNICATION_QUANTITY_VALUES ADD CONSTRAINT FK_COMMUNICATION_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.COMMUNICATION_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.COMMUNICATION_QUANTITY_VALUES_TENANT                      ON FHIRAPP.COMMUNICATION_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.COMMUNICATION_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.COMMUNICATION_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.INSURANCEPLAN_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT INSURANCEPLAN_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.INSURANCEPLAN_LOGICAL_RESOURCES ADD CONSTRAINT FK_INSURANCEPLAN_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.INSURANCEPLAN_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.INSURANCEPLAN_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.INSURANCEPLAN_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.INSURANCEPLAN_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.INSURANCEPLAN_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT INSURANCEPLAN_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.INSURANCEPLAN_RESOURCES_PRF_IN1 ON FHIRAPP.INSURANCEPLAN_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.INSURANCEPLAN_RESOURCES_TENANT                      ON FHIRAPP.INSURANCEPLAN_RESOURCES          FOR ROWS WHERE FHIRAPP.INSURANCEPLAN_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.INSURANCEPLAN_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.INSURANCEPLAN_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_INSURANCEPLAN_STR_VALUES_PSR ON FHIRAPP.INSURANCEPLAN_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_INSURANCEPLAN_STR_VALUES_RPL ON FHIRAPP.INSURANCEPLAN_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

CREATE INDEX FHIRAPP.IDX_INSURANCEPLAN_STR_VALUES_PLR ON FHIRAPP.INSURANCEPLAN_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_INSURANCEPLAN_STR_VALUES_RPS ON FHIRAPP.INSURANCEPLAN_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

ALTER TABLE FHIRAPP.INSURANCEPLAN_STR_VALUES ADD CONSTRAINT FK_INSURANCEPLAN_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.INSURANCEPLAN_STR_VALUES ADD CONSTRAINT FK_INSURANCEPLAN_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.INSURANCEPLAN_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.INSURANCEPLAN_STR_VALUES_TENANT                      ON FHIRAPP.INSURANCEPLAN_STR_VALUES          FOR ROWS WHERE FHIRAPP.INSURANCEPLAN_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.INSURANCEPLAN_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.INSURANCEPLAN_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_INSURANCEPLAN_TOKEN_VALUES_PNCSCV ON FHIRAPP.INSURANCEPLAN_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_INSURANCEPLAN_TOKEN_VALUES_RPS ON FHIRAPP.INSURANCEPLAN_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

ALTER TABLE FHIRAPP.INSURANCEPLAN_TOKEN_VALUES ADD CONSTRAINT FK_INSURANCEPLAN_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

ALTER TABLE FHIRAPP.INSURANCEPLAN_TOKEN_VALUES ADD CONSTRAINT FK_INSURANCEPLAN_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.INSURANCEPLAN_TOKEN_VALUES ADD CONSTRAINT FK_INSURANCEPLAN_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.INSURANCEPLAN_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.INSURANCEPLAN_TOKEN_VALUES_TENANT                      ON FHIRAPP.INSURANCEPLAN_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.INSURANCEPLAN_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.INSURANCEPLAN_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.INSURANCEPLAN_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_INSURANCEPLAN_DATE_VALUES_PSER ON FHIRAPP.INSURANCEPLAN_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_INSURANCEPLAN_DATE_VALUES_RPSE ON FHIRAPP.INSURANCEPLAN_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

CREATE INDEX FHIRAPP.IDX_INSURANCEPLAN_DATE_VALUES_RPV ON FHIRAPP.INSURANCEPLAN_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

CREATE INDEX FHIRAPP.IDX_INSURANCEPLAN_DATE_VALUES_PESR ON FHIRAPP.INSURANCEPLAN_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_INSURANCEPLAN_DATE_VALUES_PVR ON FHIRAPP.INSURANCEPLAN_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.INSURANCEPLAN_DATE_VALUES ADD CONSTRAINT FK_INSURANCEPLAN_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.INSURANCEPLAN_DATE_VALUES ADD CONSTRAINT FK_INSURANCEPLAN_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.INSURANCEPLAN_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.INSURANCEPLAN_DATE_VALUES_TENANT                      ON FHIRAPP.INSURANCEPLAN_DATE_VALUES          FOR ROWS WHERE FHIRAPP.INSURANCEPLAN_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.INSURANCEPLAN_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.INSURANCEPLAN_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_INSURANCEPLAN_NUMBER_VALUES_PNNV ON FHIRAPP.INSURANCEPLAN_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_INSURANCEPLAN_NUMBER_VALUES_RPS ON FHIRAPP.INSURANCEPLAN_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

ALTER TABLE FHIRAPP.INSURANCEPLAN_NUMBER_VALUES ADD CONSTRAINT FK_INSURANCEPLAN_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.INSURANCEPLAN_NUMBER_VALUES ADD CONSTRAINT FK_INSURANCEPLAN_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.INSURANCEPLAN_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.INSURANCEPLAN_NUMBER_VALUES_TENANT                      ON FHIRAPP.INSURANCEPLAN_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.INSURANCEPLAN_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.INSURANCEPLAN_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.INSURANCEPLAN_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_INSURANCEPLAN_LATLNG_VALUES_PNNLV ON FHIRAPP.INSURANCEPLAN_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_INSURANCEPLAN_LATLNG_VALUES_RPLNG ON FHIRAPP.INSURANCEPLAN_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_INSURANCEPLAN_LATLNG_VALUES_PNNHV ON FHIRAPP.INSURANCEPLAN_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_INSURANCEPLAN_LATLNG_VALUES_RPLAT ON FHIRAPP.INSURANCEPLAN_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

ALTER TABLE FHIRAPP.INSURANCEPLAN_LATLNG_VALUES ADD CONSTRAINT FK_INSURANCEPLAN_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.INSURANCEPLAN_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.INSURANCEPLAN_LATLNG_VALUES ADD CONSTRAINT FK_INSURANCEPLAN_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.INSURANCEPLAN_LATLNG_VALUES_TENANT                      ON FHIRAPP.INSURANCEPLAN_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.INSURANCEPLAN_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.INSURANCEPLAN_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.INSURANCEPLAN_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_INSURANCEPLAN_QUANTITY_VALUES_PCHLSR ON FHIRAPP.INSURANCEPLAN_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_INSURANCEPLAN_QUANTITY_VALUES_RPS ON FHIRAPP.INSURANCEPLAN_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_INSURANCEPLAN_QUANTITY_VALUES_PCLHSR ON FHIRAPP.INSURANCEPLAN_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_INSURANCEPLAN_QUANTITY_VALUES_RPCLHS ON FHIRAPP.INSURANCEPLAN_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_INSURANCEPLAN_QUANTITY_VALUES_RPCHLS ON FHIRAPP.INSURANCEPLAN_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_INSURANCEPLAN_QUANTITY_VALUES_PNNV ON FHIRAPP.INSURANCEPLAN_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

ALTER TABLE FHIRAPP.INSURANCEPLAN_QUANTITY_VALUES ADD CONSTRAINT FK_INSURANCEPLAN_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.INSURANCEPLAN_QUANTITY_VALUES ADD CONSTRAINT FK_INSURANCEPLAN_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.INSURANCEPLAN_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.INSURANCEPLAN_QUANTITY_VALUES_TENANT                      ON FHIRAPP.INSURANCEPLAN_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.INSURANCEPLAN_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.INSURANCEPLAN_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.LINKAGE_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT LINKAGE_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.LINKAGE_LOGICAL_RESOURCES ADD CONSTRAINT FK_LINKAGE_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.LINKAGE_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.LINKAGE_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.LINKAGE_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.LINKAGE_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.LINKAGE_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT LINKAGE_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.LINKAGE_RESOURCES_PRF_IN1 ON FHIRAPP.LINKAGE_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.LINKAGE_RESOURCES_TENANT                      ON FHIRAPP.LINKAGE_RESOURCES          FOR ROWS WHERE FHIRAPP.LINKAGE_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.LINKAGE_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.LINKAGE_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_LINKAGE_STR_VALUES_PSR ON FHIRAPP.LINKAGE_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_LINKAGE_STR_VALUES_RPL ON FHIRAPP.LINKAGE_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

CREATE INDEX FHIRAPP.IDX_LINKAGE_STR_VALUES_PLR ON FHIRAPP.LINKAGE_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_LINKAGE_STR_VALUES_RPS ON FHIRAPP.LINKAGE_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

ALTER TABLE FHIRAPP.LINKAGE_STR_VALUES ADD CONSTRAINT FK_LINKAGE_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LINKAGE_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.LINKAGE_STR_VALUES ADD CONSTRAINT FK_LINKAGE_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.LINKAGE_STR_VALUES_TENANT                      ON FHIRAPP.LINKAGE_STR_VALUES          FOR ROWS WHERE FHIRAPP.LINKAGE_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.LINKAGE_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.LINKAGE_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_LINKAGE_TOKEN_VALUES_RPS ON FHIRAPP.LINKAGE_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

CREATE INDEX FHIRAPP.IDX_LINKAGE_TOKEN_VALUES_PNCSCV ON FHIRAPP.LINKAGE_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.LINKAGE_TOKEN_VALUES ADD CONSTRAINT FK_LINKAGE_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.LINKAGE_TOKEN_VALUES ADD CONSTRAINT FK_LINKAGE_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

ALTER TABLE FHIRAPP.LINKAGE_TOKEN_VALUES ADD CONSTRAINT FK_LINKAGE_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LINKAGE_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.LINKAGE_TOKEN_VALUES_TENANT                      ON FHIRAPP.LINKAGE_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.LINKAGE_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.LINKAGE_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.LINKAGE_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_LINKAGE_DATE_VALUES_PSER ON FHIRAPP.LINKAGE_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_LINKAGE_DATE_VALUES_RPSE ON FHIRAPP.LINKAGE_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

CREATE INDEX FHIRAPP.IDX_LINKAGE_DATE_VALUES_RPV ON FHIRAPP.LINKAGE_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

CREATE INDEX FHIRAPP.IDX_LINKAGE_DATE_VALUES_PESR ON FHIRAPP.LINKAGE_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_LINKAGE_DATE_VALUES_PVR ON FHIRAPP.LINKAGE_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.LINKAGE_DATE_VALUES ADD CONSTRAINT FK_LINKAGE_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LINKAGE_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.LINKAGE_DATE_VALUES ADD CONSTRAINT FK_LINKAGE_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.LINKAGE_DATE_VALUES_TENANT                      ON FHIRAPP.LINKAGE_DATE_VALUES          FOR ROWS WHERE FHIRAPP.LINKAGE_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.LINKAGE_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.LINKAGE_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_LINKAGE_NUMBER_VALUES_RPS ON FHIRAPP.LINKAGE_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

CREATE INDEX FHIRAPP.IDX_LINKAGE_NUMBER_VALUES_PNNV ON FHIRAPP.LINKAGE_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.LINKAGE_NUMBER_VALUES ADD CONSTRAINT FK_LINKAGE_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.LINKAGE_NUMBER_VALUES ADD CONSTRAINT FK_LINKAGE_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LINKAGE_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.LINKAGE_NUMBER_VALUES_TENANT                      ON FHIRAPP.LINKAGE_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.LINKAGE_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.LINKAGE_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.LINKAGE_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_LINKAGE_LATLNG_VALUES_PNNHV ON FHIRAPP.LINKAGE_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_LINKAGE_LATLNG_VALUES_PNNLV ON FHIRAPP.LINKAGE_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_LINKAGE_LATLNG_VALUES_RPLNG ON FHIRAPP.LINKAGE_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_LINKAGE_LATLNG_VALUES_RPLAT ON FHIRAPP.LINKAGE_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

ALTER TABLE FHIRAPP.LINKAGE_LATLNG_VALUES ADD CONSTRAINT FK_LINKAGE_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.LINKAGE_LATLNG_VALUES ADD CONSTRAINT FK_LINKAGE_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LINKAGE_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.LINKAGE_LATLNG_VALUES_TENANT                      ON FHIRAPP.LINKAGE_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.LINKAGE_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.LINKAGE_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.LINKAGE_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_LINKAGE_QUANTITY_VALUES_RPS ON FHIRAPP.LINKAGE_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_LINKAGE_QUANTITY_VALUES_RPCLHS ON FHIRAPP.LINKAGE_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_LINKAGE_QUANTITY_VALUES_PCLHSR ON FHIRAPP.LINKAGE_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_LINKAGE_QUANTITY_VALUES_PCHLSR ON FHIRAPP.LINKAGE_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_LINKAGE_QUANTITY_VALUES_PNNV ON FHIRAPP.LINKAGE_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_LINKAGE_QUANTITY_VALUES_RPCHLS ON FHIRAPP.LINKAGE_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

ALTER TABLE FHIRAPP.LINKAGE_QUANTITY_VALUES ADD CONSTRAINT FK_LINKAGE_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LINKAGE_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.LINKAGE_QUANTITY_VALUES ADD CONSTRAINT FK_LINKAGE_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.LINKAGE_QUANTITY_VALUES_TENANT                      ON FHIRAPP.LINKAGE_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.LINKAGE_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.LINKAGE_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.SUBSTANCESOURCEMATERIAL_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT SUBSTANCESOURCEMATERIAL_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.SUBSTANCESOURCEMATERIAL_LOGICAL_RESOURCES ADD CONSTRAINT FK_SUBSTANCESOURCEMATERIAL_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.SUBSTANCESOURCEMATERIAL_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.SUBSTANCESOURCEMATERIAL_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.SUBSTANCESOURCEMATERIAL_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.SUBSTANCESOURCEMATERIAL_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.SUBSTANCESOURCEMATERIAL_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT SUBSTANCESOURCEMATERIAL_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.SUBSTANCESOURCEMATERIAL_RESOURCES_PRF_IN1 ON FHIRAPP.SUBSTANCESOURCEMATERIAL_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.SUBSTANCESOURCEMATERIAL_RESOURCES_TENANT                      ON FHIRAPP.SUBSTANCESOURCEMATERIAL_RESOURCES          FOR ROWS WHERE FHIRAPP.SUBSTANCESOURCEMATERIAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.SUBSTANCESOURCEMATERIAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.SUBSTANCESOURCEMATERIAL_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_SUBSTANCESOURCEMATERIAL_STR_VALUES_RPS ON FHIRAPP.SUBSTANCESOURCEMATERIAL_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

CREATE INDEX FHIRAPP.IDX_SUBSTANCESOURCEMATERIAL_STR_VALUES_PLR ON FHIRAPP.SUBSTANCESOURCEMATERIAL_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SUBSTANCESOURCEMATERIAL_STR_VALUES_PSR ON FHIRAPP.SUBSTANCESOURCEMATERIAL_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SUBSTANCESOURCEMATERIAL_STR_VALUES_RPL ON FHIRAPP.SUBSTANCESOURCEMATERIAL_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

ALTER TABLE FHIRAPP.SUBSTANCESOURCEMATERIAL_STR_VALUES ADD CONSTRAINT FK_SUBSTANCESOURCEMATERIAL_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.SUBSTANCESOURCEMATERIAL_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.SUBSTANCESOURCEMATERIAL_STR_VALUES ADD CONSTRAINT FK_SUBSTANCESOURCEMATERIAL_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.SUBSTANCESOURCEMATERIAL_STR_VALUES_TENANT                      ON FHIRAPP.SUBSTANCESOURCEMATERIAL_STR_VALUES          FOR ROWS WHERE FHIRAPP.SUBSTANCESOURCEMATERIAL_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.SUBSTANCESOURCEMATERIAL_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.SUBSTANCESOURCEMATERIAL_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_SUBSTANCESOURCEMATERIAL_TOKEN_VALUES_RPS ON FHIRAPP.SUBSTANCESOURCEMATERIAL_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

CREATE INDEX FHIRAPP.IDX_SUBSTANCESOURCEMATERIAL_TOKEN_VALUES_PNCSCV ON FHIRAPP.SUBSTANCESOURCEMATERIAL_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.SUBSTANCESOURCEMATERIAL_TOKEN_VALUES ADD CONSTRAINT FK_SUBSTANCESOURCEMATERIAL_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

ALTER TABLE FHIRAPP.SUBSTANCESOURCEMATERIAL_TOKEN_VALUES ADD CONSTRAINT FK_SUBSTANCESOURCEMATERIAL_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.SUBSTANCESOURCEMATERIAL_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.SUBSTANCESOURCEMATERIAL_TOKEN_VALUES ADD CONSTRAINT FK_SUBSTANCESOURCEMATERIAL_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.SUBSTANCESOURCEMATERIAL_TOKEN_VALUES_TENANT                      ON FHIRAPP.SUBSTANCESOURCEMATERIAL_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.SUBSTANCESOURCEMATERIAL_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.SUBSTANCESOURCEMATERIAL_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.SUBSTANCESOURCEMATERIAL_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_SUBSTANCESOURCEMATERIAL_DATE_VALUES_PESR ON FHIRAPP.SUBSTANCESOURCEMATERIAL_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SUBSTANCESOURCEMATERIAL_DATE_VALUES_PVR ON FHIRAPP.SUBSTANCESOURCEMATERIAL_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SUBSTANCESOURCEMATERIAL_DATE_VALUES_RPSE ON FHIRAPP.SUBSTANCESOURCEMATERIAL_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

CREATE INDEX FHIRAPP.IDX_SUBSTANCESOURCEMATERIAL_DATE_VALUES_PSER ON FHIRAPP.SUBSTANCESOURCEMATERIAL_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SUBSTANCESOURCEMATERIAL_DATE_VALUES_RPV ON FHIRAPP.SUBSTANCESOURCEMATERIAL_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

ALTER TABLE FHIRAPP.SUBSTANCESOURCEMATERIAL_DATE_VALUES ADD CONSTRAINT FK_SUBSTANCESOURCEMATERIAL_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.SUBSTANCESOURCEMATERIAL_DATE_VALUES ADD CONSTRAINT FK_SUBSTANCESOURCEMATERIAL_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.SUBSTANCESOURCEMATERIAL_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.SUBSTANCESOURCEMATERIAL_DATE_VALUES_TENANT                      ON FHIRAPP.SUBSTANCESOURCEMATERIAL_DATE_VALUES          FOR ROWS WHERE FHIRAPP.SUBSTANCESOURCEMATERIAL_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.SUBSTANCESOURCEMATERIAL_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.SUBSTANCESOURCEMATERIAL_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_SUBSTANCESOURCEMATERIAL_NUMBER_VALUES_PNNV ON FHIRAPP.SUBSTANCESOURCEMATERIAL_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SUBSTANCESOURCEMATERIAL_NUMBER_VALUES_RPS ON FHIRAPP.SUBSTANCESOURCEMATERIAL_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

ALTER TABLE FHIRAPP.SUBSTANCESOURCEMATERIAL_NUMBER_VALUES ADD CONSTRAINT FK_SUBSTANCESOURCEMATERIAL_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.SUBSTANCESOURCEMATERIAL_NUMBER_VALUES ADD CONSTRAINT FK_SUBSTANCESOURCEMATERIAL_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.SUBSTANCESOURCEMATERIAL_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.SUBSTANCESOURCEMATERIAL_NUMBER_VALUES_TENANT                      ON FHIRAPP.SUBSTANCESOURCEMATERIAL_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.SUBSTANCESOURCEMATERIAL_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.SUBSTANCESOURCEMATERIAL_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.SUBSTANCESOURCEMATERIAL_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_SUBSTANCESOURCEMATERIAL_LATLNG_VALUES_RPLAT ON FHIRAPP.SUBSTANCESOURCEMATERIAL_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_SUBSTANCESOURCEMATERIAL_LATLNG_VALUES_PNNHV ON FHIRAPP.SUBSTANCESOURCEMATERIAL_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SUBSTANCESOURCEMATERIAL_LATLNG_VALUES_PNNLV ON FHIRAPP.SUBSTANCESOURCEMATERIAL_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SUBSTANCESOURCEMATERIAL_LATLNG_VALUES_RPLNG ON FHIRAPP.SUBSTANCESOURCEMATERIAL_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

ALTER TABLE FHIRAPP.SUBSTANCESOURCEMATERIAL_LATLNG_VALUES ADD CONSTRAINT FK_SUBSTANCESOURCEMATERIAL_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.SUBSTANCESOURCEMATERIAL_LATLNG_VALUES ADD CONSTRAINT FK_SUBSTANCESOURCEMATERIAL_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.SUBSTANCESOURCEMATERIAL_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.SUBSTANCESOURCEMATERIAL_LATLNG_VALUES_TENANT                      ON FHIRAPP.SUBSTANCESOURCEMATERIAL_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.SUBSTANCESOURCEMATERIAL_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.SUBSTANCESOURCEMATERIAL_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.SUBSTANCESOURCEMATERIAL_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_SUBSTANCESOURCEMATERIAL_QUANTITY_VALUES_RPS ON FHIRAPP.SUBSTANCESOURCEMATERIAL_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_SUBSTANCESOURCEMATERIAL_QUANTITY_VALUES_RPCLHS ON FHIRAPP.SUBSTANCESOURCEMATERIAL_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_SUBSTANCESOURCEMATERIAL_QUANTITY_VALUES_PCHLSR ON FHIRAPP.SUBSTANCESOURCEMATERIAL_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SUBSTANCESOURCEMATERIAL_QUANTITY_VALUES_PCLHSR ON FHIRAPP.SUBSTANCESOURCEMATERIAL_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SUBSTANCESOURCEMATERIAL_QUANTITY_VALUES_PNNV ON FHIRAPP.SUBSTANCESOURCEMATERIAL_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_SUBSTANCESOURCEMATERIAL_QUANTITY_VALUES_RPCHLS ON FHIRAPP.SUBSTANCESOURCEMATERIAL_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

ALTER TABLE FHIRAPP.SUBSTANCESOURCEMATERIAL_QUANTITY_VALUES ADD CONSTRAINT FK_SUBSTANCESOURCEMATERIAL_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.SUBSTANCESOURCEMATERIAL_QUANTITY_VALUES ADD CONSTRAINT FK_SUBSTANCESOURCEMATERIAL_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.SUBSTANCESOURCEMATERIAL_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.SUBSTANCESOURCEMATERIAL_QUANTITY_VALUES_TENANT                      ON FHIRAPP.SUBSTANCESOURCEMATERIAL_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.SUBSTANCESOURCEMATERIAL_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.SUBSTANCESOURCEMATERIAL_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.IMMUNIZATIONEVALUATION_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT IMMUNIZATIONEVALUATION_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.IMMUNIZATIONEVALUATION_LOGICAL_RESOURCES ADD CONSTRAINT FK_IMMUNIZATIONEVALUATION_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.IMMUNIZATIONEVALUATION_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.IMMUNIZATIONEVALUATION_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.IMMUNIZATIONEVALUATION_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.IMMUNIZATIONEVALUATION_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.IMMUNIZATIONEVALUATION_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT IMMUNIZATIONEVALUATION_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.IMMUNIZATIONEVALUATION_RESOURCES_PRF_IN1 ON FHIRAPP.IMMUNIZATIONEVALUATION_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.IMMUNIZATIONEVALUATION_RESOURCES_TENANT                      ON FHIRAPP.IMMUNIZATIONEVALUATION_RESOURCES          FOR ROWS WHERE FHIRAPP.IMMUNIZATIONEVALUATION_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.IMMUNIZATIONEVALUATION_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.IMMUNIZATIONEVALUATION_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_IMMUNIZATIONEVALUATION_STR_VALUES_RPS ON FHIRAPP.IMMUNIZATIONEVALUATION_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

CREATE INDEX FHIRAPP.IDX_IMMUNIZATIONEVALUATION_STR_VALUES_PLR ON FHIRAPP.IMMUNIZATIONEVALUATION_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_IMMUNIZATIONEVALUATION_STR_VALUES_RPL ON FHIRAPP.IMMUNIZATIONEVALUATION_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

CREATE INDEX FHIRAPP.IDX_IMMUNIZATIONEVALUATION_STR_VALUES_PSR ON FHIRAPP.IMMUNIZATIONEVALUATION_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.IMMUNIZATIONEVALUATION_STR_VALUES ADD CONSTRAINT FK_IMMUNIZATIONEVALUATION_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.IMMUNIZATIONEVALUATION_STR_VALUES ADD CONSTRAINT FK_IMMUNIZATIONEVALUATION_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.IMMUNIZATIONEVALUATION_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.IMMUNIZATIONEVALUATION_STR_VALUES_TENANT                      ON FHIRAPP.IMMUNIZATIONEVALUATION_STR_VALUES          FOR ROWS WHERE FHIRAPP.IMMUNIZATIONEVALUATION_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.IMMUNIZATIONEVALUATION_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.IMMUNIZATIONEVALUATION_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_IMMUNIZATIONEVALUATION_TOKEN_VALUES_PNCSCV ON FHIRAPP.IMMUNIZATIONEVALUATION_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_IMMUNIZATIONEVALUATION_TOKEN_VALUES_RPS ON FHIRAPP.IMMUNIZATIONEVALUATION_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

ALTER TABLE FHIRAPP.IMMUNIZATIONEVALUATION_TOKEN_VALUES ADD CONSTRAINT FK_IMMUNIZATIONEVALUATION_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

ALTER TABLE FHIRAPP.IMMUNIZATIONEVALUATION_TOKEN_VALUES ADD CONSTRAINT FK_IMMUNIZATIONEVALUATION_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.IMMUNIZATIONEVALUATION_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.IMMUNIZATIONEVALUATION_TOKEN_VALUES ADD CONSTRAINT FK_IMMUNIZATIONEVALUATION_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.IMMUNIZATIONEVALUATION_TOKEN_VALUES_TENANT                      ON FHIRAPP.IMMUNIZATIONEVALUATION_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.IMMUNIZATIONEVALUATION_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.IMMUNIZATIONEVALUATION_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.IMMUNIZATIONEVALUATION_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_IMMUNIZATIONEVALUATION_DATE_VALUES_PVR ON FHIRAPP.IMMUNIZATIONEVALUATION_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_IMMUNIZATIONEVALUATION_DATE_VALUES_PESR ON FHIRAPP.IMMUNIZATIONEVALUATION_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_IMMUNIZATIONEVALUATION_DATE_VALUES_RPV ON FHIRAPP.IMMUNIZATIONEVALUATION_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

CREATE INDEX FHIRAPP.IDX_IMMUNIZATIONEVALUATION_DATE_VALUES_PSER ON FHIRAPP.IMMUNIZATIONEVALUATION_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_IMMUNIZATIONEVALUATION_DATE_VALUES_RPSE ON FHIRAPP.IMMUNIZATIONEVALUATION_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

ALTER TABLE FHIRAPP.IMMUNIZATIONEVALUATION_DATE_VALUES ADD CONSTRAINT FK_IMMUNIZATIONEVALUATION_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.IMMUNIZATIONEVALUATION_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.IMMUNIZATIONEVALUATION_DATE_VALUES ADD CONSTRAINT FK_IMMUNIZATIONEVALUATION_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.IMMUNIZATIONEVALUATION_DATE_VALUES_TENANT                      ON FHIRAPP.IMMUNIZATIONEVALUATION_DATE_VALUES          FOR ROWS WHERE FHIRAPP.IMMUNIZATIONEVALUATION_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.IMMUNIZATIONEVALUATION_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.IMMUNIZATIONEVALUATION_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_IMMUNIZATIONEVALUATION_NUMBER_VALUES_RPS ON FHIRAPP.IMMUNIZATIONEVALUATION_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

CREATE INDEX FHIRAPP.IDX_IMMUNIZATIONEVALUATION_NUMBER_VALUES_PNNV ON FHIRAPP.IMMUNIZATIONEVALUATION_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.IMMUNIZATIONEVALUATION_NUMBER_VALUES ADD CONSTRAINT FK_IMMUNIZATIONEVALUATION_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.IMMUNIZATIONEVALUATION_NUMBER_VALUES ADD CONSTRAINT FK_IMMUNIZATIONEVALUATION_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.IMMUNIZATIONEVALUATION_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.IMMUNIZATIONEVALUATION_NUMBER_VALUES_TENANT                      ON FHIRAPP.IMMUNIZATIONEVALUATION_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.IMMUNIZATIONEVALUATION_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.IMMUNIZATIONEVALUATION_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.IMMUNIZATIONEVALUATION_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_IMMUNIZATIONEVALUATION_LATLNG_VALUES_RPLAT ON FHIRAPP.IMMUNIZATIONEVALUATION_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_IMMUNIZATIONEVALUATION_LATLNG_VALUES_PNNLV ON FHIRAPP.IMMUNIZATIONEVALUATION_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_IMMUNIZATIONEVALUATION_LATLNG_VALUES_RPLNG ON FHIRAPP.IMMUNIZATIONEVALUATION_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_IMMUNIZATIONEVALUATION_LATLNG_VALUES_PNNHV ON FHIRAPP.IMMUNIZATIONEVALUATION_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.IMMUNIZATIONEVALUATION_LATLNG_VALUES ADD CONSTRAINT FK_IMMUNIZATIONEVALUATION_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.IMMUNIZATIONEVALUATION_LATLNG_VALUES ADD CONSTRAINT FK_IMMUNIZATIONEVALUATION_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.IMMUNIZATIONEVALUATION_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.IMMUNIZATIONEVALUATION_LATLNG_VALUES_TENANT                      ON FHIRAPP.IMMUNIZATIONEVALUATION_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.IMMUNIZATIONEVALUATION_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.IMMUNIZATIONEVALUATION_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.IMMUNIZATIONEVALUATION_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_IMMUNIZATIONEVALUATION_QUANTITY_VALUES_RPCHLS ON FHIRAPP.IMMUNIZATIONEVALUATION_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_IMMUNIZATIONEVALUATION_QUANTITY_VALUES_PCLHSR ON FHIRAPP.IMMUNIZATIONEVALUATION_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_IMMUNIZATIONEVALUATION_QUANTITY_VALUES_RPCLHS ON FHIRAPP.IMMUNIZATIONEVALUATION_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_IMMUNIZATIONEVALUATION_QUANTITY_VALUES_RPS ON FHIRAPP.IMMUNIZATIONEVALUATION_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_IMMUNIZATIONEVALUATION_QUANTITY_VALUES_PNNV ON FHIRAPP.IMMUNIZATIONEVALUATION_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_IMMUNIZATIONEVALUATION_QUANTITY_VALUES_PCHLSR ON FHIRAPP.IMMUNIZATIONEVALUATION_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.IMMUNIZATIONEVALUATION_QUANTITY_VALUES ADD CONSTRAINT FK_IMMUNIZATIONEVALUATION_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.IMMUNIZATIONEVALUATION_QUANTITY_VALUES ADD CONSTRAINT FK_IMMUNIZATIONEVALUATION_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.IMMUNIZATIONEVALUATION_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.IMMUNIZATIONEVALUATION_QUANTITY_VALUES_TENANT                      ON FHIRAPP.IMMUNIZATIONEVALUATION_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.IMMUNIZATIONEVALUATION_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.IMMUNIZATIONEVALUATION_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.DEVICEUSESTATEMENT_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT DEVICEUSESTATEMENT_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.DEVICEUSESTATEMENT_LOGICAL_RESOURCES ADD CONSTRAINT FK_DEVICEUSESTATEMENT_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.DEVICEUSESTATEMENT_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.DEVICEUSESTATEMENT_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.DEVICEUSESTATEMENT_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.DEVICEUSESTATEMENT_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.DEVICEUSESTATEMENT_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT DEVICEUSESTATEMENT_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.DEVICEUSESTATEMENT_RESOURCES_PRF_IN1 ON FHIRAPP.DEVICEUSESTATEMENT_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.DEVICEUSESTATEMENT_RESOURCES_TENANT                      ON FHIRAPP.DEVICEUSESTATEMENT_RESOURCES          FOR ROWS WHERE FHIRAPP.DEVICEUSESTATEMENT_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.DEVICEUSESTATEMENT_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.DEVICEUSESTATEMENT_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_DEVICEUSESTATEMENT_STR_VALUES_PSR ON FHIRAPP.DEVICEUSESTATEMENT_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_DEVICEUSESTATEMENT_STR_VALUES_RPL ON FHIRAPP.DEVICEUSESTATEMENT_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

CREATE INDEX FHIRAPP.IDX_DEVICEUSESTATEMENT_STR_VALUES_RPS ON FHIRAPP.DEVICEUSESTATEMENT_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

CREATE INDEX FHIRAPP.IDX_DEVICEUSESTATEMENT_STR_VALUES_PLR ON FHIRAPP.DEVICEUSESTATEMENT_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.DEVICEUSESTATEMENT_STR_VALUES ADD CONSTRAINT FK_DEVICEUSESTATEMENT_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.DEVICEUSESTATEMENT_STR_VALUES ADD CONSTRAINT FK_DEVICEUSESTATEMENT_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.DEVICEUSESTATEMENT_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.DEVICEUSESTATEMENT_STR_VALUES_TENANT                      ON FHIRAPP.DEVICEUSESTATEMENT_STR_VALUES          FOR ROWS WHERE FHIRAPP.DEVICEUSESTATEMENT_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.DEVICEUSESTATEMENT_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.DEVICEUSESTATEMENT_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_DEVICEUSESTATEMENT_TOKEN_VALUES_PNCSCV ON FHIRAPP.DEVICEUSESTATEMENT_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_DEVICEUSESTATEMENT_TOKEN_VALUES_RPS ON FHIRAPP.DEVICEUSESTATEMENT_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

ALTER TABLE FHIRAPP.DEVICEUSESTATEMENT_TOKEN_VALUES ADD CONSTRAINT FK_DEVICEUSESTATEMENT_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.DEVICEUSESTATEMENT_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.DEVICEUSESTATEMENT_TOKEN_VALUES ADD CONSTRAINT FK_DEVICEUSESTATEMENT_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

ALTER TABLE FHIRAPP.DEVICEUSESTATEMENT_TOKEN_VALUES ADD CONSTRAINT FK_DEVICEUSESTATEMENT_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.DEVICEUSESTATEMENT_TOKEN_VALUES_TENANT                      ON FHIRAPP.DEVICEUSESTATEMENT_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.DEVICEUSESTATEMENT_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.DEVICEUSESTATEMENT_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.DEVICEUSESTATEMENT_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_DEVICEUSESTATEMENT_DATE_VALUES_RPSE ON FHIRAPP.DEVICEUSESTATEMENT_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

CREATE INDEX FHIRAPP.IDX_DEVICEUSESTATEMENT_DATE_VALUES_PSER ON FHIRAPP.DEVICEUSESTATEMENT_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_DEVICEUSESTATEMENT_DATE_VALUES_RPV ON FHIRAPP.DEVICEUSESTATEMENT_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

CREATE INDEX FHIRAPP.IDX_DEVICEUSESTATEMENT_DATE_VALUES_PESR ON FHIRAPP.DEVICEUSESTATEMENT_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_DEVICEUSESTATEMENT_DATE_VALUES_PVR ON FHIRAPP.DEVICEUSESTATEMENT_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.DEVICEUSESTATEMENT_DATE_VALUES ADD CONSTRAINT FK_DEVICEUSESTATEMENT_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.DEVICEUSESTATEMENT_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.DEVICEUSESTATEMENT_DATE_VALUES ADD CONSTRAINT FK_DEVICEUSESTATEMENT_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.DEVICEUSESTATEMENT_DATE_VALUES_TENANT                      ON FHIRAPP.DEVICEUSESTATEMENT_DATE_VALUES          FOR ROWS WHERE FHIRAPP.DEVICEUSESTATEMENT_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.DEVICEUSESTATEMENT_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.DEVICEUSESTATEMENT_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_DEVICEUSESTATEMENT_NUMBER_VALUES_PNNV ON FHIRAPP.DEVICEUSESTATEMENT_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_DEVICEUSESTATEMENT_NUMBER_VALUES_RPS ON FHIRAPP.DEVICEUSESTATEMENT_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

ALTER TABLE FHIRAPP.DEVICEUSESTATEMENT_NUMBER_VALUES ADD CONSTRAINT FK_DEVICEUSESTATEMENT_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.DEVICEUSESTATEMENT_NUMBER_VALUES ADD CONSTRAINT FK_DEVICEUSESTATEMENT_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.DEVICEUSESTATEMENT_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.DEVICEUSESTATEMENT_NUMBER_VALUES_TENANT                      ON FHIRAPP.DEVICEUSESTATEMENT_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.DEVICEUSESTATEMENT_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.DEVICEUSESTATEMENT_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.DEVICEUSESTATEMENT_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_DEVICEUSESTATEMENT_LATLNG_VALUES_PNNHV ON FHIRAPP.DEVICEUSESTATEMENT_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_DEVICEUSESTATEMENT_LATLNG_VALUES_RPLAT ON FHIRAPP.DEVICEUSESTATEMENT_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_DEVICEUSESTATEMENT_LATLNG_VALUES_PNNLV ON FHIRAPP.DEVICEUSESTATEMENT_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_DEVICEUSESTATEMENT_LATLNG_VALUES_RPLNG ON FHIRAPP.DEVICEUSESTATEMENT_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

ALTER TABLE FHIRAPP.DEVICEUSESTATEMENT_LATLNG_VALUES ADD CONSTRAINT FK_DEVICEUSESTATEMENT_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.DEVICEUSESTATEMENT_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.DEVICEUSESTATEMENT_LATLNG_VALUES ADD CONSTRAINT FK_DEVICEUSESTATEMENT_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.DEVICEUSESTATEMENT_LATLNG_VALUES_TENANT                      ON FHIRAPP.DEVICEUSESTATEMENT_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.DEVICEUSESTATEMENT_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.DEVICEUSESTATEMENT_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.DEVICEUSESTATEMENT_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_DEVICEUSESTATEMENT_QUANTITY_VALUES_RPS ON FHIRAPP.DEVICEUSESTATEMENT_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_DEVICEUSESTATEMENT_QUANTITY_VALUES_PCHLSR ON FHIRAPP.DEVICEUSESTATEMENT_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_DEVICEUSESTATEMENT_QUANTITY_VALUES_PNNV ON FHIRAPP.DEVICEUSESTATEMENT_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_DEVICEUSESTATEMENT_QUANTITY_VALUES_PCLHSR ON FHIRAPP.DEVICEUSESTATEMENT_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_DEVICEUSESTATEMENT_QUANTITY_VALUES_RPCLHS ON FHIRAPP.DEVICEUSESTATEMENT_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_DEVICEUSESTATEMENT_QUANTITY_VALUES_RPCHLS ON FHIRAPP.DEVICEUSESTATEMENT_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

ALTER TABLE FHIRAPP.DEVICEUSESTATEMENT_QUANTITY_VALUES ADD CONSTRAINT FK_DEVICEUSESTATEMENT_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.DEVICEUSESTATEMENT_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.DEVICEUSESTATEMENT_QUANTITY_VALUES ADD CONSTRAINT FK_DEVICEUSESTATEMENT_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.DEVICEUSESTATEMENT_QUANTITY_VALUES_TENANT                      ON FHIRAPP.DEVICEUSESTATEMENT_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.DEVICEUSESTATEMENT_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.DEVICEUSESTATEMENT_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.REQUESTGROUP_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT REQUESTGROUP_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.REQUESTGROUP_LOGICAL_RESOURCES ADD CONSTRAINT FK_REQUESTGROUP_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.REQUESTGROUP_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.REQUESTGROUP_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.REQUESTGROUP_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.REQUESTGROUP_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.REQUESTGROUP_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT REQUESTGROUP_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.REQUESTGROUP_RESOURCES_PRF_IN1 ON FHIRAPP.REQUESTGROUP_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.REQUESTGROUP_RESOURCES_TENANT                      ON FHIRAPP.REQUESTGROUP_RESOURCES          FOR ROWS WHERE FHIRAPP.REQUESTGROUP_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.REQUESTGROUP_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.REQUESTGROUP_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_REQUESTGROUP_STR_VALUES_PSR ON FHIRAPP.REQUESTGROUP_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_REQUESTGROUP_STR_VALUES_RPL ON FHIRAPP.REQUESTGROUP_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

CREATE INDEX FHIRAPP.IDX_REQUESTGROUP_STR_VALUES_RPS ON FHIRAPP.REQUESTGROUP_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

CREATE INDEX FHIRAPP.IDX_REQUESTGROUP_STR_VALUES_PLR ON FHIRAPP.REQUESTGROUP_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.REQUESTGROUP_STR_VALUES ADD CONSTRAINT FK_REQUESTGROUP_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.REQUESTGROUP_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.REQUESTGROUP_STR_VALUES ADD CONSTRAINT FK_REQUESTGROUP_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.REQUESTGROUP_STR_VALUES_TENANT                      ON FHIRAPP.REQUESTGROUP_STR_VALUES          FOR ROWS WHERE FHIRAPP.REQUESTGROUP_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.REQUESTGROUP_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.REQUESTGROUP_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_REQUESTGROUP_TOKEN_VALUES_RPS ON FHIRAPP.REQUESTGROUP_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

CREATE INDEX FHIRAPP.IDX_REQUESTGROUP_TOKEN_VALUES_PNCSCV ON FHIRAPP.REQUESTGROUP_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.REQUESTGROUP_TOKEN_VALUES ADD CONSTRAINT FK_REQUESTGROUP_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

ALTER TABLE FHIRAPP.REQUESTGROUP_TOKEN_VALUES ADD CONSTRAINT FK_REQUESTGROUP_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.REQUESTGROUP_TOKEN_VALUES ADD CONSTRAINT FK_REQUESTGROUP_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.REQUESTGROUP_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.REQUESTGROUP_TOKEN_VALUES_TENANT                      ON FHIRAPP.REQUESTGROUP_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.REQUESTGROUP_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.REQUESTGROUP_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.REQUESTGROUP_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_REQUESTGROUP_DATE_VALUES_RPSE ON FHIRAPP.REQUESTGROUP_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

CREATE INDEX FHIRAPP.IDX_REQUESTGROUP_DATE_VALUES_RPV ON FHIRAPP.REQUESTGROUP_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

CREATE INDEX FHIRAPP.IDX_REQUESTGROUP_DATE_VALUES_PESR ON FHIRAPP.REQUESTGROUP_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_REQUESTGROUP_DATE_VALUES_PSER ON FHIRAPP.REQUESTGROUP_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_REQUESTGROUP_DATE_VALUES_PVR ON FHIRAPP.REQUESTGROUP_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.REQUESTGROUP_DATE_VALUES ADD CONSTRAINT FK_REQUESTGROUP_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.REQUESTGROUP_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.REQUESTGROUP_DATE_VALUES ADD CONSTRAINT FK_REQUESTGROUP_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.REQUESTGROUP_DATE_VALUES_TENANT                      ON FHIRAPP.REQUESTGROUP_DATE_VALUES          FOR ROWS WHERE FHIRAPP.REQUESTGROUP_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.REQUESTGROUP_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.REQUESTGROUP_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_REQUESTGROUP_NUMBER_VALUES_RPS ON FHIRAPP.REQUESTGROUP_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

CREATE INDEX FHIRAPP.IDX_REQUESTGROUP_NUMBER_VALUES_PNNV ON FHIRAPP.REQUESTGROUP_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.REQUESTGROUP_NUMBER_VALUES ADD CONSTRAINT FK_REQUESTGROUP_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.REQUESTGROUP_NUMBER_VALUES ADD CONSTRAINT FK_REQUESTGROUP_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.REQUESTGROUP_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.REQUESTGROUP_NUMBER_VALUES_TENANT                      ON FHIRAPP.REQUESTGROUP_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.REQUESTGROUP_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.REQUESTGROUP_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.REQUESTGROUP_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_REQUESTGROUP_LATLNG_VALUES_PNNHV ON FHIRAPP.REQUESTGROUP_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_REQUESTGROUP_LATLNG_VALUES_PNNLV ON FHIRAPP.REQUESTGROUP_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_REQUESTGROUP_LATLNG_VALUES_RPLNG ON FHIRAPP.REQUESTGROUP_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_REQUESTGROUP_LATLNG_VALUES_RPLAT ON FHIRAPP.REQUESTGROUP_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

ALTER TABLE FHIRAPP.REQUESTGROUP_LATLNG_VALUES ADD CONSTRAINT FK_REQUESTGROUP_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.REQUESTGROUP_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.REQUESTGROUP_LATLNG_VALUES ADD CONSTRAINT FK_REQUESTGROUP_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.REQUESTGROUP_LATLNG_VALUES_TENANT                      ON FHIRAPP.REQUESTGROUP_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.REQUESTGROUP_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.REQUESTGROUP_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.REQUESTGROUP_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_REQUESTGROUP_QUANTITY_VALUES_PCHLSR ON FHIRAPP.REQUESTGROUP_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_REQUESTGROUP_QUANTITY_VALUES_PCLHSR ON FHIRAPP.REQUESTGROUP_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_REQUESTGROUP_QUANTITY_VALUES_RPCLHS ON FHIRAPP.REQUESTGROUP_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_REQUESTGROUP_QUANTITY_VALUES_PNNV ON FHIRAPP.REQUESTGROUP_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_REQUESTGROUP_QUANTITY_VALUES_RPCHLS ON FHIRAPP.REQUESTGROUP_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_REQUESTGROUP_QUANTITY_VALUES_RPS ON FHIRAPP.REQUESTGROUP_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

ALTER TABLE FHIRAPP.REQUESTGROUP_QUANTITY_VALUES ADD CONSTRAINT FK_REQUESTGROUP_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.REQUESTGROUP_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.REQUESTGROUP_QUANTITY_VALUES ADD CONSTRAINT FK_REQUESTGROUP_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.REQUESTGROUP_QUANTITY_VALUES_TENANT                      ON FHIRAPP.REQUESTGROUP_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.REQUESTGROUP_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.REQUESTGROUP_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.DEVICEREQUEST_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT DEVICEREQUEST_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.DEVICEREQUEST_LOGICAL_RESOURCES ADD CONSTRAINT FK_DEVICEREQUEST_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.DEVICEREQUEST_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.DEVICEREQUEST_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.DEVICEREQUEST_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.DEVICEREQUEST_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.DEVICEREQUEST_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT DEVICEREQUEST_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.DEVICEREQUEST_RESOURCES_PRF_IN1 ON FHIRAPP.DEVICEREQUEST_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.DEVICEREQUEST_RESOURCES_TENANT                      ON FHIRAPP.DEVICEREQUEST_RESOURCES          FOR ROWS WHERE FHIRAPP.DEVICEREQUEST_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.DEVICEREQUEST_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.DEVICEREQUEST_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_DEVICEREQUEST_STR_VALUES_PSR ON FHIRAPP.DEVICEREQUEST_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_DEVICEREQUEST_STR_VALUES_PLR ON FHIRAPP.DEVICEREQUEST_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_DEVICEREQUEST_STR_VALUES_RPS ON FHIRAPP.DEVICEREQUEST_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

CREATE INDEX FHIRAPP.IDX_DEVICEREQUEST_STR_VALUES_RPL ON FHIRAPP.DEVICEREQUEST_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

ALTER TABLE FHIRAPP.DEVICEREQUEST_STR_VALUES ADD CONSTRAINT FK_DEVICEREQUEST_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.DEVICEREQUEST_STR_VALUES ADD CONSTRAINT FK_DEVICEREQUEST_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.DEVICEREQUEST_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.DEVICEREQUEST_STR_VALUES_TENANT                      ON FHIRAPP.DEVICEREQUEST_STR_VALUES          FOR ROWS WHERE FHIRAPP.DEVICEREQUEST_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.DEVICEREQUEST_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.DEVICEREQUEST_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_DEVICEREQUEST_TOKEN_VALUES_PNCSCV ON FHIRAPP.DEVICEREQUEST_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_DEVICEREQUEST_TOKEN_VALUES_RPS ON FHIRAPP.DEVICEREQUEST_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

ALTER TABLE FHIRAPP.DEVICEREQUEST_TOKEN_VALUES ADD CONSTRAINT FK_DEVICEREQUEST_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.DEVICEREQUEST_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.DEVICEREQUEST_TOKEN_VALUES ADD CONSTRAINT FK_DEVICEREQUEST_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.DEVICEREQUEST_TOKEN_VALUES ADD CONSTRAINT FK_DEVICEREQUEST_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

CREATE PERMISSION FHIRAPP.DEVICEREQUEST_TOKEN_VALUES_TENANT                      ON FHIRAPP.DEVICEREQUEST_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.DEVICEREQUEST_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.DEVICEREQUEST_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.DEVICEREQUEST_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_DEVICEREQUEST_DATE_VALUES_PESR ON FHIRAPP.DEVICEREQUEST_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_DEVICEREQUEST_DATE_VALUES_RPV ON FHIRAPP.DEVICEREQUEST_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

CREATE INDEX FHIRAPP.IDX_DEVICEREQUEST_DATE_VALUES_PVR ON FHIRAPP.DEVICEREQUEST_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_DEVICEREQUEST_DATE_VALUES_PSER ON FHIRAPP.DEVICEREQUEST_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_DEVICEREQUEST_DATE_VALUES_RPSE ON FHIRAPP.DEVICEREQUEST_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

ALTER TABLE FHIRAPP.DEVICEREQUEST_DATE_VALUES ADD CONSTRAINT FK_DEVICEREQUEST_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.DEVICEREQUEST_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.DEVICEREQUEST_DATE_VALUES ADD CONSTRAINT FK_DEVICEREQUEST_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.DEVICEREQUEST_DATE_VALUES_TENANT                      ON FHIRAPP.DEVICEREQUEST_DATE_VALUES          FOR ROWS WHERE FHIRAPP.DEVICEREQUEST_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.DEVICEREQUEST_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.DEVICEREQUEST_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_DEVICEREQUEST_NUMBER_VALUES_PNNV ON FHIRAPP.DEVICEREQUEST_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_DEVICEREQUEST_NUMBER_VALUES_RPS ON FHIRAPP.DEVICEREQUEST_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

ALTER TABLE FHIRAPP.DEVICEREQUEST_NUMBER_VALUES ADD CONSTRAINT FK_DEVICEREQUEST_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.DEVICEREQUEST_NUMBER_VALUES ADD CONSTRAINT FK_DEVICEREQUEST_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.DEVICEREQUEST_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.DEVICEREQUEST_NUMBER_VALUES_TENANT                      ON FHIRAPP.DEVICEREQUEST_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.DEVICEREQUEST_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.DEVICEREQUEST_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.DEVICEREQUEST_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_DEVICEREQUEST_LATLNG_VALUES_PNNLV ON FHIRAPP.DEVICEREQUEST_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_DEVICEREQUEST_LATLNG_VALUES_RPLNG ON FHIRAPP.DEVICEREQUEST_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_DEVICEREQUEST_LATLNG_VALUES_RPLAT ON FHIRAPP.DEVICEREQUEST_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_DEVICEREQUEST_LATLNG_VALUES_PNNHV ON FHIRAPP.DEVICEREQUEST_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.DEVICEREQUEST_LATLNG_VALUES ADD CONSTRAINT FK_DEVICEREQUEST_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.DEVICEREQUEST_LATLNG_VALUES ADD CONSTRAINT FK_DEVICEREQUEST_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.DEVICEREQUEST_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.DEVICEREQUEST_LATLNG_VALUES_TENANT                      ON FHIRAPP.DEVICEREQUEST_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.DEVICEREQUEST_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.DEVICEREQUEST_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.DEVICEREQUEST_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_DEVICEREQUEST_QUANTITY_VALUES_PCHLSR ON FHIRAPP.DEVICEREQUEST_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_DEVICEREQUEST_QUANTITY_VALUES_PNNV ON FHIRAPP.DEVICEREQUEST_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_DEVICEREQUEST_QUANTITY_VALUES_RPCLHS ON FHIRAPP.DEVICEREQUEST_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_DEVICEREQUEST_QUANTITY_VALUES_PCLHSR ON FHIRAPP.DEVICEREQUEST_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_DEVICEREQUEST_QUANTITY_VALUES_RPS ON FHIRAPP.DEVICEREQUEST_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_DEVICEREQUEST_QUANTITY_VALUES_RPCHLS ON FHIRAPP.DEVICEREQUEST_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

ALTER TABLE FHIRAPP.DEVICEREQUEST_QUANTITY_VALUES ADD CONSTRAINT FK_DEVICEREQUEST_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.DEVICEREQUEST_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.DEVICEREQUEST_QUANTITY_VALUES ADD CONSTRAINT FK_DEVICEREQUEST_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.DEVICEREQUEST_QUANTITY_VALUES_TENANT                      ON FHIRAPP.DEVICEREQUEST_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.DEVICEREQUEST_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.DEVICEREQUEST_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MESSAGEHEADER_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT MESSAGEHEADER_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.MESSAGEHEADER_LOGICAL_RESOURCES ADD CONSTRAINT FK_MESSAGEHEADER_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.MESSAGEHEADER_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.MESSAGEHEADER_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.MESSAGEHEADER_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MESSAGEHEADER_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MESSAGEHEADER_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT MESSAGEHEADER_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.MESSAGEHEADER_RESOURCES_PRF_IN1 ON FHIRAPP.MESSAGEHEADER_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.MESSAGEHEADER_RESOURCES_TENANT                      ON FHIRAPP.MESSAGEHEADER_RESOURCES          FOR ROWS WHERE FHIRAPP.MESSAGEHEADER_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MESSAGEHEADER_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MESSAGEHEADER_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_MESSAGEHEADER_STR_VALUES_PLR ON FHIRAPP.MESSAGEHEADER_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MESSAGEHEADER_STR_VALUES_RPS ON FHIRAPP.MESSAGEHEADER_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

CREATE INDEX FHIRAPP.IDX_MESSAGEHEADER_STR_VALUES_RPL ON FHIRAPP.MESSAGEHEADER_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

CREATE INDEX FHIRAPP.IDX_MESSAGEHEADER_STR_VALUES_PSR ON FHIRAPP.MESSAGEHEADER_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.MESSAGEHEADER_STR_VALUES ADD CONSTRAINT FK_MESSAGEHEADER_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.MESSAGEHEADER_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.MESSAGEHEADER_STR_VALUES ADD CONSTRAINT FK_MESSAGEHEADER_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.MESSAGEHEADER_STR_VALUES_TENANT                      ON FHIRAPP.MESSAGEHEADER_STR_VALUES          FOR ROWS WHERE FHIRAPP.MESSAGEHEADER_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MESSAGEHEADER_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MESSAGEHEADER_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_MESSAGEHEADER_TOKEN_VALUES_RPS ON FHIRAPP.MESSAGEHEADER_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

CREATE INDEX FHIRAPP.IDX_MESSAGEHEADER_TOKEN_VALUES_PNCSCV ON FHIRAPP.MESSAGEHEADER_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.MESSAGEHEADER_TOKEN_VALUES ADD CONSTRAINT FK_MESSAGEHEADER_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.MESSAGEHEADER_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.MESSAGEHEADER_TOKEN_VALUES ADD CONSTRAINT FK_MESSAGEHEADER_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.MESSAGEHEADER_TOKEN_VALUES ADD CONSTRAINT FK_MESSAGEHEADER_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

CREATE PERMISSION FHIRAPP.MESSAGEHEADER_TOKEN_VALUES_TENANT                      ON FHIRAPP.MESSAGEHEADER_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.MESSAGEHEADER_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MESSAGEHEADER_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MESSAGEHEADER_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_MESSAGEHEADER_DATE_VALUES_PVR ON FHIRAPP.MESSAGEHEADER_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MESSAGEHEADER_DATE_VALUES_PSER ON FHIRAPP.MESSAGEHEADER_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MESSAGEHEADER_DATE_VALUES_RPV ON FHIRAPP.MESSAGEHEADER_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

CREATE INDEX FHIRAPP.IDX_MESSAGEHEADER_DATE_VALUES_RPSE ON FHIRAPP.MESSAGEHEADER_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

CREATE INDEX FHIRAPP.IDX_MESSAGEHEADER_DATE_VALUES_PESR ON FHIRAPP.MESSAGEHEADER_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.MESSAGEHEADER_DATE_VALUES ADD CONSTRAINT FK_MESSAGEHEADER_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.MESSAGEHEADER_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.MESSAGEHEADER_DATE_VALUES ADD CONSTRAINT FK_MESSAGEHEADER_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.MESSAGEHEADER_DATE_VALUES_TENANT                      ON FHIRAPP.MESSAGEHEADER_DATE_VALUES          FOR ROWS WHERE FHIRAPP.MESSAGEHEADER_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MESSAGEHEADER_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MESSAGEHEADER_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_MESSAGEHEADER_NUMBER_VALUES_PNNV ON FHIRAPP.MESSAGEHEADER_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MESSAGEHEADER_NUMBER_VALUES_RPS ON FHIRAPP.MESSAGEHEADER_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

ALTER TABLE FHIRAPP.MESSAGEHEADER_NUMBER_VALUES ADD CONSTRAINT FK_MESSAGEHEADER_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.MESSAGEHEADER_NUMBER_VALUES ADD CONSTRAINT FK_MESSAGEHEADER_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.MESSAGEHEADER_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.MESSAGEHEADER_NUMBER_VALUES_TENANT                      ON FHIRAPP.MESSAGEHEADER_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.MESSAGEHEADER_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MESSAGEHEADER_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MESSAGEHEADER_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_MESSAGEHEADER_LATLNG_VALUES_PNNLV ON FHIRAPP.MESSAGEHEADER_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MESSAGEHEADER_LATLNG_VALUES_RPLNG ON FHIRAPP.MESSAGEHEADER_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_MESSAGEHEADER_LATLNG_VALUES_PNNHV ON FHIRAPP.MESSAGEHEADER_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MESSAGEHEADER_LATLNG_VALUES_RPLAT ON FHIRAPP.MESSAGEHEADER_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

ALTER TABLE FHIRAPP.MESSAGEHEADER_LATLNG_VALUES ADD CONSTRAINT FK_MESSAGEHEADER_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.MESSAGEHEADER_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.MESSAGEHEADER_LATLNG_VALUES ADD CONSTRAINT FK_MESSAGEHEADER_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.MESSAGEHEADER_LATLNG_VALUES_TENANT                      ON FHIRAPP.MESSAGEHEADER_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.MESSAGEHEADER_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MESSAGEHEADER_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MESSAGEHEADER_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_MESSAGEHEADER_QUANTITY_VALUES_PNNV ON FHIRAPP.MESSAGEHEADER_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_MESSAGEHEADER_QUANTITY_VALUES_RPCHLS ON FHIRAPP.MESSAGEHEADER_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_MESSAGEHEADER_QUANTITY_VALUES_PCHLSR ON FHIRAPP.MESSAGEHEADER_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MESSAGEHEADER_QUANTITY_VALUES_PCLHSR ON FHIRAPP.MESSAGEHEADER_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MESSAGEHEADER_QUANTITY_VALUES_RPS ON FHIRAPP.MESSAGEHEADER_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_MESSAGEHEADER_QUANTITY_VALUES_RPCLHS ON FHIRAPP.MESSAGEHEADER_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

ALTER TABLE FHIRAPP.MESSAGEHEADER_QUANTITY_VALUES ADD CONSTRAINT FK_MESSAGEHEADER_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.MESSAGEHEADER_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.MESSAGEHEADER_QUANTITY_VALUES ADD CONSTRAINT FK_MESSAGEHEADER_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.MESSAGEHEADER_QUANTITY_VALUES_TENANT                      ON FHIRAPP.MESSAGEHEADER_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.MESSAGEHEADER_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MESSAGEHEADER_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.IMMUNIZATIONRECOMMENDATION_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT IMMUNIZATIONRECOMMENDATION_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.IMMUNIZATIONRECOMMENDATION_LOGICAL_RESOURCES ADD CONSTRAINT FK_IMMUNIZATIONRECOMMENDATION_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.IMMUNIZATIONRECOMMENDATION_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.IMMUNIZATIONRECOMMENDATION_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.IMMUNIZATIONRECOMMENDATION_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.IMMUNIZATIONRECOMMENDATION_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.IMMUNIZATIONRECOMMENDATION_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT IMMUNIZATIONRECOMMENDATION_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.IMMUNIZATIONRECOMMENDATION_RESOURCES_PRF_IN1 ON FHIRAPP.IMMUNIZATIONRECOMMENDATION_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.IMMUNIZATIONRECOMMENDATION_RESOURCES_TENANT                      ON FHIRAPP.IMMUNIZATIONRECOMMENDATION_RESOURCES          FOR ROWS WHERE FHIRAPP.IMMUNIZATIONRECOMMENDATION_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.IMMUNIZATIONRECOMMENDATION_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.IMMUNIZATIONRECOMMENDATION_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_IMMUNIZATIONRECOMMENDATION_STR_VALUES_PSR ON FHIRAPP.IMMUNIZATIONRECOMMENDATION_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_IMMUNIZATIONRECOMMENDATION_STR_VALUES_RPL ON FHIRAPP.IMMUNIZATIONRECOMMENDATION_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

CREATE INDEX FHIRAPP.IDX_IMMUNIZATIONRECOMMENDATION_STR_VALUES_PLR ON FHIRAPP.IMMUNIZATIONRECOMMENDATION_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_IMMUNIZATIONRECOMMENDATION_STR_VALUES_RPS ON FHIRAPP.IMMUNIZATIONRECOMMENDATION_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

ALTER TABLE FHIRAPP.IMMUNIZATIONRECOMMENDATION_STR_VALUES ADD CONSTRAINT FK_IMMUNIZATIONRECOMMENDATION_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.IMMUNIZATIONRECOMMENDATION_STR_VALUES ADD CONSTRAINT FK_IMMUNIZATIONRECOMMENDATION_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.IMMUNIZATIONRECOMMENDATION_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.IMMUNIZATIONRECOMMENDATION_STR_VALUES_TENANT                      ON FHIRAPP.IMMUNIZATIONRECOMMENDATION_STR_VALUES          FOR ROWS WHERE FHIRAPP.IMMUNIZATIONRECOMMENDATION_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.IMMUNIZATIONRECOMMENDATION_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.IMMUNIZATIONRECOMMENDATION_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_IMMUNIZATIONRECOMMENDATION_TOKEN_VALUES_RPS ON FHIRAPP.IMMUNIZATIONRECOMMENDATION_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

CREATE INDEX FHIRAPP.IDX_IMMUNIZATIONRECOMMENDATION_TOKEN_VALUES_PNCSCV ON FHIRAPP.IMMUNIZATIONRECOMMENDATION_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.IMMUNIZATIONRECOMMENDATION_TOKEN_VALUES ADD CONSTRAINT FK_IMMUNIZATIONRECOMMENDATION_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.IMMUNIZATIONRECOMMENDATION_TOKEN_VALUES ADD CONSTRAINT FK_IMMUNIZATIONRECOMMENDATION_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

ALTER TABLE FHIRAPP.IMMUNIZATIONRECOMMENDATION_TOKEN_VALUES ADD CONSTRAINT FK_IMMUNIZATIONRECOMMENDATION_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.IMMUNIZATIONRECOMMENDATION_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.IMMUNIZATIONRECOMMENDATION_TOKEN_VALUES_TENANT                      ON FHIRAPP.IMMUNIZATIONRECOMMENDATION_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.IMMUNIZATIONRECOMMENDATION_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.IMMUNIZATIONRECOMMENDATION_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.IMMUNIZATIONRECOMMENDATION_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_IMMUNIZATIONRECOMMENDATION_DATE_VALUES_RPV ON FHIRAPP.IMMUNIZATIONRECOMMENDATION_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

CREATE INDEX FHIRAPP.IDX_IMMUNIZATIONRECOMMENDATION_DATE_VALUES_PSER ON FHIRAPP.IMMUNIZATIONRECOMMENDATION_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_IMMUNIZATIONRECOMMENDATION_DATE_VALUES_PVR ON FHIRAPP.IMMUNIZATIONRECOMMENDATION_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_IMMUNIZATIONRECOMMENDATION_DATE_VALUES_RPSE ON FHIRAPP.IMMUNIZATIONRECOMMENDATION_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

CREATE INDEX FHIRAPP.IDX_IMMUNIZATIONRECOMMENDATION_DATE_VALUES_PESR ON FHIRAPP.IMMUNIZATIONRECOMMENDATION_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.IMMUNIZATIONRECOMMENDATION_DATE_VALUES ADD CONSTRAINT FK_IMMUNIZATIONRECOMMENDATION_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.IMMUNIZATIONRECOMMENDATION_DATE_VALUES ADD CONSTRAINT FK_IMMUNIZATIONRECOMMENDATION_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.IMMUNIZATIONRECOMMENDATION_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.IMMUNIZATIONRECOMMENDATION_DATE_VALUES_TENANT                      ON FHIRAPP.IMMUNIZATIONRECOMMENDATION_DATE_VALUES          FOR ROWS WHERE FHIRAPP.IMMUNIZATIONRECOMMENDATION_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.IMMUNIZATIONRECOMMENDATION_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.IMMUNIZATIONRECOMMENDATION_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_IMMUNIZATIONRECOMMENDATION_NUMBER_VALUES_PNNV ON FHIRAPP.IMMUNIZATIONRECOMMENDATION_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_IMMUNIZATIONRECOMMENDATION_NUMBER_VALUES_RPS ON FHIRAPP.IMMUNIZATIONRECOMMENDATION_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

ALTER TABLE FHIRAPP.IMMUNIZATIONRECOMMENDATION_NUMBER_VALUES ADD CONSTRAINT FK_IMMUNIZATIONRECOMMENDATION_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.IMMUNIZATIONRECOMMENDATION_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.IMMUNIZATIONRECOMMENDATION_NUMBER_VALUES ADD CONSTRAINT FK_IMMUNIZATIONRECOMMENDATION_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.IMMUNIZATIONRECOMMENDATION_NUMBER_VALUES_TENANT                      ON FHIRAPP.IMMUNIZATIONRECOMMENDATION_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.IMMUNIZATIONRECOMMENDATION_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.IMMUNIZATIONRECOMMENDATION_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.IMMUNIZATIONRECOMMENDATION_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_IMMUNIZATIONRECOMMENDATION_LATLNG_VALUES_PNNLV ON FHIRAPP.IMMUNIZATIONRECOMMENDATION_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_IMMUNIZATIONRECOMMENDATION_LATLNG_VALUES_RPLNG ON FHIRAPP.IMMUNIZATIONRECOMMENDATION_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_IMMUNIZATIONRECOMMENDATION_LATLNG_VALUES_RPLAT ON FHIRAPP.IMMUNIZATIONRECOMMENDATION_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_IMMUNIZATIONRECOMMENDATION_LATLNG_VALUES_PNNHV ON FHIRAPP.IMMUNIZATIONRECOMMENDATION_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.IMMUNIZATIONRECOMMENDATION_LATLNG_VALUES ADD CONSTRAINT FK_IMMUNIZATIONRECOMMENDATION_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.IMMUNIZATIONRECOMMENDATION_LATLNG_VALUES ADD CONSTRAINT FK_IMMUNIZATIONRECOMMENDATION_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.IMMUNIZATIONRECOMMENDATION_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.IMMUNIZATIONRECOMMENDATION_LATLNG_VALUES_TENANT                      ON FHIRAPP.IMMUNIZATIONRECOMMENDATION_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.IMMUNIZATIONRECOMMENDATION_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.IMMUNIZATIONRECOMMENDATION_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.IMMUNIZATIONRECOMMENDATION_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_IMMUNIZATIONRECOMMENDATION_QUANTITY_VALUES_PCLHSR ON FHIRAPP.IMMUNIZATIONRECOMMENDATION_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_IMMUNIZATIONRECOMMENDATION_QUANTITY_VALUES_PNNV ON FHIRAPP.IMMUNIZATIONRECOMMENDATION_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_IMMUNIZATIONRECOMMENDATION_QUANTITY_VALUES_RPCLHS ON FHIRAPP.IMMUNIZATIONRECOMMENDATION_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_IMMUNIZATIONRECOMMENDATION_QUANTITY_VALUES_PCHLSR ON FHIRAPP.IMMUNIZATIONRECOMMENDATION_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_IMMUNIZATIONRECOMMENDATION_QUANTITY_VALUES_RPS ON FHIRAPP.IMMUNIZATIONRECOMMENDATION_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_IMMUNIZATIONRECOMMENDATION_QUANTITY_VALUES_RPCHLS ON FHIRAPP.IMMUNIZATIONRECOMMENDATION_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

ALTER TABLE FHIRAPP.IMMUNIZATIONRECOMMENDATION_QUANTITY_VALUES ADD CONSTRAINT FK_IMMUNIZATIONRECOMMENDATION_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.IMMUNIZATIONRECOMMENDATION_QUANTITY_VALUES ADD CONSTRAINT FK_IMMUNIZATIONRECOMMENDATION_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.IMMUNIZATIONRECOMMENDATION_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.IMMUNIZATIONRECOMMENDATION_QUANTITY_VALUES_TENANT                      ON FHIRAPP.IMMUNIZATIONRECOMMENDATION_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.IMMUNIZATIONRECOMMENDATION_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.IMMUNIZATIONRECOMMENDATION_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.PROVENANCE_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT PROVENANCE_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.PROVENANCE_LOGICAL_RESOURCES ADD CONSTRAINT FK_PROVENANCE_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.PROVENANCE_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.PROVENANCE_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.PROVENANCE_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.PROVENANCE_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.PROVENANCE_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT PROVENANCE_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.PROVENANCE_RESOURCES_PRF_IN1 ON FHIRAPP.PROVENANCE_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.PROVENANCE_RESOURCES_TENANT                      ON FHIRAPP.PROVENANCE_RESOURCES          FOR ROWS WHERE FHIRAPP.PROVENANCE_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.PROVENANCE_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.PROVENANCE_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_PROVENANCE_STR_VALUES_PLR ON FHIRAPP.PROVENANCE_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_PROVENANCE_STR_VALUES_RPS ON FHIRAPP.PROVENANCE_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

CREATE INDEX FHIRAPP.IDX_PROVENANCE_STR_VALUES_PSR ON FHIRAPP.PROVENANCE_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_PROVENANCE_STR_VALUES_RPL ON FHIRAPP.PROVENANCE_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

ALTER TABLE FHIRAPP.PROVENANCE_STR_VALUES ADD CONSTRAINT FK_PROVENANCE_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.PROVENANCE_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.PROVENANCE_STR_VALUES ADD CONSTRAINT FK_PROVENANCE_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.PROVENANCE_STR_VALUES_TENANT                      ON FHIRAPP.PROVENANCE_STR_VALUES          FOR ROWS WHERE FHIRAPP.PROVENANCE_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.PROVENANCE_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.PROVENANCE_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_PROVENANCE_TOKEN_VALUES_RPS ON FHIRAPP.PROVENANCE_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

CREATE INDEX FHIRAPP.IDX_PROVENANCE_TOKEN_VALUES_PNCSCV ON FHIRAPP.PROVENANCE_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.PROVENANCE_TOKEN_VALUES ADD CONSTRAINT FK_PROVENANCE_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.PROVENANCE_TOKEN_VALUES ADD CONSTRAINT FK_PROVENANCE_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.PROVENANCE_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.PROVENANCE_TOKEN_VALUES ADD CONSTRAINT FK_PROVENANCE_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

CREATE PERMISSION FHIRAPP.PROVENANCE_TOKEN_VALUES_TENANT                      ON FHIRAPP.PROVENANCE_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.PROVENANCE_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.PROVENANCE_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.PROVENANCE_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_PROVENANCE_DATE_VALUES_PVR ON FHIRAPP.PROVENANCE_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_PROVENANCE_DATE_VALUES_RPV ON FHIRAPP.PROVENANCE_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

CREATE INDEX FHIRAPP.IDX_PROVENANCE_DATE_VALUES_PSER ON FHIRAPP.PROVENANCE_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_PROVENANCE_DATE_VALUES_RPSE ON FHIRAPP.PROVENANCE_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

CREATE INDEX FHIRAPP.IDX_PROVENANCE_DATE_VALUES_PESR ON FHIRAPP.PROVENANCE_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.PROVENANCE_DATE_VALUES ADD CONSTRAINT FK_PROVENANCE_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.PROVENANCE_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.PROVENANCE_DATE_VALUES ADD CONSTRAINT FK_PROVENANCE_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.PROVENANCE_DATE_VALUES_TENANT                      ON FHIRAPP.PROVENANCE_DATE_VALUES          FOR ROWS WHERE FHIRAPP.PROVENANCE_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.PROVENANCE_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.PROVENANCE_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_PROVENANCE_NUMBER_VALUES_PNNV ON FHIRAPP.PROVENANCE_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_PROVENANCE_NUMBER_VALUES_RPS ON FHIRAPP.PROVENANCE_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

ALTER TABLE FHIRAPP.PROVENANCE_NUMBER_VALUES ADD CONSTRAINT FK_PROVENANCE_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.PROVENANCE_NUMBER_VALUES ADD CONSTRAINT FK_PROVENANCE_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.PROVENANCE_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.PROVENANCE_NUMBER_VALUES_TENANT                      ON FHIRAPP.PROVENANCE_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.PROVENANCE_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.PROVENANCE_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.PROVENANCE_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_PROVENANCE_LATLNG_VALUES_PNNHV ON FHIRAPP.PROVENANCE_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_PROVENANCE_LATLNG_VALUES_PNNLV ON FHIRAPP.PROVENANCE_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_PROVENANCE_LATLNG_VALUES_RPLNG ON FHIRAPP.PROVENANCE_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_PROVENANCE_LATLNG_VALUES_RPLAT ON FHIRAPP.PROVENANCE_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

ALTER TABLE FHIRAPP.PROVENANCE_LATLNG_VALUES ADD CONSTRAINT FK_PROVENANCE_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.PROVENANCE_LATLNG_VALUES ADD CONSTRAINT FK_PROVENANCE_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.PROVENANCE_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.PROVENANCE_LATLNG_VALUES_TENANT                      ON FHIRAPP.PROVENANCE_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.PROVENANCE_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.PROVENANCE_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.PROVENANCE_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_PROVENANCE_QUANTITY_VALUES_RPS ON FHIRAPP.PROVENANCE_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_PROVENANCE_QUANTITY_VALUES_PCLHSR ON FHIRAPP.PROVENANCE_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_PROVENANCE_QUANTITY_VALUES_RPCHLS ON FHIRAPP.PROVENANCE_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_PROVENANCE_QUANTITY_VALUES_RPCLHS ON FHIRAPP.PROVENANCE_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_PROVENANCE_QUANTITY_VALUES_PCHLSR ON FHIRAPP.PROVENANCE_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_PROVENANCE_QUANTITY_VALUES_PNNV ON FHIRAPP.PROVENANCE_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

ALTER TABLE FHIRAPP.PROVENANCE_QUANTITY_VALUES ADD CONSTRAINT FK_PROVENANCE_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.PROVENANCE_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.PROVENANCE_QUANTITY_VALUES ADD CONSTRAINT FK_PROVENANCE_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.PROVENANCE_QUANTITY_VALUES_TENANT                      ON FHIRAPP.PROVENANCE_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.PROVENANCE_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.PROVENANCE_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.TASK_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT TASK_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.TASK_LOGICAL_RESOURCES ADD CONSTRAINT FK_TASK_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.TASK_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.TASK_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.TASK_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.TASK_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.TASK_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT TASK_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.TASK_RESOURCES_PRF_IN1 ON FHIRAPP.TASK_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.TASK_RESOURCES_TENANT                      ON FHIRAPP.TASK_RESOURCES          FOR ROWS WHERE FHIRAPP.TASK_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.TASK_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.TASK_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_TASK_STR_VALUES_PSR ON FHIRAPP.TASK_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_TASK_STR_VALUES_RPS ON FHIRAPP.TASK_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

CREATE INDEX FHIRAPP.IDX_TASK_STR_VALUES_PLR ON FHIRAPP.TASK_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_TASK_STR_VALUES_RPL ON FHIRAPP.TASK_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

ALTER TABLE FHIRAPP.TASK_STR_VALUES ADD CONSTRAINT FK_TASK_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.TASK_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.TASK_STR_VALUES ADD CONSTRAINT FK_TASK_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.TASK_STR_VALUES_TENANT                      ON FHIRAPP.TASK_STR_VALUES          FOR ROWS WHERE FHIRAPP.TASK_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.TASK_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.TASK_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_TASK_TOKEN_VALUES_PNCSCV ON FHIRAPP.TASK_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_TASK_TOKEN_VALUES_RPS ON FHIRAPP.TASK_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

ALTER TABLE FHIRAPP.TASK_TOKEN_VALUES ADD CONSTRAINT FK_TASK_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

ALTER TABLE FHIRAPP.TASK_TOKEN_VALUES ADD CONSTRAINT FK_TASK_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.TASK_TOKEN_VALUES ADD CONSTRAINT FK_TASK_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.TASK_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.TASK_TOKEN_VALUES_TENANT                      ON FHIRAPP.TASK_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.TASK_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.TASK_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.TASK_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_TASK_DATE_VALUES_PSER ON FHIRAPP.TASK_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_TASK_DATE_VALUES_RPSE ON FHIRAPP.TASK_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

CREATE INDEX FHIRAPP.IDX_TASK_DATE_VALUES_RPV ON FHIRAPP.TASK_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

CREATE INDEX FHIRAPP.IDX_TASK_DATE_VALUES_PESR ON FHIRAPP.TASK_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_TASK_DATE_VALUES_PVR ON FHIRAPP.TASK_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.TASK_DATE_VALUES ADD CONSTRAINT FK_TASK_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.TASK_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.TASK_DATE_VALUES ADD CONSTRAINT FK_TASK_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.TASK_DATE_VALUES_TENANT                      ON FHIRAPP.TASK_DATE_VALUES          FOR ROWS WHERE FHIRAPP.TASK_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.TASK_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.TASK_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_TASK_NUMBER_VALUES_RPS ON FHIRAPP.TASK_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

CREATE INDEX FHIRAPP.IDX_TASK_NUMBER_VALUES_PNNV ON FHIRAPP.TASK_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.TASK_NUMBER_VALUES ADD CONSTRAINT FK_TASK_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.TASK_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.TASK_NUMBER_VALUES ADD CONSTRAINT FK_TASK_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.TASK_NUMBER_VALUES_TENANT                      ON FHIRAPP.TASK_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.TASK_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.TASK_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.TASK_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_TASK_LATLNG_VALUES_RPLAT ON FHIRAPP.TASK_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_TASK_LATLNG_VALUES_PNNHV ON FHIRAPP.TASK_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_TASK_LATLNG_VALUES_PNNLV ON FHIRAPP.TASK_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_TASK_LATLNG_VALUES_RPLNG ON FHIRAPP.TASK_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

ALTER TABLE FHIRAPP.TASK_LATLNG_VALUES ADD CONSTRAINT FK_TASK_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.TASK_LATLNG_VALUES ADD CONSTRAINT FK_TASK_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.TASK_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.TASK_LATLNG_VALUES_TENANT                      ON FHIRAPP.TASK_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.TASK_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.TASK_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.TASK_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_TASK_QUANTITY_VALUES_PNNV ON FHIRAPP.TASK_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_TASK_QUANTITY_VALUES_RPS ON FHIRAPP.TASK_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_TASK_QUANTITY_VALUES_RPCHLS ON FHIRAPP.TASK_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_TASK_QUANTITY_VALUES_PCHLSR ON FHIRAPP.TASK_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_TASK_QUANTITY_VALUES_RPCLHS ON FHIRAPP.TASK_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_TASK_QUANTITY_VALUES_PCLHSR ON FHIRAPP.TASK_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.TASK_QUANTITY_VALUES ADD CONSTRAINT FK_TASK_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.TASK_QUANTITY_VALUES ADD CONSTRAINT FK_TASK_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.TASK_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.TASK_QUANTITY_VALUES_TENANT                      ON FHIRAPP.TASK_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.TASK_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.TASK_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.QUESTIONNAIRE_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT QUESTIONNAIRE_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.QUESTIONNAIRE_LOGICAL_RESOURCES ADD CONSTRAINT FK_QUESTIONNAIRE_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.QUESTIONNAIRE_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.QUESTIONNAIRE_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.QUESTIONNAIRE_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.QUESTIONNAIRE_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.QUESTIONNAIRE_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT QUESTIONNAIRE_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.QUESTIONNAIRE_RESOURCES_PRF_IN1 ON FHIRAPP.QUESTIONNAIRE_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.QUESTIONNAIRE_RESOURCES_TENANT                      ON FHIRAPP.QUESTIONNAIRE_RESOURCES          FOR ROWS WHERE FHIRAPP.QUESTIONNAIRE_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.QUESTIONNAIRE_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.QUESTIONNAIRE_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_QUESTIONNAIRE_STR_VALUES_PSR ON FHIRAPP.QUESTIONNAIRE_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_QUESTIONNAIRE_STR_VALUES_RPL ON FHIRAPP.QUESTIONNAIRE_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

CREATE INDEX FHIRAPP.IDX_QUESTIONNAIRE_STR_VALUES_RPS ON FHIRAPP.QUESTIONNAIRE_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

CREATE INDEX FHIRAPP.IDX_QUESTIONNAIRE_STR_VALUES_PLR ON FHIRAPP.QUESTIONNAIRE_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.QUESTIONNAIRE_STR_VALUES ADD CONSTRAINT FK_QUESTIONNAIRE_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.QUESTIONNAIRE_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.QUESTIONNAIRE_STR_VALUES ADD CONSTRAINT FK_QUESTIONNAIRE_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.QUESTIONNAIRE_STR_VALUES_TENANT                      ON FHIRAPP.QUESTIONNAIRE_STR_VALUES          FOR ROWS WHERE FHIRAPP.QUESTIONNAIRE_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.QUESTIONNAIRE_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.QUESTIONNAIRE_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_QUESTIONNAIRE_TOKEN_VALUES_RPS ON FHIRAPP.QUESTIONNAIRE_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

CREATE INDEX FHIRAPP.IDX_QUESTIONNAIRE_TOKEN_VALUES_PNCSCV ON FHIRAPP.QUESTIONNAIRE_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.QUESTIONNAIRE_TOKEN_VALUES ADD CONSTRAINT FK_QUESTIONNAIRE_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

ALTER TABLE FHIRAPP.QUESTIONNAIRE_TOKEN_VALUES ADD CONSTRAINT FK_QUESTIONNAIRE_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.QUESTIONNAIRE_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.QUESTIONNAIRE_TOKEN_VALUES ADD CONSTRAINT FK_QUESTIONNAIRE_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.QUESTIONNAIRE_TOKEN_VALUES_TENANT                      ON FHIRAPP.QUESTIONNAIRE_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.QUESTIONNAIRE_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.QUESTIONNAIRE_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.QUESTIONNAIRE_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_QUESTIONNAIRE_DATE_VALUES_RPV ON FHIRAPP.QUESTIONNAIRE_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

CREATE INDEX FHIRAPP.IDX_QUESTIONNAIRE_DATE_VALUES_PESR ON FHIRAPP.QUESTIONNAIRE_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_QUESTIONNAIRE_DATE_VALUES_PSER ON FHIRAPP.QUESTIONNAIRE_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_QUESTIONNAIRE_DATE_VALUES_RPSE ON FHIRAPP.QUESTIONNAIRE_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

CREATE INDEX FHIRAPP.IDX_QUESTIONNAIRE_DATE_VALUES_PVR ON FHIRAPP.QUESTIONNAIRE_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.QUESTIONNAIRE_DATE_VALUES ADD CONSTRAINT FK_QUESTIONNAIRE_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.QUESTIONNAIRE_DATE_VALUES ADD CONSTRAINT FK_QUESTIONNAIRE_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.QUESTIONNAIRE_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.QUESTIONNAIRE_DATE_VALUES_TENANT                      ON FHIRAPP.QUESTIONNAIRE_DATE_VALUES          FOR ROWS WHERE FHIRAPP.QUESTIONNAIRE_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.QUESTIONNAIRE_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.QUESTIONNAIRE_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_QUESTIONNAIRE_NUMBER_VALUES_RPS ON FHIRAPP.QUESTIONNAIRE_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

CREATE INDEX FHIRAPP.IDX_QUESTIONNAIRE_NUMBER_VALUES_PNNV ON FHIRAPP.QUESTIONNAIRE_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.QUESTIONNAIRE_NUMBER_VALUES ADD CONSTRAINT FK_QUESTIONNAIRE_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.QUESTIONNAIRE_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.QUESTIONNAIRE_NUMBER_VALUES ADD CONSTRAINT FK_QUESTIONNAIRE_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.QUESTIONNAIRE_NUMBER_VALUES_TENANT                      ON FHIRAPP.QUESTIONNAIRE_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.QUESTIONNAIRE_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.QUESTIONNAIRE_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.QUESTIONNAIRE_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_QUESTIONNAIRE_LATLNG_VALUES_PNNLV ON FHIRAPP.QUESTIONNAIRE_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_QUESTIONNAIRE_LATLNG_VALUES_PNNHV ON FHIRAPP.QUESTIONNAIRE_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_QUESTIONNAIRE_LATLNG_VALUES_RPLAT ON FHIRAPP.QUESTIONNAIRE_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_QUESTIONNAIRE_LATLNG_VALUES_RPLNG ON FHIRAPP.QUESTIONNAIRE_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

ALTER TABLE FHIRAPP.QUESTIONNAIRE_LATLNG_VALUES ADD CONSTRAINT FK_QUESTIONNAIRE_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.QUESTIONNAIRE_LATLNG_VALUES ADD CONSTRAINT FK_QUESTIONNAIRE_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.QUESTIONNAIRE_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.QUESTIONNAIRE_LATLNG_VALUES_TENANT                      ON FHIRAPP.QUESTIONNAIRE_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.QUESTIONNAIRE_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.QUESTIONNAIRE_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.QUESTIONNAIRE_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_QUESTIONNAIRE_QUANTITY_VALUES_RPS ON FHIRAPP.QUESTIONNAIRE_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_QUESTIONNAIRE_QUANTITY_VALUES_PCHLSR ON FHIRAPP.QUESTIONNAIRE_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_QUESTIONNAIRE_QUANTITY_VALUES_PNNV ON FHIRAPP.QUESTIONNAIRE_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_QUESTIONNAIRE_QUANTITY_VALUES_PCLHSR ON FHIRAPP.QUESTIONNAIRE_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_QUESTIONNAIRE_QUANTITY_VALUES_RPCLHS ON FHIRAPP.QUESTIONNAIRE_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_QUESTIONNAIRE_QUANTITY_VALUES_RPCHLS ON FHIRAPP.QUESTIONNAIRE_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

ALTER TABLE FHIRAPP.QUESTIONNAIRE_QUANTITY_VALUES ADD CONSTRAINT FK_QUESTIONNAIRE_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.QUESTIONNAIRE_QUANTITY_VALUES ADD CONSTRAINT FK_QUESTIONNAIRE_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.QUESTIONNAIRE_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.QUESTIONNAIRE_QUANTITY_VALUES_TENANT                      ON FHIRAPP.QUESTIONNAIRE_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.QUESTIONNAIRE_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.QUESTIONNAIRE_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.EXPLANATIONOFBENEFIT_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT EXPLANATIONOFBENEFIT_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.EXPLANATIONOFBENEFIT_LOGICAL_RESOURCES ADD CONSTRAINT FK_EXPLANATIONOFBENEFIT_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.EXPLANATIONOFBENEFIT_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.EXPLANATIONOFBENEFIT_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.EXPLANATIONOFBENEFIT_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.EXPLANATIONOFBENEFIT_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.EXPLANATIONOFBENEFIT_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT EXPLANATIONOFBENEFIT_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.EXPLANATIONOFBENEFIT_RESOURCES_PRF_IN1 ON FHIRAPP.EXPLANATIONOFBENEFIT_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.EXPLANATIONOFBENEFIT_RESOURCES_TENANT                      ON FHIRAPP.EXPLANATIONOFBENEFIT_RESOURCES          FOR ROWS WHERE FHIRAPP.EXPLANATIONOFBENEFIT_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.EXPLANATIONOFBENEFIT_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.EXPLANATIONOFBENEFIT_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_EXPLANATIONOFBENEFIT_STR_VALUES_PSR ON FHIRAPP.EXPLANATIONOFBENEFIT_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_EXPLANATIONOFBENEFIT_STR_VALUES_RPL ON FHIRAPP.EXPLANATIONOFBENEFIT_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

CREATE INDEX FHIRAPP.IDX_EXPLANATIONOFBENEFIT_STR_VALUES_PLR ON FHIRAPP.EXPLANATIONOFBENEFIT_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_EXPLANATIONOFBENEFIT_STR_VALUES_RPS ON FHIRAPP.EXPLANATIONOFBENEFIT_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

ALTER TABLE FHIRAPP.EXPLANATIONOFBENEFIT_STR_VALUES ADD CONSTRAINT FK_EXPLANATIONOFBENEFIT_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.EXPLANATIONOFBENEFIT_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.EXPLANATIONOFBENEFIT_STR_VALUES ADD CONSTRAINT FK_EXPLANATIONOFBENEFIT_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.EXPLANATIONOFBENEFIT_STR_VALUES_TENANT                      ON FHIRAPP.EXPLANATIONOFBENEFIT_STR_VALUES          FOR ROWS WHERE FHIRAPP.EXPLANATIONOFBENEFIT_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.EXPLANATIONOFBENEFIT_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.EXPLANATIONOFBENEFIT_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_EXPLANATIONOFBENEFIT_TOKEN_VALUES_PNCSCV ON FHIRAPP.EXPLANATIONOFBENEFIT_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_EXPLANATIONOFBENEFIT_TOKEN_VALUES_RPS ON FHIRAPP.EXPLANATIONOFBENEFIT_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

ALTER TABLE FHIRAPP.EXPLANATIONOFBENEFIT_TOKEN_VALUES ADD CONSTRAINT FK_EXPLANATIONOFBENEFIT_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

ALTER TABLE FHIRAPP.EXPLANATIONOFBENEFIT_TOKEN_VALUES ADD CONSTRAINT FK_EXPLANATIONOFBENEFIT_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.EXPLANATIONOFBENEFIT_TOKEN_VALUES ADD CONSTRAINT FK_EXPLANATIONOFBENEFIT_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.EXPLANATIONOFBENEFIT_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.EXPLANATIONOFBENEFIT_TOKEN_VALUES_TENANT                      ON FHIRAPP.EXPLANATIONOFBENEFIT_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.EXPLANATIONOFBENEFIT_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.EXPLANATIONOFBENEFIT_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.EXPLANATIONOFBENEFIT_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_EXPLANATIONOFBENEFIT_DATE_VALUES_PSER ON FHIRAPP.EXPLANATIONOFBENEFIT_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_EXPLANATIONOFBENEFIT_DATE_VALUES_RPSE ON FHIRAPP.EXPLANATIONOFBENEFIT_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

CREATE INDEX FHIRAPP.IDX_EXPLANATIONOFBENEFIT_DATE_VALUES_PVR ON FHIRAPP.EXPLANATIONOFBENEFIT_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_EXPLANATIONOFBENEFIT_DATE_VALUES_PESR ON FHIRAPP.EXPLANATIONOFBENEFIT_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_EXPLANATIONOFBENEFIT_DATE_VALUES_RPV ON FHIRAPP.EXPLANATIONOFBENEFIT_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

ALTER TABLE FHIRAPP.EXPLANATIONOFBENEFIT_DATE_VALUES ADD CONSTRAINT FK_EXPLANATIONOFBENEFIT_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.EXPLANATIONOFBENEFIT_DATE_VALUES ADD CONSTRAINT FK_EXPLANATIONOFBENEFIT_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.EXPLANATIONOFBENEFIT_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.EXPLANATIONOFBENEFIT_DATE_VALUES_TENANT                      ON FHIRAPP.EXPLANATIONOFBENEFIT_DATE_VALUES          FOR ROWS WHERE FHIRAPP.EXPLANATIONOFBENEFIT_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.EXPLANATIONOFBENEFIT_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.EXPLANATIONOFBENEFIT_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_EXPLANATIONOFBENEFIT_NUMBER_VALUES_PNNV ON FHIRAPP.EXPLANATIONOFBENEFIT_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_EXPLANATIONOFBENEFIT_NUMBER_VALUES_RPS ON FHIRAPP.EXPLANATIONOFBENEFIT_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

ALTER TABLE FHIRAPP.EXPLANATIONOFBENEFIT_NUMBER_VALUES ADD CONSTRAINT FK_EXPLANATIONOFBENEFIT_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.EXPLANATIONOFBENEFIT_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.EXPLANATIONOFBENEFIT_NUMBER_VALUES ADD CONSTRAINT FK_EXPLANATIONOFBENEFIT_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.EXPLANATIONOFBENEFIT_NUMBER_VALUES_TENANT                      ON FHIRAPP.EXPLANATIONOFBENEFIT_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.EXPLANATIONOFBENEFIT_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.EXPLANATIONOFBENEFIT_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.EXPLANATIONOFBENEFIT_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_EXPLANATIONOFBENEFIT_LATLNG_VALUES_RPLNG ON FHIRAPP.EXPLANATIONOFBENEFIT_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_EXPLANATIONOFBENEFIT_LATLNG_VALUES_PNNHV ON FHIRAPP.EXPLANATIONOFBENEFIT_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_EXPLANATIONOFBENEFIT_LATLNG_VALUES_RPLAT ON FHIRAPP.EXPLANATIONOFBENEFIT_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_EXPLANATIONOFBENEFIT_LATLNG_VALUES_PNNLV ON FHIRAPP.EXPLANATIONOFBENEFIT_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.EXPLANATIONOFBENEFIT_LATLNG_VALUES ADD CONSTRAINT FK_EXPLANATIONOFBENEFIT_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.EXPLANATIONOFBENEFIT_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.EXPLANATIONOFBENEFIT_LATLNG_VALUES ADD CONSTRAINT FK_EXPLANATIONOFBENEFIT_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.EXPLANATIONOFBENEFIT_LATLNG_VALUES_TENANT                      ON FHIRAPP.EXPLANATIONOFBENEFIT_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.EXPLANATIONOFBENEFIT_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.EXPLANATIONOFBENEFIT_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.EXPLANATIONOFBENEFIT_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_EXPLANATIONOFBENEFIT_QUANTITY_VALUES_RPCHLS ON FHIRAPP.EXPLANATIONOFBENEFIT_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_EXPLANATIONOFBENEFIT_QUANTITY_VALUES_PNNV ON FHIRAPP.EXPLANATIONOFBENEFIT_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_EXPLANATIONOFBENEFIT_QUANTITY_VALUES_RPS ON FHIRAPP.EXPLANATIONOFBENEFIT_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_EXPLANATIONOFBENEFIT_QUANTITY_VALUES_PCLHSR ON FHIRAPP.EXPLANATIONOFBENEFIT_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_EXPLANATIONOFBENEFIT_QUANTITY_VALUES_RPCLHS ON FHIRAPP.EXPLANATIONOFBENEFIT_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_EXPLANATIONOFBENEFIT_QUANTITY_VALUES_PCHLSR ON FHIRAPP.EXPLANATIONOFBENEFIT_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.EXPLANATIONOFBENEFIT_QUANTITY_VALUES ADD CONSTRAINT FK_EXPLANATIONOFBENEFIT_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.EXPLANATIONOFBENEFIT_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.EXPLANATIONOFBENEFIT_QUANTITY_VALUES ADD CONSTRAINT FK_EXPLANATIONOFBENEFIT_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.EXPLANATIONOFBENEFIT_QUANTITY_VALUES_TENANT                      ON FHIRAPP.EXPLANATIONOFBENEFIT_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.EXPLANATIONOFBENEFIT_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.EXPLANATIONOFBENEFIT_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDICINALPRODUCTPHARMACEUTICAL_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT MEDICINALPRODUCTPHARMACEUTICAL_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.MEDICINALPRODUCTPHARMACEUTICAL_LOGICAL_RESOURCES ADD CONSTRAINT FK_MEDICINALPRODUCTPHARMACEUTICAL_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.MEDICINALPRODUCTPHARMACEUTICAL_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.MEDICINALPRODUCTPHARMACEUTICAL_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.MEDICINALPRODUCTPHARMACEUTICAL_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDICINALPRODUCTPHARMACEUTICAL_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDICINALPRODUCTPHARMACEUTICAL_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT MEDICINALPRODUCTPHARMACEUTICAL_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.MEDICINALPRODUCTPHARMACEUTICAL_RESOURCES_PRF_IN1 ON FHIRAPP.MEDICINALPRODUCTPHARMACEUTICAL_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.MEDICINALPRODUCTPHARMACEUTICAL_RESOURCES_TENANT                      ON FHIRAPP.MEDICINALPRODUCTPHARMACEUTICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.MEDICINALPRODUCTPHARMACEUTICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDICINALPRODUCTPHARMACEUTICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDICINALPRODUCTPHARMACEUTICAL_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTPHARMACEUTICAL_STR_VALUES_RPS ON FHIRAPP.MEDICINALPRODUCTPHARMACEUTICAL_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTPHARMACEUTICAL_STR_VALUES_PSR ON FHIRAPP.MEDICINALPRODUCTPHARMACEUTICAL_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTPHARMACEUTICAL_STR_VALUES_RPL ON FHIRAPP.MEDICINALPRODUCTPHARMACEUTICAL_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTPHARMACEUTICAL_STR_VALUES_PLR ON FHIRAPP.MEDICINALPRODUCTPHARMACEUTICAL_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.MEDICINALPRODUCTPHARMACEUTICAL_STR_VALUES ADD CONSTRAINT FK_MEDICINALPRODUCTPHARMACEUTICAL_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.MEDICINALPRODUCTPHARMACEUTICAL_STR_VALUES ADD CONSTRAINT FK_MEDICINALPRODUCTPHARMACEUTICAL_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.MEDICINALPRODUCTPHARMACEUTICAL_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.MEDICINALPRODUCTPHARMACEUTICAL_STR_VALUES_TENANT                      ON FHIRAPP.MEDICINALPRODUCTPHARMACEUTICAL_STR_VALUES          FOR ROWS WHERE FHIRAPP.MEDICINALPRODUCTPHARMACEUTICAL_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDICINALPRODUCTPHARMACEUTICAL_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDICINALPRODUCTPHARMACEUTICAL_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTPHARMACEUTICAL_TOKEN_VALUES_PNCSCV ON FHIRAPP.MEDICINALPRODUCTPHARMACEUTICAL_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTPHARMACEUTICAL_TOKEN_VALUES_RPS ON FHIRAPP.MEDICINALPRODUCTPHARMACEUTICAL_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

ALTER TABLE FHIRAPP.MEDICINALPRODUCTPHARMACEUTICAL_TOKEN_VALUES ADD CONSTRAINT FK_MEDICINALPRODUCTPHARMACEUTICAL_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.MEDICINALPRODUCTPHARMACEUTICAL_TOKEN_VALUES ADD CONSTRAINT FK_MEDICINALPRODUCTPHARMACEUTICAL_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

ALTER TABLE FHIRAPP.MEDICINALPRODUCTPHARMACEUTICAL_TOKEN_VALUES ADD CONSTRAINT FK_MEDICINALPRODUCTPHARMACEUTICAL_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.MEDICINALPRODUCTPHARMACEUTICAL_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.MEDICINALPRODUCTPHARMACEUTICAL_TOKEN_VALUES_TENANT                      ON FHIRAPP.MEDICINALPRODUCTPHARMACEUTICAL_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.MEDICINALPRODUCTPHARMACEUTICAL_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDICINALPRODUCTPHARMACEUTICAL_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDICINALPRODUCTPHARMACEUTICAL_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTPHARMACEUTICAL_DATE_VALUES_PSER ON FHIRAPP.MEDICINALPRODUCTPHARMACEUTICAL_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTPHARMACEUTICAL_DATE_VALUES_RPSE ON FHIRAPP.MEDICINALPRODUCTPHARMACEUTICAL_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTPHARMACEUTICAL_DATE_VALUES_RPV ON FHIRAPP.MEDICINALPRODUCTPHARMACEUTICAL_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTPHARMACEUTICAL_DATE_VALUES_PVR ON FHIRAPP.MEDICINALPRODUCTPHARMACEUTICAL_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTPHARMACEUTICAL_DATE_VALUES_PESR ON FHIRAPP.MEDICINALPRODUCTPHARMACEUTICAL_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.MEDICINALPRODUCTPHARMACEUTICAL_DATE_VALUES ADD CONSTRAINT FK_MEDICINALPRODUCTPHARMACEUTICAL_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.MEDICINALPRODUCTPHARMACEUTICAL_DATE_VALUES ADD CONSTRAINT FK_MEDICINALPRODUCTPHARMACEUTICAL_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.MEDICINALPRODUCTPHARMACEUTICAL_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.MEDICINALPRODUCTPHARMACEUTICAL_DATE_VALUES_TENANT                      ON FHIRAPP.MEDICINALPRODUCTPHARMACEUTICAL_DATE_VALUES          FOR ROWS WHERE FHIRAPP.MEDICINALPRODUCTPHARMACEUTICAL_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDICINALPRODUCTPHARMACEUTICAL_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDICINALPRODUCTPHARMACEUTICAL_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTPHARMACEUTICAL_NUMBER_VALUES_RPS ON FHIRAPP.MEDICINALPRODUCTPHARMACEUTICAL_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTPHARMACEUTICAL_NUMBER_VALUES_PNNV ON FHIRAPP.MEDICINALPRODUCTPHARMACEUTICAL_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.MEDICINALPRODUCTPHARMACEUTICAL_NUMBER_VALUES ADD CONSTRAINT FK_MEDICINALPRODUCTPHARMACEUTICAL_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.MEDICINALPRODUCTPHARMACEUTICAL_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.MEDICINALPRODUCTPHARMACEUTICAL_NUMBER_VALUES ADD CONSTRAINT FK_MEDICINALPRODUCTPHARMACEUTICAL_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.MEDICINALPRODUCTPHARMACEUTICAL_NUMBER_VALUES_TENANT                      ON FHIRAPP.MEDICINALPRODUCTPHARMACEUTICAL_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.MEDICINALPRODUCTPHARMACEUTICAL_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDICINALPRODUCTPHARMACEUTICAL_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDICINALPRODUCTPHARMACEUTICAL_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTPHARMACEUTICAL_LATLNG_VALUES_PNNHV ON FHIRAPP.MEDICINALPRODUCTPHARMACEUTICAL_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTPHARMACEUTICAL_LATLNG_VALUES_RPLNG ON FHIRAPP.MEDICINALPRODUCTPHARMACEUTICAL_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTPHARMACEUTICAL_LATLNG_VALUES_RPLAT ON FHIRAPP.MEDICINALPRODUCTPHARMACEUTICAL_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTPHARMACEUTICAL_LATLNG_VALUES_PNNLV ON FHIRAPP.MEDICINALPRODUCTPHARMACEUTICAL_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.MEDICINALPRODUCTPHARMACEUTICAL_LATLNG_VALUES ADD CONSTRAINT FK_MEDICINALPRODUCTPHARMACEUTICAL_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.MEDICINALPRODUCTPHARMACEUTICAL_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.MEDICINALPRODUCTPHARMACEUTICAL_LATLNG_VALUES ADD CONSTRAINT FK_MEDICINALPRODUCTPHARMACEUTICAL_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.MEDICINALPRODUCTPHARMACEUTICAL_LATLNG_VALUES_TENANT                      ON FHIRAPP.MEDICINALPRODUCTPHARMACEUTICAL_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.MEDICINALPRODUCTPHARMACEUTICAL_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDICINALPRODUCTPHARMACEUTICAL_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDICINALPRODUCTPHARMACEUTICAL_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTPHARMACEUTICAL_QUANTITY_VALUES_RPS ON FHIRAPP.MEDICINALPRODUCTPHARMACEUTICAL_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTPHARMACEUTICAL_QUANTITY_VALUES_PCLHSR ON FHIRAPP.MEDICINALPRODUCTPHARMACEUTICAL_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTPHARMACEUTICAL_QUANTITY_VALUES_RPCHLS ON FHIRAPP.MEDICINALPRODUCTPHARMACEUTICAL_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTPHARMACEUTICAL_QUANTITY_VALUES_PCHLSR ON FHIRAPP.MEDICINALPRODUCTPHARMACEUTICAL_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTPHARMACEUTICAL_QUANTITY_VALUES_RPCLHS ON FHIRAPP.MEDICINALPRODUCTPHARMACEUTICAL_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTPHARMACEUTICAL_QUANTITY_VALUES_PNNV ON FHIRAPP.MEDICINALPRODUCTPHARMACEUTICAL_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

ALTER TABLE FHIRAPP.MEDICINALPRODUCTPHARMACEUTICAL_QUANTITY_VALUES ADD CONSTRAINT FK_MEDICINALPRODUCTPHARMACEUTICAL_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.MEDICINALPRODUCTPHARMACEUTICAL_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.MEDICINALPRODUCTPHARMACEUTICAL_QUANTITY_VALUES ADD CONSTRAINT FK_MEDICINALPRODUCTPHARMACEUTICAL_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.MEDICINALPRODUCTPHARMACEUTICAL_QUANTITY_VALUES_TENANT                      ON FHIRAPP.MEDICINALPRODUCTPHARMACEUTICAL_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.MEDICINALPRODUCTPHARMACEUTICAL_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDICINALPRODUCTPHARMACEUTICAL_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.RESEARCHSTUDY_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT RESEARCHSTUDY_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.RESEARCHSTUDY_LOGICAL_RESOURCES ADD CONSTRAINT FK_RESEARCHSTUDY_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.RESEARCHSTUDY_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.RESEARCHSTUDY_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.RESEARCHSTUDY_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.RESEARCHSTUDY_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.RESEARCHSTUDY_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT RESEARCHSTUDY_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.RESEARCHSTUDY_RESOURCES_PRF_IN1 ON FHIRAPP.RESEARCHSTUDY_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.RESEARCHSTUDY_RESOURCES_TENANT                      ON FHIRAPP.RESEARCHSTUDY_RESOURCES          FOR ROWS WHERE FHIRAPP.RESEARCHSTUDY_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.RESEARCHSTUDY_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.RESEARCHSTUDY_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_RESEARCHSTUDY_STR_VALUES_PLR ON FHIRAPP.RESEARCHSTUDY_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_RESEARCHSTUDY_STR_VALUES_RPS ON FHIRAPP.RESEARCHSTUDY_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

CREATE INDEX FHIRAPP.IDX_RESEARCHSTUDY_STR_VALUES_PSR ON FHIRAPP.RESEARCHSTUDY_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_RESEARCHSTUDY_STR_VALUES_RPL ON FHIRAPP.RESEARCHSTUDY_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

ALTER TABLE FHIRAPP.RESEARCHSTUDY_STR_VALUES ADD CONSTRAINT FK_RESEARCHSTUDY_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.RESEARCHSTUDY_STR_VALUES ADD CONSTRAINT FK_RESEARCHSTUDY_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.RESEARCHSTUDY_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.RESEARCHSTUDY_STR_VALUES_TENANT                      ON FHIRAPP.RESEARCHSTUDY_STR_VALUES          FOR ROWS WHERE FHIRAPP.RESEARCHSTUDY_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.RESEARCHSTUDY_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.RESEARCHSTUDY_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_RESEARCHSTUDY_TOKEN_VALUES_PNCSCV ON FHIRAPP.RESEARCHSTUDY_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_RESEARCHSTUDY_TOKEN_VALUES_RPS ON FHIRAPP.RESEARCHSTUDY_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

ALTER TABLE FHIRAPP.RESEARCHSTUDY_TOKEN_VALUES ADD CONSTRAINT FK_RESEARCHSTUDY_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.RESEARCHSTUDY_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.RESEARCHSTUDY_TOKEN_VALUES ADD CONSTRAINT FK_RESEARCHSTUDY_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

ALTER TABLE FHIRAPP.RESEARCHSTUDY_TOKEN_VALUES ADD CONSTRAINT FK_RESEARCHSTUDY_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.RESEARCHSTUDY_TOKEN_VALUES_TENANT                      ON FHIRAPP.RESEARCHSTUDY_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.RESEARCHSTUDY_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.RESEARCHSTUDY_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.RESEARCHSTUDY_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_RESEARCHSTUDY_DATE_VALUES_PESR ON FHIRAPP.RESEARCHSTUDY_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_RESEARCHSTUDY_DATE_VALUES_RPV ON FHIRAPP.RESEARCHSTUDY_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

CREATE INDEX FHIRAPP.IDX_RESEARCHSTUDY_DATE_VALUES_PVR ON FHIRAPP.RESEARCHSTUDY_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_RESEARCHSTUDY_DATE_VALUES_RPSE ON FHIRAPP.RESEARCHSTUDY_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

CREATE INDEX FHIRAPP.IDX_RESEARCHSTUDY_DATE_VALUES_PSER ON FHIRAPP.RESEARCHSTUDY_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.RESEARCHSTUDY_DATE_VALUES ADD CONSTRAINT FK_RESEARCHSTUDY_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.RESEARCHSTUDY_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.RESEARCHSTUDY_DATE_VALUES ADD CONSTRAINT FK_RESEARCHSTUDY_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.RESEARCHSTUDY_DATE_VALUES_TENANT                      ON FHIRAPP.RESEARCHSTUDY_DATE_VALUES          FOR ROWS WHERE FHIRAPP.RESEARCHSTUDY_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.RESEARCHSTUDY_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.RESEARCHSTUDY_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_RESEARCHSTUDY_NUMBER_VALUES_RPS ON FHIRAPP.RESEARCHSTUDY_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

CREATE INDEX FHIRAPP.IDX_RESEARCHSTUDY_NUMBER_VALUES_PNNV ON FHIRAPP.RESEARCHSTUDY_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.RESEARCHSTUDY_NUMBER_VALUES ADD CONSTRAINT FK_RESEARCHSTUDY_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.RESEARCHSTUDY_NUMBER_VALUES ADD CONSTRAINT FK_RESEARCHSTUDY_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.RESEARCHSTUDY_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.RESEARCHSTUDY_NUMBER_VALUES_TENANT                      ON FHIRAPP.RESEARCHSTUDY_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.RESEARCHSTUDY_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.RESEARCHSTUDY_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.RESEARCHSTUDY_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_RESEARCHSTUDY_LATLNG_VALUES_RPLNG ON FHIRAPP.RESEARCHSTUDY_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_RESEARCHSTUDY_LATLNG_VALUES_PNNHV ON FHIRAPP.RESEARCHSTUDY_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_RESEARCHSTUDY_LATLNG_VALUES_PNNLV ON FHIRAPP.RESEARCHSTUDY_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_RESEARCHSTUDY_LATLNG_VALUES_RPLAT ON FHIRAPP.RESEARCHSTUDY_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

ALTER TABLE FHIRAPP.RESEARCHSTUDY_LATLNG_VALUES ADD CONSTRAINT FK_RESEARCHSTUDY_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.RESEARCHSTUDY_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.RESEARCHSTUDY_LATLNG_VALUES ADD CONSTRAINT FK_RESEARCHSTUDY_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.RESEARCHSTUDY_LATLNG_VALUES_TENANT                      ON FHIRAPP.RESEARCHSTUDY_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.RESEARCHSTUDY_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.RESEARCHSTUDY_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.RESEARCHSTUDY_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_RESEARCHSTUDY_QUANTITY_VALUES_PNNV ON FHIRAPP.RESEARCHSTUDY_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_RESEARCHSTUDY_QUANTITY_VALUES_PCLHSR ON FHIRAPP.RESEARCHSTUDY_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_RESEARCHSTUDY_QUANTITY_VALUES_RPCLHS ON FHIRAPP.RESEARCHSTUDY_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_RESEARCHSTUDY_QUANTITY_VALUES_PCHLSR ON FHIRAPP.RESEARCHSTUDY_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_RESEARCHSTUDY_QUANTITY_VALUES_RPS ON FHIRAPP.RESEARCHSTUDY_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_RESEARCHSTUDY_QUANTITY_VALUES_RPCHLS ON FHIRAPP.RESEARCHSTUDY_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

ALTER TABLE FHIRAPP.RESEARCHSTUDY_QUANTITY_VALUES ADD CONSTRAINT FK_RESEARCHSTUDY_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.RESEARCHSTUDY_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.RESEARCHSTUDY_QUANTITY_VALUES ADD CONSTRAINT FK_RESEARCHSTUDY_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.RESEARCHSTUDY_QUANTITY_VALUES_TENANT                      ON FHIRAPP.RESEARCHSTUDY_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.RESEARCHSTUDY_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.RESEARCHSTUDY_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.SPECIMEN_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT SPECIMEN_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.SPECIMEN_LOGICAL_RESOURCES ADD CONSTRAINT FK_SPECIMEN_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.SPECIMEN_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.SPECIMEN_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.SPECIMEN_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.SPECIMEN_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.SPECIMEN_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT SPECIMEN_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.SPECIMEN_RESOURCES_PRF_IN1 ON FHIRAPP.SPECIMEN_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.SPECIMEN_RESOURCES_TENANT                      ON FHIRAPP.SPECIMEN_RESOURCES          FOR ROWS WHERE FHIRAPP.SPECIMEN_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.SPECIMEN_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.SPECIMEN_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_SPECIMEN_STR_VALUES_PSR ON FHIRAPP.SPECIMEN_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SPECIMEN_STR_VALUES_RPL ON FHIRAPP.SPECIMEN_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

CREATE INDEX FHIRAPP.IDX_SPECIMEN_STR_VALUES_PLR ON FHIRAPP.SPECIMEN_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SPECIMEN_STR_VALUES_RPS ON FHIRAPP.SPECIMEN_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

ALTER TABLE FHIRAPP.SPECIMEN_STR_VALUES ADD CONSTRAINT FK_SPECIMEN_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.SPECIMEN_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.SPECIMEN_STR_VALUES ADD CONSTRAINT FK_SPECIMEN_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.SPECIMEN_STR_VALUES_TENANT                      ON FHIRAPP.SPECIMEN_STR_VALUES          FOR ROWS WHERE FHIRAPP.SPECIMEN_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.SPECIMEN_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.SPECIMEN_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_SPECIMEN_TOKEN_VALUES_RPS ON FHIRAPP.SPECIMEN_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

CREATE INDEX FHIRAPP.IDX_SPECIMEN_TOKEN_VALUES_PNCSCV ON FHIRAPP.SPECIMEN_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.SPECIMEN_TOKEN_VALUES ADD CONSTRAINT FK_SPECIMEN_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.SPECIMEN_TOKEN_VALUES ADD CONSTRAINT FK_SPECIMEN_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

ALTER TABLE FHIRAPP.SPECIMEN_TOKEN_VALUES ADD CONSTRAINT FK_SPECIMEN_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.SPECIMEN_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.SPECIMEN_TOKEN_VALUES_TENANT                      ON FHIRAPP.SPECIMEN_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.SPECIMEN_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.SPECIMEN_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.SPECIMEN_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_SPECIMEN_DATE_VALUES_RPSE ON FHIRAPP.SPECIMEN_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

CREATE INDEX FHIRAPP.IDX_SPECIMEN_DATE_VALUES_PSER ON FHIRAPP.SPECIMEN_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SPECIMEN_DATE_VALUES_PESR ON FHIRAPP.SPECIMEN_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SPECIMEN_DATE_VALUES_PVR ON FHIRAPP.SPECIMEN_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SPECIMEN_DATE_VALUES_RPV ON FHIRAPP.SPECIMEN_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

ALTER TABLE FHIRAPP.SPECIMEN_DATE_VALUES ADD CONSTRAINT FK_SPECIMEN_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.SPECIMEN_DATE_VALUES ADD CONSTRAINT FK_SPECIMEN_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.SPECIMEN_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.SPECIMEN_DATE_VALUES_TENANT                      ON FHIRAPP.SPECIMEN_DATE_VALUES          FOR ROWS WHERE FHIRAPP.SPECIMEN_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.SPECIMEN_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.SPECIMEN_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_SPECIMEN_NUMBER_VALUES_RPS ON FHIRAPP.SPECIMEN_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

CREATE INDEX FHIRAPP.IDX_SPECIMEN_NUMBER_VALUES_PNNV ON FHIRAPP.SPECIMEN_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.SPECIMEN_NUMBER_VALUES ADD CONSTRAINT FK_SPECIMEN_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.SPECIMEN_NUMBER_VALUES ADD CONSTRAINT FK_SPECIMEN_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.SPECIMEN_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.SPECIMEN_NUMBER_VALUES_TENANT                      ON FHIRAPP.SPECIMEN_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.SPECIMEN_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.SPECIMEN_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.SPECIMEN_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_SPECIMEN_LATLNG_VALUES_PNNHV ON FHIRAPP.SPECIMEN_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SPECIMEN_LATLNG_VALUES_PNNLV ON FHIRAPP.SPECIMEN_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SPECIMEN_LATLNG_VALUES_RPLAT ON FHIRAPP.SPECIMEN_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_SPECIMEN_LATLNG_VALUES_RPLNG ON FHIRAPP.SPECIMEN_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

ALTER TABLE FHIRAPP.SPECIMEN_LATLNG_VALUES ADD CONSTRAINT FK_SPECIMEN_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.SPECIMEN_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.SPECIMEN_LATLNG_VALUES ADD CONSTRAINT FK_SPECIMEN_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.SPECIMEN_LATLNG_VALUES_TENANT                      ON FHIRAPP.SPECIMEN_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.SPECIMEN_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.SPECIMEN_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.SPECIMEN_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_SPECIMEN_QUANTITY_VALUES_RPS ON FHIRAPP.SPECIMEN_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_SPECIMEN_QUANTITY_VALUES_PNNV ON FHIRAPP.SPECIMEN_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_SPECIMEN_QUANTITY_VALUES_PCLHSR ON FHIRAPP.SPECIMEN_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SPECIMEN_QUANTITY_VALUES_RPCLHS ON FHIRAPP.SPECIMEN_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_SPECIMEN_QUANTITY_VALUES_PCHLSR ON FHIRAPP.SPECIMEN_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SPECIMEN_QUANTITY_VALUES_RPCHLS ON FHIRAPP.SPECIMEN_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

ALTER TABLE FHIRAPP.SPECIMEN_QUANTITY_VALUES ADD CONSTRAINT FK_SPECIMEN_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.SPECIMEN_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.SPECIMEN_QUANTITY_VALUES ADD CONSTRAINT FK_SPECIMEN_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.SPECIMEN_QUANTITY_VALUES_TENANT                      ON FHIRAPP.SPECIMEN_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.SPECIMEN_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.SPECIMEN_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.ALLERGYINTOLERANCE_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT ALLERGYINTOLERANCE_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.ALLERGYINTOLERANCE_LOGICAL_RESOURCES ADD CONSTRAINT FK_ALLERGYINTOLERANCE_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.ALLERGYINTOLERANCE_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.ALLERGYINTOLERANCE_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.ALLERGYINTOLERANCE_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.ALLERGYINTOLERANCE_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.ALLERGYINTOLERANCE_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT ALLERGYINTOLERANCE_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.ALLERGYINTOLERANCE_RESOURCES_PRF_IN1 ON FHIRAPP.ALLERGYINTOLERANCE_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.ALLERGYINTOLERANCE_RESOURCES_TENANT                      ON FHIRAPP.ALLERGYINTOLERANCE_RESOURCES          FOR ROWS WHERE FHIRAPP.ALLERGYINTOLERANCE_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.ALLERGYINTOLERANCE_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.ALLERGYINTOLERANCE_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_ALLERGYINTOLERANCE_STR_VALUES_PLR ON FHIRAPP.ALLERGYINTOLERANCE_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_ALLERGYINTOLERANCE_STR_VALUES_RPS ON FHIRAPP.ALLERGYINTOLERANCE_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

CREATE INDEX FHIRAPP.IDX_ALLERGYINTOLERANCE_STR_VALUES_PSR ON FHIRAPP.ALLERGYINTOLERANCE_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_ALLERGYINTOLERANCE_STR_VALUES_RPL ON FHIRAPP.ALLERGYINTOLERANCE_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

ALTER TABLE FHIRAPP.ALLERGYINTOLERANCE_STR_VALUES ADD CONSTRAINT FK_ALLERGYINTOLERANCE_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.ALLERGYINTOLERANCE_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.ALLERGYINTOLERANCE_STR_VALUES ADD CONSTRAINT FK_ALLERGYINTOLERANCE_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.ALLERGYINTOLERANCE_STR_VALUES_TENANT                      ON FHIRAPP.ALLERGYINTOLERANCE_STR_VALUES          FOR ROWS WHERE FHIRAPP.ALLERGYINTOLERANCE_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.ALLERGYINTOLERANCE_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.ALLERGYINTOLERANCE_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_ALLERGYINTOLERANCE_TOKEN_VALUES_PNCSCV ON FHIRAPP.ALLERGYINTOLERANCE_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_ALLERGYINTOLERANCE_TOKEN_VALUES_RPS ON FHIRAPP.ALLERGYINTOLERANCE_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

ALTER TABLE FHIRAPP.ALLERGYINTOLERANCE_TOKEN_VALUES ADD CONSTRAINT FK_ALLERGYINTOLERANCE_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.ALLERGYINTOLERANCE_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.ALLERGYINTOLERANCE_TOKEN_VALUES ADD CONSTRAINT FK_ALLERGYINTOLERANCE_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

ALTER TABLE FHIRAPP.ALLERGYINTOLERANCE_TOKEN_VALUES ADD CONSTRAINT FK_ALLERGYINTOLERANCE_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.ALLERGYINTOLERANCE_TOKEN_VALUES_TENANT                      ON FHIRAPP.ALLERGYINTOLERANCE_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.ALLERGYINTOLERANCE_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.ALLERGYINTOLERANCE_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.ALLERGYINTOLERANCE_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_ALLERGYINTOLERANCE_DATE_VALUES_PVR ON FHIRAPP.ALLERGYINTOLERANCE_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_ALLERGYINTOLERANCE_DATE_VALUES_RPV ON FHIRAPP.ALLERGYINTOLERANCE_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

CREATE INDEX FHIRAPP.IDX_ALLERGYINTOLERANCE_DATE_VALUES_PESR ON FHIRAPP.ALLERGYINTOLERANCE_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_ALLERGYINTOLERANCE_DATE_VALUES_RPSE ON FHIRAPP.ALLERGYINTOLERANCE_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

CREATE INDEX FHIRAPP.IDX_ALLERGYINTOLERANCE_DATE_VALUES_PSER ON FHIRAPP.ALLERGYINTOLERANCE_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.ALLERGYINTOLERANCE_DATE_VALUES ADD CONSTRAINT FK_ALLERGYINTOLERANCE_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.ALLERGYINTOLERANCE_DATE_VALUES ADD CONSTRAINT FK_ALLERGYINTOLERANCE_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.ALLERGYINTOLERANCE_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.ALLERGYINTOLERANCE_DATE_VALUES_TENANT                      ON FHIRAPP.ALLERGYINTOLERANCE_DATE_VALUES          FOR ROWS WHERE FHIRAPP.ALLERGYINTOLERANCE_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.ALLERGYINTOLERANCE_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.ALLERGYINTOLERANCE_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_ALLERGYINTOLERANCE_NUMBER_VALUES_PNNV ON FHIRAPP.ALLERGYINTOLERANCE_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_ALLERGYINTOLERANCE_NUMBER_VALUES_RPS ON FHIRAPP.ALLERGYINTOLERANCE_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

ALTER TABLE FHIRAPP.ALLERGYINTOLERANCE_NUMBER_VALUES ADD CONSTRAINT FK_ALLERGYINTOLERANCE_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.ALLERGYINTOLERANCE_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.ALLERGYINTOLERANCE_NUMBER_VALUES ADD CONSTRAINT FK_ALLERGYINTOLERANCE_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.ALLERGYINTOLERANCE_NUMBER_VALUES_TENANT                      ON FHIRAPP.ALLERGYINTOLERANCE_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.ALLERGYINTOLERANCE_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.ALLERGYINTOLERANCE_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.ALLERGYINTOLERANCE_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_ALLERGYINTOLERANCE_LATLNG_VALUES_RPLAT ON FHIRAPP.ALLERGYINTOLERANCE_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_ALLERGYINTOLERANCE_LATLNG_VALUES_RPLNG ON FHIRAPP.ALLERGYINTOLERANCE_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_ALLERGYINTOLERANCE_LATLNG_VALUES_PNNLV ON FHIRAPP.ALLERGYINTOLERANCE_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_ALLERGYINTOLERANCE_LATLNG_VALUES_PNNHV ON FHIRAPP.ALLERGYINTOLERANCE_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.ALLERGYINTOLERANCE_LATLNG_VALUES ADD CONSTRAINT FK_ALLERGYINTOLERANCE_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.ALLERGYINTOLERANCE_LATLNG_VALUES ADD CONSTRAINT FK_ALLERGYINTOLERANCE_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.ALLERGYINTOLERANCE_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.ALLERGYINTOLERANCE_LATLNG_VALUES_TENANT                      ON FHIRAPP.ALLERGYINTOLERANCE_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.ALLERGYINTOLERANCE_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.ALLERGYINTOLERANCE_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.ALLERGYINTOLERANCE_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_ALLERGYINTOLERANCE_QUANTITY_VALUES_PCHLSR ON FHIRAPP.ALLERGYINTOLERANCE_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_ALLERGYINTOLERANCE_QUANTITY_VALUES_RPCLHS ON FHIRAPP.ALLERGYINTOLERANCE_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_ALLERGYINTOLERANCE_QUANTITY_VALUES_PNNV ON FHIRAPP.ALLERGYINTOLERANCE_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_ALLERGYINTOLERANCE_QUANTITY_VALUES_RPS ON FHIRAPP.ALLERGYINTOLERANCE_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_ALLERGYINTOLERANCE_QUANTITY_VALUES_PCLHSR ON FHIRAPP.ALLERGYINTOLERANCE_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_ALLERGYINTOLERANCE_QUANTITY_VALUES_RPCHLS ON FHIRAPP.ALLERGYINTOLERANCE_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

ALTER TABLE FHIRAPP.ALLERGYINTOLERANCE_QUANTITY_VALUES ADD CONSTRAINT FK_ALLERGYINTOLERANCE_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.ALLERGYINTOLERANCE_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.ALLERGYINTOLERANCE_QUANTITY_VALUES ADD CONSTRAINT FK_ALLERGYINTOLERANCE_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.ALLERGYINTOLERANCE_QUANTITY_VALUES_TENANT                      ON FHIRAPP.ALLERGYINTOLERANCE_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.ALLERGYINTOLERANCE_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.ALLERGYINTOLERANCE_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.CAREPLAN_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT CAREPLAN_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.CAREPLAN_LOGICAL_RESOURCES ADD CONSTRAINT FK_CAREPLAN_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.CAREPLAN_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.CAREPLAN_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.CAREPLAN_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.CAREPLAN_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.CAREPLAN_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT CAREPLAN_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.CAREPLAN_RESOURCES_PRF_IN1 ON FHIRAPP.CAREPLAN_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.CAREPLAN_RESOURCES_TENANT                      ON FHIRAPP.CAREPLAN_RESOURCES          FOR ROWS WHERE FHIRAPP.CAREPLAN_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.CAREPLAN_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.CAREPLAN_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_CAREPLAN_STR_VALUES_PLR ON FHIRAPP.CAREPLAN_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_CAREPLAN_STR_VALUES_RPS ON FHIRAPP.CAREPLAN_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

CREATE INDEX FHIRAPP.IDX_CAREPLAN_STR_VALUES_PSR ON FHIRAPP.CAREPLAN_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_CAREPLAN_STR_VALUES_RPL ON FHIRAPP.CAREPLAN_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

ALTER TABLE FHIRAPP.CAREPLAN_STR_VALUES ADD CONSTRAINT FK_CAREPLAN_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.CAREPLAN_STR_VALUES ADD CONSTRAINT FK_CAREPLAN_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.CAREPLAN_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.CAREPLAN_STR_VALUES_TENANT                      ON FHIRAPP.CAREPLAN_STR_VALUES          FOR ROWS WHERE FHIRAPP.CAREPLAN_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.CAREPLAN_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.CAREPLAN_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_CAREPLAN_TOKEN_VALUES_RPS ON FHIRAPP.CAREPLAN_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

CREATE INDEX FHIRAPP.IDX_CAREPLAN_TOKEN_VALUES_PNCSCV ON FHIRAPP.CAREPLAN_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.CAREPLAN_TOKEN_VALUES ADD CONSTRAINT FK_CAREPLAN_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

ALTER TABLE FHIRAPP.CAREPLAN_TOKEN_VALUES ADD CONSTRAINT FK_CAREPLAN_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.CAREPLAN_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.CAREPLAN_TOKEN_VALUES ADD CONSTRAINT FK_CAREPLAN_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.CAREPLAN_TOKEN_VALUES_TENANT                      ON FHIRAPP.CAREPLAN_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.CAREPLAN_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.CAREPLAN_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.CAREPLAN_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_CAREPLAN_DATE_VALUES_RPSE ON FHIRAPP.CAREPLAN_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

CREATE INDEX FHIRAPP.IDX_CAREPLAN_DATE_VALUES_PSER ON FHIRAPP.CAREPLAN_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_CAREPLAN_DATE_VALUES_PVR ON FHIRAPP.CAREPLAN_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_CAREPLAN_DATE_VALUES_PESR ON FHIRAPP.CAREPLAN_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_CAREPLAN_DATE_VALUES_RPV ON FHIRAPP.CAREPLAN_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

ALTER TABLE FHIRAPP.CAREPLAN_DATE_VALUES ADD CONSTRAINT FK_CAREPLAN_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.CAREPLAN_DATE_VALUES ADD CONSTRAINT FK_CAREPLAN_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.CAREPLAN_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.CAREPLAN_DATE_VALUES_TENANT                      ON FHIRAPP.CAREPLAN_DATE_VALUES          FOR ROWS WHERE FHIRAPP.CAREPLAN_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.CAREPLAN_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.CAREPLAN_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_CAREPLAN_NUMBER_VALUES_PNNV ON FHIRAPP.CAREPLAN_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_CAREPLAN_NUMBER_VALUES_RPS ON FHIRAPP.CAREPLAN_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

ALTER TABLE FHIRAPP.CAREPLAN_NUMBER_VALUES ADD CONSTRAINT FK_CAREPLAN_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.CAREPLAN_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.CAREPLAN_NUMBER_VALUES ADD CONSTRAINT FK_CAREPLAN_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.CAREPLAN_NUMBER_VALUES_TENANT                      ON FHIRAPP.CAREPLAN_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.CAREPLAN_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.CAREPLAN_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.CAREPLAN_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_CAREPLAN_LATLNG_VALUES_PNNLV ON FHIRAPP.CAREPLAN_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_CAREPLAN_LATLNG_VALUES_PNNHV ON FHIRAPP.CAREPLAN_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_CAREPLAN_LATLNG_VALUES_RPLAT ON FHIRAPP.CAREPLAN_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_CAREPLAN_LATLNG_VALUES_RPLNG ON FHIRAPP.CAREPLAN_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

ALTER TABLE FHIRAPP.CAREPLAN_LATLNG_VALUES ADD CONSTRAINT FK_CAREPLAN_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.CAREPLAN_LATLNG_VALUES ADD CONSTRAINT FK_CAREPLAN_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.CAREPLAN_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.CAREPLAN_LATLNG_VALUES_TENANT                      ON FHIRAPP.CAREPLAN_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.CAREPLAN_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.CAREPLAN_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.CAREPLAN_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_CAREPLAN_QUANTITY_VALUES_RPCLHS ON FHIRAPP.CAREPLAN_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_CAREPLAN_QUANTITY_VALUES_PCLHSR ON FHIRAPP.CAREPLAN_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_CAREPLAN_QUANTITY_VALUES_PCHLSR ON FHIRAPP.CAREPLAN_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_CAREPLAN_QUANTITY_VALUES_RPS ON FHIRAPP.CAREPLAN_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_CAREPLAN_QUANTITY_VALUES_RPCHLS ON FHIRAPP.CAREPLAN_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_CAREPLAN_QUANTITY_VALUES_PNNV ON FHIRAPP.CAREPLAN_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

ALTER TABLE FHIRAPP.CAREPLAN_QUANTITY_VALUES ADD CONSTRAINT FK_CAREPLAN_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.CAREPLAN_QUANTITY_VALUES ADD CONSTRAINT FK_CAREPLAN_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.CAREPLAN_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.CAREPLAN_QUANTITY_VALUES_TENANT                      ON FHIRAPP.CAREPLAN_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.CAREPLAN_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.CAREPLAN_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.STRUCTUREDEFINITION_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT STRUCTUREDEFINITION_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.STRUCTUREDEFINITION_LOGICAL_RESOURCES ADD CONSTRAINT FK_STRUCTUREDEFINITION_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.STRUCTUREDEFINITION_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.STRUCTUREDEFINITION_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.STRUCTUREDEFINITION_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.STRUCTUREDEFINITION_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.STRUCTUREDEFINITION_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT STRUCTUREDEFINITION_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.STRUCTUREDEFINITION_RESOURCES_PRF_IN1 ON FHIRAPP.STRUCTUREDEFINITION_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.STRUCTUREDEFINITION_RESOURCES_TENANT                      ON FHIRAPP.STRUCTUREDEFINITION_RESOURCES          FOR ROWS WHERE FHIRAPP.STRUCTUREDEFINITION_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.STRUCTUREDEFINITION_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.STRUCTUREDEFINITION_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_STRUCTUREDEFINITION_STR_VALUES_RPL ON FHIRAPP.STRUCTUREDEFINITION_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

CREATE INDEX FHIRAPP.IDX_STRUCTUREDEFINITION_STR_VALUES_PSR ON FHIRAPP.STRUCTUREDEFINITION_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_STRUCTUREDEFINITION_STR_VALUES_PLR ON FHIRAPP.STRUCTUREDEFINITION_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_STRUCTUREDEFINITION_STR_VALUES_RPS ON FHIRAPP.STRUCTUREDEFINITION_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

ALTER TABLE FHIRAPP.STRUCTUREDEFINITION_STR_VALUES ADD CONSTRAINT FK_STRUCTUREDEFINITION_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.STRUCTUREDEFINITION_STR_VALUES ADD CONSTRAINT FK_STRUCTUREDEFINITION_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.STRUCTUREDEFINITION_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.STRUCTUREDEFINITION_STR_VALUES_TENANT                      ON FHIRAPP.STRUCTUREDEFINITION_STR_VALUES          FOR ROWS WHERE FHIRAPP.STRUCTUREDEFINITION_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.STRUCTUREDEFINITION_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.STRUCTUREDEFINITION_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_STRUCTUREDEFINITION_TOKEN_VALUES_PNCSCV ON FHIRAPP.STRUCTUREDEFINITION_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_STRUCTUREDEFINITION_TOKEN_VALUES_RPS ON FHIRAPP.STRUCTUREDEFINITION_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

ALTER TABLE FHIRAPP.STRUCTUREDEFINITION_TOKEN_VALUES ADD CONSTRAINT FK_STRUCTUREDEFINITION_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.STRUCTUREDEFINITION_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.STRUCTUREDEFINITION_TOKEN_VALUES ADD CONSTRAINT FK_STRUCTUREDEFINITION_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

ALTER TABLE FHIRAPP.STRUCTUREDEFINITION_TOKEN_VALUES ADD CONSTRAINT FK_STRUCTUREDEFINITION_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.STRUCTUREDEFINITION_TOKEN_VALUES_TENANT                      ON FHIRAPP.STRUCTUREDEFINITION_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.STRUCTUREDEFINITION_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.STRUCTUREDEFINITION_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.STRUCTUREDEFINITION_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_STRUCTUREDEFINITION_DATE_VALUES_PESR ON FHIRAPP.STRUCTUREDEFINITION_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_STRUCTUREDEFINITION_DATE_VALUES_RPV ON FHIRAPP.STRUCTUREDEFINITION_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

CREATE INDEX FHIRAPP.IDX_STRUCTUREDEFINITION_DATE_VALUES_PVR ON FHIRAPP.STRUCTUREDEFINITION_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_STRUCTUREDEFINITION_DATE_VALUES_RPSE ON FHIRAPP.STRUCTUREDEFINITION_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

CREATE INDEX FHIRAPP.IDX_STRUCTUREDEFINITION_DATE_VALUES_PSER ON FHIRAPP.STRUCTUREDEFINITION_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.STRUCTUREDEFINITION_DATE_VALUES ADD CONSTRAINT FK_STRUCTUREDEFINITION_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.STRUCTUREDEFINITION_DATE_VALUES ADD CONSTRAINT FK_STRUCTUREDEFINITION_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.STRUCTUREDEFINITION_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.STRUCTUREDEFINITION_DATE_VALUES_TENANT                      ON FHIRAPP.STRUCTUREDEFINITION_DATE_VALUES          FOR ROWS WHERE FHIRAPP.STRUCTUREDEFINITION_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.STRUCTUREDEFINITION_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.STRUCTUREDEFINITION_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_STRUCTUREDEFINITION_NUMBER_VALUES_RPS ON FHIRAPP.STRUCTUREDEFINITION_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

CREATE INDEX FHIRAPP.IDX_STRUCTUREDEFINITION_NUMBER_VALUES_PNNV ON FHIRAPP.STRUCTUREDEFINITION_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.STRUCTUREDEFINITION_NUMBER_VALUES ADD CONSTRAINT FK_STRUCTUREDEFINITION_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.STRUCTUREDEFINITION_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.STRUCTUREDEFINITION_NUMBER_VALUES ADD CONSTRAINT FK_STRUCTUREDEFINITION_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.STRUCTUREDEFINITION_NUMBER_VALUES_TENANT                      ON FHIRAPP.STRUCTUREDEFINITION_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.STRUCTUREDEFINITION_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.STRUCTUREDEFINITION_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.STRUCTUREDEFINITION_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_STRUCTUREDEFINITION_LATLNG_VALUES_RPLAT ON FHIRAPP.STRUCTUREDEFINITION_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_STRUCTUREDEFINITION_LATLNG_VALUES_RPLNG ON FHIRAPP.STRUCTUREDEFINITION_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_STRUCTUREDEFINITION_LATLNG_VALUES_PNNHV ON FHIRAPP.STRUCTUREDEFINITION_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_STRUCTUREDEFINITION_LATLNG_VALUES_PNNLV ON FHIRAPP.STRUCTUREDEFINITION_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.STRUCTUREDEFINITION_LATLNG_VALUES ADD CONSTRAINT FK_STRUCTUREDEFINITION_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.STRUCTUREDEFINITION_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.STRUCTUREDEFINITION_LATLNG_VALUES ADD CONSTRAINT FK_STRUCTUREDEFINITION_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.STRUCTUREDEFINITION_LATLNG_VALUES_TENANT                      ON FHIRAPP.STRUCTUREDEFINITION_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.STRUCTUREDEFINITION_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.STRUCTUREDEFINITION_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.STRUCTUREDEFINITION_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_STRUCTUREDEFINITION_QUANTITY_VALUES_RPCLHS ON FHIRAPP.STRUCTUREDEFINITION_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_STRUCTUREDEFINITION_QUANTITY_VALUES_RPS ON FHIRAPP.STRUCTUREDEFINITION_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_STRUCTUREDEFINITION_QUANTITY_VALUES_PCLHSR ON FHIRAPP.STRUCTUREDEFINITION_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_STRUCTUREDEFINITION_QUANTITY_VALUES_RPCHLS ON FHIRAPP.STRUCTUREDEFINITION_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_STRUCTUREDEFINITION_QUANTITY_VALUES_PNNV ON FHIRAPP.STRUCTUREDEFINITION_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_STRUCTUREDEFINITION_QUANTITY_VALUES_PCHLSR ON FHIRAPP.STRUCTUREDEFINITION_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.STRUCTUREDEFINITION_QUANTITY_VALUES ADD CONSTRAINT FK_STRUCTUREDEFINITION_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.STRUCTUREDEFINITION_QUANTITY_VALUES ADD CONSTRAINT FK_STRUCTUREDEFINITION_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.STRUCTUREDEFINITION_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.STRUCTUREDEFINITION_QUANTITY_VALUES_TENANT                      ON FHIRAPP.STRUCTUREDEFINITION_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.STRUCTUREDEFINITION_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.STRUCTUREDEFINITION_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.CHARGEITEMDEFINITION_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT CHARGEITEMDEFINITION_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.CHARGEITEMDEFINITION_LOGICAL_RESOURCES ADD CONSTRAINT FK_CHARGEITEMDEFINITION_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.CHARGEITEMDEFINITION_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.CHARGEITEMDEFINITION_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.CHARGEITEMDEFINITION_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.CHARGEITEMDEFINITION_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.CHARGEITEMDEFINITION_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT CHARGEITEMDEFINITION_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.CHARGEITEMDEFINITION_RESOURCES_PRF_IN1 ON FHIRAPP.CHARGEITEMDEFINITION_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.CHARGEITEMDEFINITION_RESOURCES_TENANT                      ON FHIRAPP.CHARGEITEMDEFINITION_RESOURCES          FOR ROWS WHERE FHIRAPP.CHARGEITEMDEFINITION_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.CHARGEITEMDEFINITION_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.CHARGEITEMDEFINITION_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_CHARGEITEMDEFINITION_STR_VALUES_RPL ON FHIRAPP.CHARGEITEMDEFINITION_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

CREATE INDEX FHIRAPP.IDX_CHARGEITEMDEFINITION_STR_VALUES_PSR ON FHIRAPP.CHARGEITEMDEFINITION_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_CHARGEITEMDEFINITION_STR_VALUES_RPS ON FHIRAPP.CHARGEITEMDEFINITION_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

CREATE INDEX FHIRAPP.IDX_CHARGEITEMDEFINITION_STR_VALUES_PLR ON FHIRAPP.CHARGEITEMDEFINITION_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.CHARGEITEMDEFINITION_STR_VALUES ADD CONSTRAINT FK_CHARGEITEMDEFINITION_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.CHARGEITEMDEFINITION_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.CHARGEITEMDEFINITION_STR_VALUES ADD CONSTRAINT FK_CHARGEITEMDEFINITION_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.CHARGEITEMDEFINITION_STR_VALUES_TENANT                      ON FHIRAPP.CHARGEITEMDEFINITION_STR_VALUES          FOR ROWS WHERE FHIRAPP.CHARGEITEMDEFINITION_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.CHARGEITEMDEFINITION_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.CHARGEITEMDEFINITION_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_CHARGEITEMDEFINITION_TOKEN_VALUES_PNCSCV ON FHIRAPP.CHARGEITEMDEFINITION_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_CHARGEITEMDEFINITION_TOKEN_VALUES_RPS ON FHIRAPP.CHARGEITEMDEFINITION_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

ALTER TABLE FHIRAPP.CHARGEITEMDEFINITION_TOKEN_VALUES ADD CONSTRAINT FK_CHARGEITEMDEFINITION_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

ALTER TABLE FHIRAPP.CHARGEITEMDEFINITION_TOKEN_VALUES ADD CONSTRAINT FK_CHARGEITEMDEFINITION_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.CHARGEITEMDEFINITION_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.CHARGEITEMDEFINITION_TOKEN_VALUES ADD CONSTRAINT FK_CHARGEITEMDEFINITION_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.CHARGEITEMDEFINITION_TOKEN_VALUES_TENANT                      ON FHIRAPP.CHARGEITEMDEFINITION_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.CHARGEITEMDEFINITION_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.CHARGEITEMDEFINITION_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.CHARGEITEMDEFINITION_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_CHARGEITEMDEFINITION_DATE_VALUES_RPSE ON FHIRAPP.CHARGEITEMDEFINITION_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

CREATE INDEX FHIRAPP.IDX_CHARGEITEMDEFINITION_DATE_VALUES_PSER ON FHIRAPP.CHARGEITEMDEFINITION_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_CHARGEITEMDEFINITION_DATE_VALUES_RPV ON FHIRAPP.CHARGEITEMDEFINITION_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

CREATE INDEX FHIRAPP.IDX_CHARGEITEMDEFINITION_DATE_VALUES_PVR ON FHIRAPP.CHARGEITEMDEFINITION_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_CHARGEITEMDEFINITION_DATE_VALUES_PESR ON FHIRAPP.CHARGEITEMDEFINITION_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.CHARGEITEMDEFINITION_DATE_VALUES ADD CONSTRAINT FK_CHARGEITEMDEFINITION_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.CHARGEITEMDEFINITION_DATE_VALUES ADD CONSTRAINT FK_CHARGEITEMDEFINITION_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.CHARGEITEMDEFINITION_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.CHARGEITEMDEFINITION_DATE_VALUES_TENANT                      ON FHIRAPP.CHARGEITEMDEFINITION_DATE_VALUES          FOR ROWS WHERE FHIRAPP.CHARGEITEMDEFINITION_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.CHARGEITEMDEFINITION_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.CHARGEITEMDEFINITION_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_CHARGEITEMDEFINITION_NUMBER_VALUES_RPS ON FHIRAPP.CHARGEITEMDEFINITION_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

CREATE INDEX FHIRAPP.IDX_CHARGEITEMDEFINITION_NUMBER_VALUES_PNNV ON FHIRAPP.CHARGEITEMDEFINITION_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.CHARGEITEMDEFINITION_NUMBER_VALUES ADD CONSTRAINT FK_CHARGEITEMDEFINITION_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.CHARGEITEMDEFINITION_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.CHARGEITEMDEFINITION_NUMBER_VALUES ADD CONSTRAINT FK_CHARGEITEMDEFINITION_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.CHARGEITEMDEFINITION_NUMBER_VALUES_TENANT                      ON FHIRAPP.CHARGEITEMDEFINITION_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.CHARGEITEMDEFINITION_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.CHARGEITEMDEFINITION_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.CHARGEITEMDEFINITION_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_CHARGEITEMDEFINITION_LATLNG_VALUES_RPLNG ON FHIRAPP.CHARGEITEMDEFINITION_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_CHARGEITEMDEFINITION_LATLNG_VALUES_PNNLV ON FHIRAPP.CHARGEITEMDEFINITION_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_CHARGEITEMDEFINITION_LATLNG_VALUES_PNNHV ON FHIRAPP.CHARGEITEMDEFINITION_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_CHARGEITEMDEFINITION_LATLNG_VALUES_RPLAT ON FHIRAPP.CHARGEITEMDEFINITION_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

ALTER TABLE FHIRAPP.CHARGEITEMDEFINITION_LATLNG_VALUES ADD CONSTRAINT FK_CHARGEITEMDEFINITION_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.CHARGEITEMDEFINITION_LATLNG_VALUES ADD CONSTRAINT FK_CHARGEITEMDEFINITION_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.CHARGEITEMDEFINITION_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.CHARGEITEMDEFINITION_LATLNG_VALUES_TENANT                      ON FHIRAPP.CHARGEITEMDEFINITION_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.CHARGEITEMDEFINITION_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.CHARGEITEMDEFINITION_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.CHARGEITEMDEFINITION_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_CHARGEITEMDEFINITION_QUANTITY_VALUES_RPS ON FHIRAPP.CHARGEITEMDEFINITION_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_CHARGEITEMDEFINITION_QUANTITY_VALUES_PNNV ON FHIRAPP.CHARGEITEMDEFINITION_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_CHARGEITEMDEFINITION_QUANTITY_VALUES_PCLHSR ON FHIRAPP.CHARGEITEMDEFINITION_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_CHARGEITEMDEFINITION_QUANTITY_VALUES_RPCHLS ON FHIRAPP.CHARGEITEMDEFINITION_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_CHARGEITEMDEFINITION_QUANTITY_VALUES_PCHLSR ON FHIRAPP.CHARGEITEMDEFINITION_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_CHARGEITEMDEFINITION_QUANTITY_VALUES_RPCLHS ON FHIRAPP.CHARGEITEMDEFINITION_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

ALTER TABLE FHIRAPP.CHARGEITEMDEFINITION_QUANTITY_VALUES ADD CONSTRAINT FK_CHARGEITEMDEFINITION_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.CHARGEITEMDEFINITION_QUANTITY_VALUES ADD CONSTRAINT FK_CHARGEITEMDEFINITION_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.CHARGEITEMDEFINITION_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.CHARGEITEMDEFINITION_QUANTITY_VALUES_TENANT                      ON FHIRAPP.CHARGEITEMDEFINITION_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.CHARGEITEMDEFINITION_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.CHARGEITEMDEFINITION_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.EPISODEOFCARE_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT EPISODEOFCARE_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.EPISODEOFCARE_LOGICAL_RESOURCES ADD CONSTRAINT FK_EPISODEOFCARE_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.EPISODEOFCARE_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.EPISODEOFCARE_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.EPISODEOFCARE_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.EPISODEOFCARE_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.EPISODEOFCARE_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT EPISODEOFCARE_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.EPISODEOFCARE_RESOURCES_PRF_IN1 ON FHIRAPP.EPISODEOFCARE_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.EPISODEOFCARE_RESOURCES_TENANT                      ON FHIRAPP.EPISODEOFCARE_RESOURCES          FOR ROWS WHERE FHIRAPP.EPISODEOFCARE_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.EPISODEOFCARE_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.EPISODEOFCARE_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_EPISODEOFCARE_STR_VALUES_PLR ON FHIRAPP.EPISODEOFCARE_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_EPISODEOFCARE_STR_VALUES_RPS ON FHIRAPP.EPISODEOFCARE_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

CREATE INDEX FHIRAPP.IDX_EPISODEOFCARE_STR_VALUES_RPL ON FHIRAPP.EPISODEOFCARE_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

CREATE INDEX FHIRAPP.IDX_EPISODEOFCARE_STR_VALUES_PSR ON FHIRAPP.EPISODEOFCARE_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.EPISODEOFCARE_STR_VALUES ADD CONSTRAINT FK_EPISODEOFCARE_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.EPISODEOFCARE_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.EPISODEOFCARE_STR_VALUES ADD CONSTRAINT FK_EPISODEOFCARE_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.EPISODEOFCARE_STR_VALUES_TENANT                      ON FHIRAPP.EPISODEOFCARE_STR_VALUES          FOR ROWS WHERE FHIRAPP.EPISODEOFCARE_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.EPISODEOFCARE_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.EPISODEOFCARE_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_EPISODEOFCARE_TOKEN_VALUES_RPS ON FHIRAPP.EPISODEOFCARE_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

CREATE INDEX FHIRAPP.IDX_EPISODEOFCARE_TOKEN_VALUES_PNCSCV ON FHIRAPP.EPISODEOFCARE_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.EPISODEOFCARE_TOKEN_VALUES ADD CONSTRAINT FK_EPISODEOFCARE_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.EPISODEOFCARE_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.EPISODEOFCARE_TOKEN_VALUES ADD CONSTRAINT FK_EPISODEOFCARE_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

ALTER TABLE FHIRAPP.EPISODEOFCARE_TOKEN_VALUES ADD CONSTRAINT FK_EPISODEOFCARE_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.EPISODEOFCARE_TOKEN_VALUES_TENANT                      ON FHIRAPP.EPISODEOFCARE_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.EPISODEOFCARE_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.EPISODEOFCARE_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.EPISODEOFCARE_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_EPISODEOFCARE_DATE_VALUES_PESR ON FHIRAPP.EPISODEOFCARE_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_EPISODEOFCARE_DATE_VALUES_PVR ON FHIRAPP.EPISODEOFCARE_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_EPISODEOFCARE_DATE_VALUES_PSER ON FHIRAPP.EPISODEOFCARE_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_EPISODEOFCARE_DATE_VALUES_RPSE ON FHIRAPP.EPISODEOFCARE_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

CREATE INDEX FHIRAPP.IDX_EPISODEOFCARE_DATE_VALUES_RPV ON FHIRAPP.EPISODEOFCARE_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

ALTER TABLE FHIRAPP.EPISODEOFCARE_DATE_VALUES ADD CONSTRAINT FK_EPISODEOFCARE_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.EPISODEOFCARE_DATE_VALUES ADD CONSTRAINT FK_EPISODEOFCARE_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.EPISODEOFCARE_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.EPISODEOFCARE_DATE_VALUES_TENANT                      ON FHIRAPP.EPISODEOFCARE_DATE_VALUES          FOR ROWS WHERE FHIRAPP.EPISODEOFCARE_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.EPISODEOFCARE_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.EPISODEOFCARE_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_EPISODEOFCARE_NUMBER_VALUES_RPS ON FHIRAPP.EPISODEOFCARE_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

CREATE INDEX FHIRAPP.IDX_EPISODEOFCARE_NUMBER_VALUES_PNNV ON FHIRAPP.EPISODEOFCARE_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.EPISODEOFCARE_NUMBER_VALUES ADD CONSTRAINT FK_EPISODEOFCARE_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.EPISODEOFCARE_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.EPISODEOFCARE_NUMBER_VALUES ADD CONSTRAINT FK_EPISODEOFCARE_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.EPISODEOFCARE_NUMBER_VALUES_TENANT                      ON FHIRAPP.EPISODEOFCARE_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.EPISODEOFCARE_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.EPISODEOFCARE_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.EPISODEOFCARE_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_EPISODEOFCARE_LATLNG_VALUES_PNNHV ON FHIRAPP.EPISODEOFCARE_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_EPISODEOFCARE_LATLNG_VALUES_RPLAT ON FHIRAPP.EPISODEOFCARE_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_EPISODEOFCARE_LATLNG_VALUES_PNNLV ON FHIRAPP.EPISODEOFCARE_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_EPISODEOFCARE_LATLNG_VALUES_RPLNG ON FHIRAPP.EPISODEOFCARE_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

ALTER TABLE FHIRAPP.EPISODEOFCARE_LATLNG_VALUES ADD CONSTRAINT FK_EPISODEOFCARE_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.EPISODEOFCARE_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.EPISODEOFCARE_LATLNG_VALUES ADD CONSTRAINT FK_EPISODEOFCARE_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.EPISODEOFCARE_LATLNG_VALUES_TENANT                      ON FHIRAPP.EPISODEOFCARE_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.EPISODEOFCARE_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.EPISODEOFCARE_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.EPISODEOFCARE_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_EPISODEOFCARE_QUANTITY_VALUES_RPS ON FHIRAPP.EPISODEOFCARE_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_EPISODEOFCARE_QUANTITY_VALUES_PCHLSR ON FHIRAPP.EPISODEOFCARE_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_EPISODEOFCARE_QUANTITY_VALUES_PCLHSR ON FHIRAPP.EPISODEOFCARE_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_EPISODEOFCARE_QUANTITY_VALUES_RPCLHS ON FHIRAPP.EPISODEOFCARE_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_EPISODEOFCARE_QUANTITY_VALUES_PNNV ON FHIRAPP.EPISODEOFCARE_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_EPISODEOFCARE_QUANTITY_VALUES_RPCHLS ON FHIRAPP.EPISODEOFCARE_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

ALTER TABLE FHIRAPP.EPISODEOFCARE_QUANTITY_VALUES ADD CONSTRAINT FK_EPISODEOFCARE_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.EPISODEOFCARE_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.EPISODEOFCARE_QUANTITY_VALUES ADD CONSTRAINT FK_EPISODEOFCARE_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.EPISODEOFCARE_QUANTITY_VALUES_TENANT                      ON FHIRAPP.EPISODEOFCARE_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.EPISODEOFCARE_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.EPISODEOFCARE_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.OPERATIONOUTCOME_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT OPERATIONOUTCOME_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.OPERATIONOUTCOME_LOGICAL_RESOURCES ADD CONSTRAINT FK_OPERATIONOUTCOME_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.OPERATIONOUTCOME_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.OPERATIONOUTCOME_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.OPERATIONOUTCOME_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.OPERATIONOUTCOME_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.OPERATIONOUTCOME_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT OPERATIONOUTCOME_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.OPERATIONOUTCOME_RESOURCES_PRF_IN1 ON FHIRAPP.OPERATIONOUTCOME_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.OPERATIONOUTCOME_RESOURCES_TENANT                      ON FHIRAPP.OPERATIONOUTCOME_RESOURCES          FOR ROWS WHERE FHIRAPP.OPERATIONOUTCOME_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.OPERATIONOUTCOME_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.OPERATIONOUTCOME_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_OPERATIONOUTCOME_STR_VALUES_PSR ON FHIRAPP.OPERATIONOUTCOME_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_OPERATIONOUTCOME_STR_VALUES_RPL ON FHIRAPP.OPERATIONOUTCOME_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

CREATE INDEX FHIRAPP.IDX_OPERATIONOUTCOME_STR_VALUES_RPS ON FHIRAPP.OPERATIONOUTCOME_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

CREATE INDEX FHIRAPP.IDX_OPERATIONOUTCOME_STR_VALUES_PLR ON FHIRAPP.OPERATIONOUTCOME_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.OPERATIONOUTCOME_STR_VALUES ADD CONSTRAINT FK_OPERATIONOUTCOME_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.OPERATIONOUTCOME_STR_VALUES ADD CONSTRAINT FK_OPERATIONOUTCOME_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.OPERATIONOUTCOME_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.OPERATIONOUTCOME_STR_VALUES_TENANT                      ON FHIRAPP.OPERATIONOUTCOME_STR_VALUES          FOR ROWS WHERE FHIRAPP.OPERATIONOUTCOME_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.OPERATIONOUTCOME_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.OPERATIONOUTCOME_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_OPERATIONOUTCOME_TOKEN_VALUES_RPS ON FHIRAPP.OPERATIONOUTCOME_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

CREATE INDEX FHIRAPP.IDX_OPERATIONOUTCOME_TOKEN_VALUES_PNCSCV ON FHIRAPP.OPERATIONOUTCOME_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.OPERATIONOUTCOME_TOKEN_VALUES ADD CONSTRAINT FK_OPERATIONOUTCOME_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.OPERATIONOUTCOME_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.OPERATIONOUTCOME_TOKEN_VALUES ADD CONSTRAINT FK_OPERATIONOUTCOME_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.OPERATIONOUTCOME_TOKEN_VALUES ADD CONSTRAINT FK_OPERATIONOUTCOME_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

CREATE PERMISSION FHIRAPP.OPERATIONOUTCOME_TOKEN_VALUES_TENANT                      ON FHIRAPP.OPERATIONOUTCOME_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.OPERATIONOUTCOME_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.OPERATIONOUTCOME_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.OPERATIONOUTCOME_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_OPERATIONOUTCOME_DATE_VALUES_RPV ON FHIRAPP.OPERATIONOUTCOME_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

CREATE INDEX FHIRAPP.IDX_OPERATIONOUTCOME_DATE_VALUES_PSER ON FHIRAPP.OPERATIONOUTCOME_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_OPERATIONOUTCOME_DATE_VALUES_RPSE ON FHIRAPP.OPERATIONOUTCOME_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

CREATE INDEX FHIRAPP.IDX_OPERATIONOUTCOME_DATE_VALUES_PVR ON FHIRAPP.OPERATIONOUTCOME_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_OPERATIONOUTCOME_DATE_VALUES_PESR ON FHIRAPP.OPERATIONOUTCOME_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.OPERATIONOUTCOME_DATE_VALUES ADD CONSTRAINT FK_OPERATIONOUTCOME_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.OPERATIONOUTCOME_DATE_VALUES ADD CONSTRAINT FK_OPERATIONOUTCOME_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.OPERATIONOUTCOME_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.OPERATIONOUTCOME_DATE_VALUES_TENANT                      ON FHIRAPP.OPERATIONOUTCOME_DATE_VALUES          FOR ROWS WHERE FHIRAPP.OPERATIONOUTCOME_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.OPERATIONOUTCOME_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.OPERATIONOUTCOME_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_OPERATIONOUTCOME_NUMBER_VALUES_PNNV ON FHIRAPP.OPERATIONOUTCOME_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_OPERATIONOUTCOME_NUMBER_VALUES_RPS ON FHIRAPP.OPERATIONOUTCOME_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

ALTER TABLE FHIRAPP.OPERATIONOUTCOME_NUMBER_VALUES ADD CONSTRAINT FK_OPERATIONOUTCOME_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.OPERATIONOUTCOME_NUMBER_VALUES ADD CONSTRAINT FK_OPERATIONOUTCOME_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.OPERATIONOUTCOME_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.OPERATIONOUTCOME_NUMBER_VALUES_TENANT                      ON FHIRAPP.OPERATIONOUTCOME_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.OPERATIONOUTCOME_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.OPERATIONOUTCOME_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.OPERATIONOUTCOME_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_OPERATIONOUTCOME_LATLNG_VALUES_PNNLV ON FHIRAPP.OPERATIONOUTCOME_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_OPERATIONOUTCOME_LATLNG_VALUES_RPLAT ON FHIRAPP.OPERATIONOUTCOME_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_OPERATIONOUTCOME_LATLNG_VALUES_PNNHV ON FHIRAPP.OPERATIONOUTCOME_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_OPERATIONOUTCOME_LATLNG_VALUES_RPLNG ON FHIRAPP.OPERATIONOUTCOME_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

ALTER TABLE FHIRAPP.OPERATIONOUTCOME_LATLNG_VALUES ADD CONSTRAINT FK_OPERATIONOUTCOME_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.OPERATIONOUTCOME_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.OPERATIONOUTCOME_LATLNG_VALUES ADD CONSTRAINT FK_OPERATIONOUTCOME_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.OPERATIONOUTCOME_LATLNG_VALUES_TENANT                      ON FHIRAPP.OPERATIONOUTCOME_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.OPERATIONOUTCOME_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.OPERATIONOUTCOME_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.OPERATIONOUTCOME_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_OPERATIONOUTCOME_QUANTITY_VALUES_RPCLHS ON FHIRAPP.OPERATIONOUTCOME_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_OPERATIONOUTCOME_QUANTITY_VALUES_PNNV ON FHIRAPP.OPERATIONOUTCOME_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_OPERATIONOUTCOME_QUANTITY_VALUES_PCLHSR ON FHIRAPP.OPERATIONOUTCOME_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_OPERATIONOUTCOME_QUANTITY_VALUES_RPS ON FHIRAPP.OPERATIONOUTCOME_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_OPERATIONOUTCOME_QUANTITY_VALUES_RPCHLS ON FHIRAPP.OPERATIONOUTCOME_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_OPERATIONOUTCOME_QUANTITY_VALUES_PCHLSR ON FHIRAPP.OPERATIONOUTCOME_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.OPERATIONOUTCOME_QUANTITY_VALUES ADD CONSTRAINT FK_OPERATIONOUTCOME_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.OPERATIONOUTCOME_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.OPERATIONOUTCOME_QUANTITY_VALUES ADD CONSTRAINT FK_OPERATIONOUTCOME_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.OPERATIONOUTCOME_QUANTITY_VALUES_TENANT                      ON FHIRAPP.OPERATIONOUTCOME_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.OPERATIONOUTCOME_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.OPERATIONOUTCOME_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.PROCEDURE_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT PROCEDURE_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.PROCEDURE_LOGICAL_RESOURCES ADD CONSTRAINT FK_PROCEDURE_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.PROCEDURE_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.PROCEDURE_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.PROCEDURE_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.PROCEDURE_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.PROCEDURE_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT PROCEDURE_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.PROCEDURE_RESOURCES_PRF_IN1 ON FHIRAPP.PROCEDURE_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.PROCEDURE_RESOURCES_TENANT                      ON FHIRAPP.PROCEDURE_RESOURCES          FOR ROWS WHERE FHIRAPP.PROCEDURE_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.PROCEDURE_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.PROCEDURE_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_PROCEDURE_STR_VALUES_PLR ON FHIRAPP.PROCEDURE_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_PROCEDURE_STR_VALUES_RPS ON FHIRAPP.PROCEDURE_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

CREATE INDEX FHIRAPP.IDX_PROCEDURE_STR_VALUES_PSR ON FHIRAPP.PROCEDURE_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_PROCEDURE_STR_VALUES_RPL ON FHIRAPP.PROCEDURE_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

ALTER TABLE FHIRAPP.PROCEDURE_STR_VALUES ADD CONSTRAINT FK_PROCEDURE_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.PROCEDURE_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.PROCEDURE_STR_VALUES ADD CONSTRAINT FK_PROCEDURE_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.PROCEDURE_STR_VALUES_TENANT                      ON FHIRAPP.PROCEDURE_STR_VALUES          FOR ROWS WHERE FHIRAPP.PROCEDURE_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.PROCEDURE_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.PROCEDURE_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_PROCEDURE_TOKEN_VALUES_RPS ON FHIRAPP.PROCEDURE_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

CREATE INDEX FHIRAPP.IDX_PROCEDURE_TOKEN_VALUES_PNCSCV ON FHIRAPP.PROCEDURE_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.PROCEDURE_TOKEN_VALUES ADD CONSTRAINT FK_PROCEDURE_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.PROCEDURE_TOKEN_VALUES ADD CONSTRAINT FK_PROCEDURE_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.PROCEDURE_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.PROCEDURE_TOKEN_VALUES ADD CONSTRAINT FK_PROCEDURE_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

CREATE PERMISSION FHIRAPP.PROCEDURE_TOKEN_VALUES_TENANT                      ON FHIRAPP.PROCEDURE_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.PROCEDURE_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.PROCEDURE_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.PROCEDURE_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_PROCEDURE_DATE_VALUES_RPV ON FHIRAPP.PROCEDURE_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

CREATE INDEX FHIRAPP.IDX_PROCEDURE_DATE_VALUES_PESR ON FHIRAPP.PROCEDURE_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_PROCEDURE_DATE_VALUES_PSER ON FHIRAPP.PROCEDURE_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_PROCEDURE_DATE_VALUES_RPSE ON FHIRAPP.PROCEDURE_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

CREATE INDEX FHIRAPP.IDX_PROCEDURE_DATE_VALUES_PVR ON FHIRAPP.PROCEDURE_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.PROCEDURE_DATE_VALUES ADD CONSTRAINT FK_PROCEDURE_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.PROCEDURE_DATE_VALUES ADD CONSTRAINT FK_PROCEDURE_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.PROCEDURE_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.PROCEDURE_DATE_VALUES_TENANT                      ON FHIRAPP.PROCEDURE_DATE_VALUES          FOR ROWS WHERE FHIRAPP.PROCEDURE_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.PROCEDURE_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.PROCEDURE_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_PROCEDURE_NUMBER_VALUES_RPS ON FHIRAPP.PROCEDURE_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

CREATE INDEX FHIRAPP.IDX_PROCEDURE_NUMBER_VALUES_PNNV ON FHIRAPP.PROCEDURE_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.PROCEDURE_NUMBER_VALUES ADD CONSTRAINT FK_PROCEDURE_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.PROCEDURE_NUMBER_VALUES ADD CONSTRAINT FK_PROCEDURE_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.PROCEDURE_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.PROCEDURE_NUMBER_VALUES_TENANT                      ON FHIRAPP.PROCEDURE_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.PROCEDURE_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.PROCEDURE_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.PROCEDURE_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_PROCEDURE_LATLNG_VALUES_PNNHV ON FHIRAPP.PROCEDURE_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_PROCEDURE_LATLNG_VALUES_RPLAT ON FHIRAPP.PROCEDURE_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_PROCEDURE_LATLNG_VALUES_PNNLV ON FHIRAPP.PROCEDURE_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_PROCEDURE_LATLNG_VALUES_RPLNG ON FHIRAPP.PROCEDURE_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

ALTER TABLE FHIRAPP.PROCEDURE_LATLNG_VALUES ADD CONSTRAINT FK_PROCEDURE_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.PROCEDURE_LATLNG_VALUES ADD CONSTRAINT FK_PROCEDURE_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.PROCEDURE_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.PROCEDURE_LATLNG_VALUES_TENANT                      ON FHIRAPP.PROCEDURE_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.PROCEDURE_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.PROCEDURE_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.PROCEDURE_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_PROCEDURE_QUANTITY_VALUES_RPS ON FHIRAPP.PROCEDURE_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_PROCEDURE_QUANTITY_VALUES_RPCLHS ON FHIRAPP.PROCEDURE_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_PROCEDURE_QUANTITY_VALUES_PCHLSR ON FHIRAPP.PROCEDURE_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_PROCEDURE_QUANTITY_VALUES_PNNV ON FHIRAPP.PROCEDURE_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_PROCEDURE_QUANTITY_VALUES_RPCHLS ON FHIRAPP.PROCEDURE_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_PROCEDURE_QUANTITY_VALUES_PCLHSR ON FHIRAPP.PROCEDURE_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.PROCEDURE_QUANTITY_VALUES ADD CONSTRAINT FK_PROCEDURE_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.PROCEDURE_QUANTITY_VALUES ADD CONSTRAINT FK_PROCEDURE_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.PROCEDURE_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.PROCEDURE_QUANTITY_VALUES_TENANT                      ON FHIRAPP.PROCEDURE_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.PROCEDURE_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.PROCEDURE_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.LIST_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT LIST_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.LIST_LOGICAL_RESOURCES ADD CONSTRAINT FK_LIST_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.LIST_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.LIST_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.LIST_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.LIST_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.LIST_LOGICAL_RESOURCE_ITEMS(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, RESOURCE_TYPE_ID INT NOT NULL, ITEM_LOGICAL_ID VARCHAR(255 OCTETS)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.LIST_LOGICAL_RESOURCE_ITEMS ADD CONSTRAINT FK_LIST_LOGICAL_RESOURCE_ITEMS_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LIST_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.LIST_LOGICAL_RESOURCE_ITEMS ADD CONSTRAINT FK_LIST_LOGICAL_RESOURCE_ITEMS_RTID FOREIGN KEY(MT_ID,RESOURCE_TYPE_ID) REFERENCES FHIRAPP.RESOURCE_TYPES;

CREATE PERMISSION FHIRAPP.LIST_LOGICAL_RESOURCE_ITEMS_TENANT                      ON FHIRAPP.LIST_LOGICAL_RESOURCE_ITEMS          FOR ROWS WHERE FHIRAPP.LIST_LOGICAL_RESOURCE_ITEMS.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.LIST_LOGICAL_RESOURCE_ITEMS ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.LIST_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT LIST_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.LIST_RESOURCES_PRF_IN1 ON FHIRAPP.LIST_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.LIST_RESOURCES_TENANT                      ON FHIRAPP.LIST_RESOURCES          FOR ROWS WHERE FHIRAPP.LIST_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.LIST_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.LIST_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_LIST_STR_VALUES_PLR ON FHIRAPP.LIST_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_LIST_STR_VALUES_RPS ON FHIRAPP.LIST_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

CREATE INDEX FHIRAPP.IDX_LIST_STR_VALUES_PSR ON FHIRAPP.LIST_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_LIST_STR_VALUES_RPL ON FHIRAPP.LIST_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

ALTER TABLE FHIRAPP.LIST_STR_VALUES ADD CONSTRAINT FK_LIST_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.LIST_STR_VALUES ADD CONSTRAINT FK_LIST_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LIST_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.LIST_STR_VALUES_TENANT                      ON FHIRAPP.LIST_STR_VALUES          FOR ROWS WHERE FHIRAPP.LIST_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.LIST_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.LIST_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_LIST_TOKEN_VALUES_PNCSCV ON FHIRAPP.LIST_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_LIST_TOKEN_VALUES_RPS ON FHIRAPP.LIST_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

ALTER TABLE FHIRAPP.LIST_TOKEN_VALUES ADD CONSTRAINT FK_LIST_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

ALTER TABLE FHIRAPP.LIST_TOKEN_VALUES ADD CONSTRAINT FK_LIST_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.LIST_TOKEN_VALUES ADD CONSTRAINT FK_LIST_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LIST_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.LIST_TOKEN_VALUES_TENANT                      ON FHIRAPP.LIST_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.LIST_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.LIST_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.LIST_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_LIST_DATE_VALUES_RPV ON FHIRAPP.LIST_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

CREATE INDEX FHIRAPP.IDX_LIST_DATE_VALUES_RPSE ON FHIRAPP.LIST_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

CREATE INDEX FHIRAPP.IDX_LIST_DATE_VALUES_PSER ON FHIRAPP.LIST_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_LIST_DATE_VALUES_PESR ON FHIRAPP.LIST_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_LIST_DATE_VALUES_PVR ON FHIRAPP.LIST_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.LIST_DATE_VALUES ADD CONSTRAINT FK_LIST_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LIST_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.LIST_DATE_VALUES ADD CONSTRAINT FK_LIST_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.LIST_DATE_VALUES_TENANT                      ON FHIRAPP.LIST_DATE_VALUES          FOR ROWS WHERE FHIRAPP.LIST_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.LIST_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.LIST_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_LIST_NUMBER_VALUES_RPS ON FHIRAPP.LIST_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

CREATE INDEX FHIRAPP.IDX_LIST_NUMBER_VALUES_PNNV ON FHIRAPP.LIST_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.LIST_NUMBER_VALUES ADD CONSTRAINT FK_LIST_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LIST_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.LIST_NUMBER_VALUES ADD CONSTRAINT FK_LIST_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.LIST_NUMBER_VALUES_TENANT                      ON FHIRAPP.LIST_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.LIST_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.LIST_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.LIST_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_LIST_LATLNG_VALUES_PNNLV ON FHIRAPP.LIST_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_LIST_LATLNG_VALUES_RPLNG ON FHIRAPP.LIST_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_LIST_LATLNG_VALUES_RPLAT ON FHIRAPP.LIST_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_LIST_LATLNG_VALUES_PNNHV ON FHIRAPP.LIST_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.LIST_LATLNG_VALUES ADD CONSTRAINT FK_LIST_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.LIST_LATLNG_VALUES ADD CONSTRAINT FK_LIST_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LIST_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.LIST_LATLNG_VALUES_TENANT                      ON FHIRAPP.LIST_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.LIST_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.LIST_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.LIST_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_LIST_QUANTITY_VALUES_RPCLHS ON FHIRAPP.LIST_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_LIST_QUANTITY_VALUES_PCLHSR ON FHIRAPP.LIST_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_LIST_QUANTITY_VALUES_RPS ON FHIRAPP.LIST_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_LIST_QUANTITY_VALUES_RPCHLS ON FHIRAPP.LIST_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_LIST_QUANTITY_VALUES_PNNV ON FHIRAPP.LIST_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_LIST_QUANTITY_VALUES_PCHLSR ON FHIRAPP.LIST_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.LIST_QUANTITY_VALUES ADD CONSTRAINT FK_LIST_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LIST_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.LIST_QUANTITY_VALUES ADD CONSTRAINT FK_LIST_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.LIST_QUANTITY_VALUES_TENANT                      ON FHIRAPP.LIST_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.LIST_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.LIST_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.CONCEPTMAP_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT CONCEPTMAP_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.CONCEPTMAP_LOGICAL_RESOURCES ADD CONSTRAINT FK_CONCEPTMAP_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.CONCEPTMAP_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.CONCEPTMAP_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.CONCEPTMAP_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.CONCEPTMAP_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.CONCEPTMAP_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT CONCEPTMAP_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.CONCEPTMAP_RESOURCES_PRF_IN1 ON FHIRAPP.CONCEPTMAP_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.CONCEPTMAP_RESOURCES_TENANT                      ON FHIRAPP.CONCEPTMAP_RESOURCES          FOR ROWS WHERE FHIRAPP.CONCEPTMAP_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.CONCEPTMAP_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.CONCEPTMAP_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_CONCEPTMAP_STR_VALUES_PLR ON FHIRAPP.CONCEPTMAP_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_CONCEPTMAP_STR_VALUES_RPS ON FHIRAPP.CONCEPTMAP_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

CREATE INDEX FHIRAPP.IDX_CONCEPTMAP_STR_VALUES_RPL ON FHIRAPP.CONCEPTMAP_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

CREATE INDEX FHIRAPP.IDX_CONCEPTMAP_STR_VALUES_PSR ON FHIRAPP.CONCEPTMAP_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.CONCEPTMAP_STR_VALUES ADD CONSTRAINT FK_CONCEPTMAP_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.CONCEPTMAP_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.CONCEPTMAP_STR_VALUES ADD CONSTRAINT FK_CONCEPTMAP_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.CONCEPTMAP_STR_VALUES_TENANT                      ON FHIRAPP.CONCEPTMAP_STR_VALUES          FOR ROWS WHERE FHIRAPP.CONCEPTMAP_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.CONCEPTMAP_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.CONCEPTMAP_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_CONCEPTMAP_TOKEN_VALUES_PNCSCV ON FHIRAPP.CONCEPTMAP_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_CONCEPTMAP_TOKEN_VALUES_RPS ON FHIRAPP.CONCEPTMAP_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

ALTER TABLE FHIRAPP.CONCEPTMAP_TOKEN_VALUES ADD CONSTRAINT FK_CONCEPTMAP_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.CONCEPTMAP_TOKEN_VALUES ADD CONSTRAINT FK_CONCEPTMAP_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

ALTER TABLE FHIRAPP.CONCEPTMAP_TOKEN_VALUES ADD CONSTRAINT FK_CONCEPTMAP_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.CONCEPTMAP_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.CONCEPTMAP_TOKEN_VALUES_TENANT                      ON FHIRAPP.CONCEPTMAP_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.CONCEPTMAP_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.CONCEPTMAP_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.CONCEPTMAP_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_CONCEPTMAP_DATE_VALUES_RPSE ON FHIRAPP.CONCEPTMAP_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

CREATE INDEX FHIRAPP.IDX_CONCEPTMAP_DATE_VALUES_PESR ON FHIRAPP.CONCEPTMAP_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_CONCEPTMAP_DATE_VALUES_PVR ON FHIRAPP.CONCEPTMAP_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_CONCEPTMAP_DATE_VALUES_PSER ON FHIRAPP.CONCEPTMAP_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_CONCEPTMAP_DATE_VALUES_RPV ON FHIRAPP.CONCEPTMAP_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

ALTER TABLE FHIRAPP.CONCEPTMAP_DATE_VALUES ADD CONSTRAINT FK_CONCEPTMAP_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.CONCEPTMAP_DATE_VALUES ADD CONSTRAINT FK_CONCEPTMAP_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.CONCEPTMAP_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.CONCEPTMAP_DATE_VALUES_TENANT                      ON FHIRAPP.CONCEPTMAP_DATE_VALUES          FOR ROWS WHERE FHIRAPP.CONCEPTMAP_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.CONCEPTMAP_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.CONCEPTMAP_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_CONCEPTMAP_NUMBER_VALUES_PNNV ON FHIRAPP.CONCEPTMAP_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_CONCEPTMAP_NUMBER_VALUES_RPS ON FHIRAPP.CONCEPTMAP_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

ALTER TABLE FHIRAPP.CONCEPTMAP_NUMBER_VALUES ADD CONSTRAINT FK_CONCEPTMAP_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.CONCEPTMAP_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.CONCEPTMAP_NUMBER_VALUES ADD CONSTRAINT FK_CONCEPTMAP_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.CONCEPTMAP_NUMBER_VALUES_TENANT                      ON FHIRAPP.CONCEPTMAP_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.CONCEPTMAP_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.CONCEPTMAP_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.CONCEPTMAP_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_CONCEPTMAP_LATLNG_VALUES_RPLAT ON FHIRAPP.CONCEPTMAP_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_CONCEPTMAP_LATLNG_VALUES_PNNLV ON FHIRAPP.CONCEPTMAP_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_CONCEPTMAP_LATLNG_VALUES_PNNHV ON FHIRAPP.CONCEPTMAP_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_CONCEPTMAP_LATLNG_VALUES_RPLNG ON FHIRAPP.CONCEPTMAP_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

ALTER TABLE FHIRAPP.CONCEPTMAP_LATLNG_VALUES ADD CONSTRAINT FK_CONCEPTMAP_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.CONCEPTMAP_LATLNG_VALUES ADD CONSTRAINT FK_CONCEPTMAP_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.CONCEPTMAP_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.CONCEPTMAP_LATLNG_VALUES_TENANT                      ON FHIRAPP.CONCEPTMAP_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.CONCEPTMAP_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.CONCEPTMAP_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.CONCEPTMAP_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_CONCEPTMAP_QUANTITY_VALUES_PCLHSR ON FHIRAPP.CONCEPTMAP_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_CONCEPTMAP_QUANTITY_VALUES_RPCHLS ON FHIRAPP.CONCEPTMAP_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_CONCEPTMAP_QUANTITY_VALUES_PNNV ON FHIRAPP.CONCEPTMAP_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_CONCEPTMAP_QUANTITY_VALUES_PCHLSR ON FHIRAPP.CONCEPTMAP_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_CONCEPTMAP_QUANTITY_VALUES_RPS ON FHIRAPP.CONCEPTMAP_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_CONCEPTMAP_QUANTITY_VALUES_RPCLHS ON FHIRAPP.CONCEPTMAP_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

ALTER TABLE FHIRAPP.CONCEPTMAP_QUANTITY_VALUES ADD CONSTRAINT FK_CONCEPTMAP_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.CONCEPTMAP_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.CONCEPTMAP_QUANTITY_VALUES ADD CONSTRAINT FK_CONCEPTMAP_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.CONCEPTMAP_QUANTITY_VALUES_TENANT                      ON FHIRAPP.CONCEPTMAP_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.CONCEPTMAP_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.CONCEPTMAP_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.OPERATIONDEFINITION_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT OPERATIONDEFINITION_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.OPERATIONDEFINITION_LOGICAL_RESOURCES ADD CONSTRAINT FK_OPERATIONDEFINITION_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.OPERATIONDEFINITION_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.OPERATIONDEFINITION_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.OPERATIONDEFINITION_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.OPERATIONDEFINITION_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.OPERATIONDEFINITION_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT OPERATIONDEFINITION_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.OPERATIONDEFINITION_RESOURCES_PRF_IN1 ON FHIRAPP.OPERATIONDEFINITION_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.OPERATIONDEFINITION_RESOURCES_TENANT                      ON FHIRAPP.OPERATIONDEFINITION_RESOURCES          FOR ROWS WHERE FHIRAPP.OPERATIONDEFINITION_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.OPERATIONDEFINITION_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.OPERATIONDEFINITION_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_OPERATIONDEFINITION_STR_VALUES_RPS ON FHIRAPP.OPERATIONDEFINITION_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

CREATE INDEX FHIRAPP.IDX_OPERATIONDEFINITION_STR_VALUES_PLR ON FHIRAPP.OPERATIONDEFINITION_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_OPERATIONDEFINITION_STR_VALUES_PSR ON FHIRAPP.OPERATIONDEFINITION_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_OPERATIONDEFINITION_STR_VALUES_RPL ON FHIRAPP.OPERATIONDEFINITION_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

ALTER TABLE FHIRAPP.OPERATIONDEFINITION_STR_VALUES ADD CONSTRAINT FK_OPERATIONDEFINITION_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.OPERATIONDEFINITION_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.OPERATIONDEFINITION_STR_VALUES ADD CONSTRAINT FK_OPERATIONDEFINITION_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.OPERATIONDEFINITION_STR_VALUES_TENANT                      ON FHIRAPP.OPERATIONDEFINITION_STR_VALUES          FOR ROWS WHERE FHIRAPP.OPERATIONDEFINITION_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.OPERATIONDEFINITION_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.OPERATIONDEFINITION_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_OPERATIONDEFINITION_TOKEN_VALUES_RPS ON FHIRAPP.OPERATIONDEFINITION_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

CREATE INDEX FHIRAPP.IDX_OPERATIONDEFINITION_TOKEN_VALUES_PNCSCV ON FHIRAPP.OPERATIONDEFINITION_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.OPERATIONDEFINITION_TOKEN_VALUES ADD CONSTRAINT FK_OPERATIONDEFINITION_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.OPERATIONDEFINITION_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.OPERATIONDEFINITION_TOKEN_VALUES ADD CONSTRAINT FK_OPERATIONDEFINITION_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

ALTER TABLE FHIRAPP.OPERATIONDEFINITION_TOKEN_VALUES ADD CONSTRAINT FK_OPERATIONDEFINITION_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.OPERATIONDEFINITION_TOKEN_VALUES_TENANT                      ON FHIRAPP.OPERATIONDEFINITION_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.OPERATIONDEFINITION_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.OPERATIONDEFINITION_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.OPERATIONDEFINITION_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_OPERATIONDEFINITION_DATE_VALUES_PESR ON FHIRAPP.OPERATIONDEFINITION_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_OPERATIONDEFINITION_DATE_VALUES_PVR ON FHIRAPP.OPERATIONDEFINITION_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_OPERATIONDEFINITION_DATE_VALUES_PSER ON FHIRAPP.OPERATIONDEFINITION_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_OPERATIONDEFINITION_DATE_VALUES_RPSE ON FHIRAPP.OPERATIONDEFINITION_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

CREATE INDEX FHIRAPP.IDX_OPERATIONDEFINITION_DATE_VALUES_RPV ON FHIRAPP.OPERATIONDEFINITION_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

ALTER TABLE FHIRAPP.OPERATIONDEFINITION_DATE_VALUES ADD CONSTRAINT FK_OPERATIONDEFINITION_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.OPERATIONDEFINITION_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.OPERATIONDEFINITION_DATE_VALUES ADD CONSTRAINT FK_OPERATIONDEFINITION_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.OPERATIONDEFINITION_DATE_VALUES_TENANT                      ON FHIRAPP.OPERATIONDEFINITION_DATE_VALUES          FOR ROWS WHERE FHIRAPP.OPERATIONDEFINITION_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.OPERATIONDEFINITION_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.OPERATIONDEFINITION_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_OPERATIONDEFINITION_NUMBER_VALUES_RPS ON FHIRAPP.OPERATIONDEFINITION_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

CREATE INDEX FHIRAPP.IDX_OPERATIONDEFINITION_NUMBER_VALUES_PNNV ON FHIRAPP.OPERATIONDEFINITION_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.OPERATIONDEFINITION_NUMBER_VALUES ADD CONSTRAINT FK_OPERATIONDEFINITION_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.OPERATIONDEFINITION_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.OPERATIONDEFINITION_NUMBER_VALUES ADD CONSTRAINT FK_OPERATIONDEFINITION_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.OPERATIONDEFINITION_NUMBER_VALUES_TENANT                      ON FHIRAPP.OPERATIONDEFINITION_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.OPERATIONDEFINITION_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.OPERATIONDEFINITION_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.OPERATIONDEFINITION_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_OPERATIONDEFINITION_LATLNG_VALUES_PNNHV ON FHIRAPP.OPERATIONDEFINITION_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_OPERATIONDEFINITION_LATLNG_VALUES_RPLAT ON FHIRAPP.OPERATIONDEFINITION_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_OPERATIONDEFINITION_LATLNG_VALUES_PNNLV ON FHIRAPP.OPERATIONDEFINITION_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_OPERATIONDEFINITION_LATLNG_VALUES_RPLNG ON FHIRAPP.OPERATIONDEFINITION_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

ALTER TABLE FHIRAPP.OPERATIONDEFINITION_LATLNG_VALUES ADD CONSTRAINT FK_OPERATIONDEFINITION_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.OPERATIONDEFINITION_LATLNG_VALUES ADD CONSTRAINT FK_OPERATIONDEFINITION_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.OPERATIONDEFINITION_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.OPERATIONDEFINITION_LATLNG_VALUES_TENANT                      ON FHIRAPP.OPERATIONDEFINITION_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.OPERATIONDEFINITION_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.OPERATIONDEFINITION_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.OPERATIONDEFINITION_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_OPERATIONDEFINITION_QUANTITY_VALUES_RPS ON FHIRAPP.OPERATIONDEFINITION_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_OPERATIONDEFINITION_QUANTITY_VALUES_PNNV ON FHIRAPP.OPERATIONDEFINITION_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_OPERATIONDEFINITION_QUANTITY_VALUES_RPCHLS ON FHIRAPP.OPERATIONDEFINITION_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_OPERATIONDEFINITION_QUANTITY_VALUES_PCHLSR ON FHIRAPP.OPERATIONDEFINITION_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_OPERATIONDEFINITION_QUANTITY_VALUES_PCLHSR ON FHIRAPP.OPERATIONDEFINITION_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_OPERATIONDEFINITION_QUANTITY_VALUES_RPCLHS ON FHIRAPP.OPERATIONDEFINITION_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

ALTER TABLE FHIRAPP.OPERATIONDEFINITION_QUANTITY_VALUES ADD CONSTRAINT FK_OPERATIONDEFINITION_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.OPERATIONDEFINITION_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.OPERATIONDEFINITION_QUANTITY_VALUES ADD CONSTRAINT FK_OPERATIONDEFINITION_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.OPERATIONDEFINITION_QUANTITY_VALUES_TENANT                      ON FHIRAPP.OPERATIONDEFINITION_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.OPERATIONDEFINITION_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.OPERATIONDEFINITION_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.VALUESET_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT VALUESET_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.VALUESET_LOGICAL_RESOURCES ADD CONSTRAINT FK_VALUESET_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.VALUESET_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.VALUESET_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.VALUESET_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.VALUESET_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.VALUESET_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT VALUESET_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.VALUESET_RESOURCES_PRF_IN1 ON FHIRAPP.VALUESET_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.VALUESET_RESOURCES_TENANT                      ON FHIRAPP.VALUESET_RESOURCES          FOR ROWS WHERE FHIRAPP.VALUESET_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.VALUESET_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.VALUESET_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_VALUESET_STR_VALUES_PLR ON FHIRAPP.VALUESET_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_VALUESET_STR_VALUES_RPS ON FHIRAPP.VALUESET_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

CREATE INDEX FHIRAPP.IDX_VALUESET_STR_VALUES_RPL ON FHIRAPP.VALUESET_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

CREATE INDEX FHIRAPP.IDX_VALUESET_STR_VALUES_PSR ON FHIRAPP.VALUESET_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.VALUESET_STR_VALUES ADD CONSTRAINT FK_VALUESET_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.VALUESET_STR_VALUES ADD CONSTRAINT FK_VALUESET_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.VALUESET_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.VALUESET_STR_VALUES_TENANT                      ON FHIRAPP.VALUESET_STR_VALUES          FOR ROWS WHERE FHIRAPP.VALUESET_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.VALUESET_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.VALUESET_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_VALUESET_TOKEN_VALUES_PNCSCV ON FHIRAPP.VALUESET_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_VALUESET_TOKEN_VALUES_RPS ON FHIRAPP.VALUESET_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

ALTER TABLE FHIRAPP.VALUESET_TOKEN_VALUES ADD CONSTRAINT FK_VALUESET_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.VALUESET_TOKEN_VALUES ADD CONSTRAINT FK_VALUESET_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

ALTER TABLE FHIRAPP.VALUESET_TOKEN_VALUES ADD CONSTRAINT FK_VALUESET_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.VALUESET_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.VALUESET_TOKEN_VALUES_TENANT                      ON FHIRAPP.VALUESET_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.VALUESET_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.VALUESET_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.VALUESET_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_VALUESET_DATE_VALUES_PVR ON FHIRAPP.VALUESET_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_VALUESET_DATE_VALUES_PESR ON FHIRAPP.VALUESET_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_VALUESET_DATE_VALUES_RPV ON FHIRAPP.VALUESET_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

CREATE INDEX FHIRAPP.IDX_VALUESET_DATE_VALUES_PSER ON FHIRAPP.VALUESET_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_VALUESET_DATE_VALUES_RPSE ON FHIRAPP.VALUESET_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

ALTER TABLE FHIRAPP.VALUESET_DATE_VALUES ADD CONSTRAINT FK_VALUESET_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.VALUESET_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.VALUESET_DATE_VALUES ADD CONSTRAINT FK_VALUESET_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.VALUESET_DATE_VALUES_TENANT                      ON FHIRAPP.VALUESET_DATE_VALUES          FOR ROWS WHERE FHIRAPP.VALUESET_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.VALUESET_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.VALUESET_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_VALUESET_NUMBER_VALUES_PNNV ON FHIRAPP.VALUESET_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_VALUESET_NUMBER_VALUES_RPS ON FHIRAPP.VALUESET_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

ALTER TABLE FHIRAPP.VALUESET_NUMBER_VALUES ADD CONSTRAINT FK_VALUESET_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.VALUESET_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.VALUESET_NUMBER_VALUES ADD CONSTRAINT FK_VALUESET_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.VALUESET_NUMBER_VALUES_TENANT                      ON FHIRAPP.VALUESET_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.VALUESET_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.VALUESET_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.VALUESET_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_VALUESET_LATLNG_VALUES_RPLNG ON FHIRAPP.VALUESET_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_VALUESET_LATLNG_VALUES_PNNLV ON FHIRAPP.VALUESET_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_VALUESET_LATLNG_VALUES_PNNHV ON FHIRAPP.VALUESET_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_VALUESET_LATLNG_VALUES_RPLAT ON FHIRAPP.VALUESET_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

ALTER TABLE FHIRAPP.VALUESET_LATLNG_VALUES ADD CONSTRAINT FK_VALUESET_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.VALUESET_LATLNG_VALUES ADD CONSTRAINT FK_VALUESET_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.VALUESET_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.VALUESET_LATLNG_VALUES_TENANT                      ON FHIRAPP.VALUESET_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.VALUESET_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.VALUESET_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.VALUESET_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_VALUESET_QUANTITY_VALUES_PNNV ON FHIRAPP.VALUESET_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_VALUESET_QUANTITY_VALUES_RPCLHS ON FHIRAPP.VALUESET_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_VALUESET_QUANTITY_VALUES_PCLHSR ON FHIRAPP.VALUESET_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_VALUESET_QUANTITY_VALUES_RPS ON FHIRAPP.VALUESET_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_VALUESET_QUANTITY_VALUES_RPCHLS ON FHIRAPP.VALUESET_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_VALUESET_QUANTITY_VALUES_PCHLSR ON FHIRAPP.VALUESET_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.VALUESET_QUANTITY_VALUES ADD CONSTRAINT FK_VALUESET_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.VALUESET_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.VALUESET_QUANTITY_VALUES ADD CONSTRAINT FK_VALUESET_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.VALUESET_QUANTITY_VALUES_TENANT                      ON FHIRAPP.VALUESET_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.VALUESET_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.VALUESET_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.IMMUNIZATION_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT IMMUNIZATION_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.IMMUNIZATION_LOGICAL_RESOURCES ADD CONSTRAINT FK_IMMUNIZATION_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.IMMUNIZATION_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.IMMUNIZATION_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.IMMUNIZATION_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.IMMUNIZATION_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.IMMUNIZATION_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT IMMUNIZATION_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.IMMUNIZATION_RESOURCES_PRF_IN1 ON FHIRAPP.IMMUNIZATION_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.IMMUNIZATION_RESOURCES_TENANT                      ON FHIRAPP.IMMUNIZATION_RESOURCES          FOR ROWS WHERE FHIRAPP.IMMUNIZATION_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.IMMUNIZATION_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.IMMUNIZATION_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_IMMUNIZATION_STR_VALUES_RPS ON FHIRAPP.IMMUNIZATION_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

CREATE INDEX FHIRAPP.IDX_IMMUNIZATION_STR_VALUES_PLR ON FHIRAPP.IMMUNIZATION_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_IMMUNIZATION_STR_VALUES_PSR ON FHIRAPP.IMMUNIZATION_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_IMMUNIZATION_STR_VALUES_RPL ON FHIRAPP.IMMUNIZATION_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

ALTER TABLE FHIRAPP.IMMUNIZATION_STR_VALUES ADD CONSTRAINT FK_IMMUNIZATION_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.IMMUNIZATION_STR_VALUES ADD CONSTRAINT FK_IMMUNIZATION_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.IMMUNIZATION_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.IMMUNIZATION_STR_VALUES_TENANT                      ON FHIRAPP.IMMUNIZATION_STR_VALUES          FOR ROWS WHERE FHIRAPP.IMMUNIZATION_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.IMMUNIZATION_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.IMMUNIZATION_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_IMMUNIZATION_TOKEN_VALUES_RPS ON FHIRAPP.IMMUNIZATION_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

CREATE INDEX FHIRAPP.IDX_IMMUNIZATION_TOKEN_VALUES_PNCSCV ON FHIRAPP.IMMUNIZATION_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.IMMUNIZATION_TOKEN_VALUES ADD CONSTRAINT FK_IMMUNIZATION_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

ALTER TABLE FHIRAPP.IMMUNIZATION_TOKEN_VALUES ADD CONSTRAINT FK_IMMUNIZATION_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.IMMUNIZATION_TOKEN_VALUES ADD CONSTRAINT FK_IMMUNIZATION_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.IMMUNIZATION_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.IMMUNIZATION_TOKEN_VALUES_TENANT                      ON FHIRAPP.IMMUNIZATION_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.IMMUNIZATION_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.IMMUNIZATION_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.IMMUNIZATION_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_IMMUNIZATION_DATE_VALUES_PESR ON FHIRAPP.IMMUNIZATION_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_IMMUNIZATION_DATE_VALUES_PVR ON FHIRAPP.IMMUNIZATION_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_IMMUNIZATION_DATE_VALUES_RPV ON FHIRAPP.IMMUNIZATION_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

CREATE INDEX FHIRAPP.IDX_IMMUNIZATION_DATE_VALUES_PSER ON FHIRAPP.IMMUNIZATION_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_IMMUNIZATION_DATE_VALUES_RPSE ON FHIRAPP.IMMUNIZATION_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

ALTER TABLE FHIRAPP.IMMUNIZATION_DATE_VALUES ADD CONSTRAINT FK_IMMUNIZATION_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.IMMUNIZATION_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.IMMUNIZATION_DATE_VALUES ADD CONSTRAINT FK_IMMUNIZATION_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.IMMUNIZATION_DATE_VALUES_TENANT                      ON FHIRAPP.IMMUNIZATION_DATE_VALUES          FOR ROWS WHERE FHIRAPP.IMMUNIZATION_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.IMMUNIZATION_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.IMMUNIZATION_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_IMMUNIZATION_NUMBER_VALUES_RPS ON FHIRAPP.IMMUNIZATION_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

CREATE INDEX FHIRAPP.IDX_IMMUNIZATION_NUMBER_VALUES_PNNV ON FHIRAPP.IMMUNIZATION_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.IMMUNIZATION_NUMBER_VALUES ADD CONSTRAINT FK_IMMUNIZATION_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.IMMUNIZATION_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.IMMUNIZATION_NUMBER_VALUES ADD CONSTRAINT FK_IMMUNIZATION_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.IMMUNIZATION_NUMBER_VALUES_TENANT                      ON FHIRAPP.IMMUNIZATION_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.IMMUNIZATION_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.IMMUNIZATION_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.IMMUNIZATION_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_IMMUNIZATION_LATLNG_VALUES_PNNLV ON FHIRAPP.IMMUNIZATION_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_IMMUNIZATION_LATLNG_VALUES_PNNHV ON FHIRAPP.IMMUNIZATION_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_IMMUNIZATION_LATLNG_VALUES_RPLAT ON FHIRAPP.IMMUNIZATION_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_IMMUNIZATION_LATLNG_VALUES_RPLNG ON FHIRAPP.IMMUNIZATION_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

ALTER TABLE FHIRAPP.IMMUNIZATION_LATLNG_VALUES ADD CONSTRAINT FK_IMMUNIZATION_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.IMMUNIZATION_LATLNG_VALUES ADD CONSTRAINT FK_IMMUNIZATION_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.IMMUNIZATION_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.IMMUNIZATION_LATLNG_VALUES_TENANT                      ON FHIRAPP.IMMUNIZATION_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.IMMUNIZATION_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.IMMUNIZATION_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.IMMUNIZATION_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_IMMUNIZATION_QUANTITY_VALUES_PCLHSR ON FHIRAPP.IMMUNIZATION_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_IMMUNIZATION_QUANTITY_VALUES_RPCHLS ON FHIRAPP.IMMUNIZATION_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_IMMUNIZATION_QUANTITY_VALUES_PCHLSR ON FHIRAPP.IMMUNIZATION_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_IMMUNIZATION_QUANTITY_VALUES_PNNV ON FHIRAPP.IMMUNIZATION_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_IMMUNIZATION_QUANTITY_VALUES_RPS ON FHIRAPP.IMMUNIZATION_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_IMMUNIZATION_QUANTITY_VALUES_RPCLHS ON FHIRAPP.IMMUNIZATION_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

ALTER TABLE FHIRAPP.IMMUNIZATION_QUANTITY_VALUES ADD CONSTRAINT FK_IMMUNIZATION_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.IMMUNIZATION_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.IMMUNIZATION_QUANTITY_VALUES ADD CONSTRAINT FK_IMMUNIZATION_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.IMMUNIZATION_QUANTITY_VALUES_TENANT                      ON FHIRAPP.IMMUNIZATION_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.IMMUNIZATION_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.IMMUNIZATION_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDICATIONREQUEST_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT MEDICATIONREQUEST_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.MEDICATIONREQUEST_LOGICAL_RESOURCES ADD CONSTRAINT FK_MEDICATIONREQUEST_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.MEDICATIONREQUEST_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.MEDICATIONREQUEST_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.MEDICATIONREQUEST_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDICATIONREQUEST_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDICATIONREQUEST_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT MEDICATIONREQUEST_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.MEDICATIONREQUEST_RESOURCES_PRF_IN1 ON FHIRAPP.MEDICATIONREQUEST_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.MEDICATIONREQUEST_RESOURCES_TENANT                      ON FHIRAPP.MEDICATIONREQUEST_RESOURCES          FOR ROWS WHERE FHIRAPP.MEDICATIONREQUEST_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDICATIONREQUEST_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDICATIONREQUEST_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_MEDICATIONREQUEST_STR_VALUES_RPS ON FHIRAPP.MEDICATIONREQUEST_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

CREATE INDEX FHIRAPP.IDX_MEDICATIONREQUEST_STR_VALUES_PSR ON FHIRAPP.MEDICATIONREQUEST_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEDICATIONREQUEST_STR_VALUES_RPL ON FHIRAPP.MEDICATIONREQUEST_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

CREATE INDEX FHIRAPP.IDX_MEDICATIONREQUEST_STR_VALUES_PLR ON FHIRAPP.MEDICATIONREQUEST_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.MEDICATIONREQUEST_STR_VALUES ADD CONSTRAINT FK_MEDICATIONREQUEST_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.MEDICATIONREQUEST_STR_VALUES ADD CONSTRAINT FK_MEDICATIONREQUEST_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.MEDICATIONREQUEST_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.MEDICATIONREQUEST_STR_VALUES_TENANT                      ON FHIRAPP.MEDICATIONREQUEST_STR_VALUES          FOR ROWS WHERE FHIRAPP.MEDICATIONREQUEST_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDICATIONREQUEST_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDICATIONREQUEST_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_MEDICATIONREQUEST_TOKEN_VALUES_PNCSCV ON FHIRAPP.MEDICATIONREQUEST_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEDICATIONREQUEST_TOKEN_VALUES_RPS ON FHIRAPP.MEDICATIONREQUEST_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

ALTER TABLE FHIRAPP.MEDICATIONREQUEST_TOKEN_VALUES ADD CONSTRAINT FK_MEDICATIONREQUEST_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

ALTER TABLE FHIRAPP.MEDICATIONREQUEST_TOKEN_VALUES ADD CONSTRAINT FK_MEDICATIONREQUEST_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.MEDICATIONREQUEST_TOKEN_VALUES ADD CONSTRAINT FK_MEDICATIONREQUEST_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.MEDICATIONREQUEST_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.MEDICATIONREQUEST_TOKEN_VALUES_TENANT                      ON FHIRAPP.MEDICATIONREQUEST_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.MEDICATIONREQUEST_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDICATIONREQUEST_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDICATIONREQUEST_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_MEDICATIONREQUEST_DATE_VALUES_RPSE ON FHIRAPP.MEDICATIONREQUEST_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

CREATE INDEX FHIRAPP.IDX_MEDICATIONREQUEST_DATE_VALUES_PSER ON FHIRAPP.MEDICATIONREQUEST_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEDICATIONREQUEST_DATE_VALUES_RPV ON FHIRAPP.MEDICATIONREQUEST_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

CREATE INDEX FHIRAPP.IDX_MEDICATIONREQUEST_DATE_VALUES_PVR ON FHIRAPP.MEDICATIONREQUEST_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEDICATIONREQUEST_DATE_VALUES_PESR ON FHIRAPP.MEDICATIONREQUEST_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.MEDICATIONREQUEST_DATE_VALUES ADD CONSTRAINT FK_MEDICATIONREQUEST_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.MEDICATIONREQUEST_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.MEDICATIONREQUEST_DATE_VALUES ADD CONSTRAINT FK_MEDICATIONREQUEST_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.MEDICATIONREQUEST_DATE_VALUES_TENANT                      ON FHIRAPP.MEDICATIONREQUEST_DATE_VALUES          FOR ROWS WHERE FHIRAPP.MEDICATIONREQUEST_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDICATIONREQUEST_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDICATIONREQUEST_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_MEDICATIONREQUEST_NUMBER_VALUES_PNNV ON FHIRAPP.MEDICATIONREQUEST_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEDICATIONREQUEST_NUMBER_VALUES_RPS ON FHIRAPP.MEDICATIONREQUEST_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

ALTER TABLE FHIRAPP.MEDICATIONREQUEST_NUMBER_VALUES ADD CONSTRAINT FK_MEDICATIONREQUEST_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.MEDICATIONREQUEST_NUMBER_VALUES ADD CONSTRAINT FK_MEDICATIONREQUEST_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.MEDICATIONREQUEST_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.MEDICATIONREQUEST_NUMBER_VALUES_TENANT                      ON FHIRAPP.MEDICATIONREQUEST_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.MEDICATIONREQUEST_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDICATIONREQUEST_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDICATIONREQUEST_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_MEDICATIONREQUEST_LATLNG_VALUES_PNNHV ON FHIRAPP.MEDICATIONREQUEST_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEDICATIONREQUEST_LATLNG_VALUES_RPLAT ON FHIRAPP.MEDICATIONREQUEST_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_MEDICATIONREQUEST_LATLNG_VALUES_PNNLV ON FHIRAPP.MEDICATIONREQUEST_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEDICATIONREQUEST_LATLNG_VALUES_RPLNG ON FHIRAPP.MEDICATIONREQUEST_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

ALTER TABLE FHIRAPP.MEDICATIONREQUEST_LATLNG_VALUES ADD CONSTRAINT FK_MEDICATIONREQUEST_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.MEDICATIONREQUEST_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.MEDICATIONREQUEST_LATLNG_VALUES ADD CONSTRAINT FK_MEDICATIONREQUEST_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.MEDICATIONREQUEST_LATLNG_VALUES_TENANT                      ON FHIRAPP.MEDICATIONREQUEST_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.MEDICATIONREQUEST_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDICATIONREQUEST_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDICATIONREQUEST_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_MEDICATIONREQUEST_QUANTITY_VALUES_PCHLSR ON FHIRAPP.MEDICATIONREQUEST_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEDICATIONREQUEST_QUANTITY_VALUES_RPS ON FHIRAPP.MEDICATIONREQUEST_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_MEDICATIONREQUEST_QUANTITY_VALUES_RPCHLS ON FHIRAPP.MEDICATIONREQUEST_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_MEDICATIONREQUEST_QUANTITY_VALUES_PNNV ON FHIRAPP.MEDICATIONREQUEST_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_MEDICATIONREQUEST_QUANTITY_VALUES_PCLHSR ON FHIRAPP.MEDICATIONREQUEST_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEDICATIONREQUEST_QUANTITY_VALUES_RPCLHS ON FHIRAPP.MEDICATIONREQUEST_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

ALTER TABLE FHIRAPP.MEDICATIONREQUEST_QUANTITY_VALUES ADD CONSTRAINT FK_MEDICATIONREQUEST_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.MEDICATIONREQUEST_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.MEDICATIONREQUEST_QUANTITY_VALUES ADD CONSTRAINT FK_MEDICATIONREQUEST_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.MEDICATIONREQUEST_QUANTITY_VALUES_TENANT                      ON FHIRAPP.MEDICATIONREQUEST_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.MEDICATIONREQUEST_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDICATIONREQUEST_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.EFFECTEVIDENCESYNTHESIS_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT EFFECTEVIDENCESYNTHESIS_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.EFFECTEVIDENCESYNTHESIS_LOGICAL_RESOURCES ADD CONSTRAINT FK_EFFECTEVIDENCESYNTHESIS_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.EFFECTEVIDENCESYNTHESIS_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.EFFECTEVIDENCESYNTHESIS_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.EFFECTEVIDENCESYNTHESIS_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.EFFECTEVIDENCESYNTHESIS_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.EFFECTEVIDENCESYNTHESIS_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT EFFECTEVIDENCESYNTHESIS_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.EFFECTEVIDENCESYNTHESIS_RESOURCES_PRF_IN1 ON FHIRAPP.EFFECTEVIDENCESYNTHESIS_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.EFFECTEVIDENCESYNTHESIS_RESOURCES_TENANT                      ON FHIRAPP.EFFECTEVIDENCESYNTHESIS_RESOURCES          FOR ROWS WHERE FHIRAPP.EFFECTEVIDENCESYNTHESIS_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.EFFECTEVIDENCESYNTHESIS_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.EFFECTEVIDENCESYNTHESIS_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_EFFECTEVIDENCESYNTHESIS_STR_VALUES_RPL ON FHIRAPP.EFFECTEVIDENCESYNTHESIS_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

CREATE INDEX FHIRAPP.IDX_EFFECTEVIDENCESYNTHESIS_STR_VALUES_PSR ON FHIRAPP.EFFECTEVIDENCESYNTHESIS_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_EFFECTEVIDENCESYNTHESIS_STR_VALUES_RPS ON FHIRAPP.EFFECTEVIDENCESYNTHESIS_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

CREATE INDEX FHIRAPP.IDX_EFFECTEVIDENCESYNTHESIS_STR_VALUES_PLR ON FHIRAPP.EFFECTEVIDENCESYNTHESIS_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.EFFECTEVIDENCESYNTHESIS_STR_VALUES ADD CONSTRAINT FK_EFFECTEVIDENCESYNTHESIS_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.EFFECTEVIDENCESYNTHESIS_STR_VALUES ADD CONSTRAINT FK_EFFECTEVIDENCESYNTHESIS_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.EFFECTEVIDENCESYNTHESIS_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.EFFECTEVIDENCESYNTHESIS_STR_VALUES_TENANT                      ON FHIRAPP.EFFECTEVIDENCESYNTHESIS_STR_VALUES          FOR ROWS WHERE FHIRAPP.EFFECTEVIDENCESYNTHESIS_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.EFFECTEVIDENCESYNTHESIS_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.EFFECTEVIDENCESYNTHESIS_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_EFFECTEVIDENCESYNTHESIS_TOKEN_VALUES_RPS ON FHIRAPP.EFFECTEVIDENCESYNTHESIS_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

CREATE INDEX FHIRAPP.IDX_EFFECTEVIDENCESYNTHESIS_TOKEN_VALUES_PNCSCV ON FHIRAPP.EFFECTEVIDENCESYNTHESIS_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.EFFECTEVIDENCESYNTHESIS_TOKEN_VALUES ADD CONSTRAINT FK_EFFECTEVIDENCESYNTHESIS_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.EFFECTEVIDENCESYNTHESIS_TOKEN_VALUES ADD CONSTRAINT FK_EFFECTEVIDENCESYNTHESIS_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

ALTER TABLE FHIRAPP.EFFECTEVIDENCESYNTHESIS_TOKEN_VALUES ADD CONSTRAINT FK_EFFECTEVIDENCESYNTHESIS_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.EFFECTEVIDENCESYNTHESIS_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.EFFECTEVIDENCESYNTHESIS_TOKEN_VALUES_TENANT                      ON FHIRAPP.EFFECTEVIDENCESYNTHESIS_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.EFFECTEVIDENCESYNTHESIS_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.EFFECTEVIDENCESYNTHESIS_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.EFFECTEVIDENCESYNTHESIS_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_EFFECTEVIDENCESYNTHESIS_DATE_VALUES_PVR ON FHIRAPP.EFFECTEVIDENCESYNTHESIS_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_EFFECTEVIDENCESYNTHESIS_DATE_VALUES_RPV ON FHIRAPP.EFFECTEVIDENCESYNTHESIS_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

CREATE INDEX FHIRAPP.IDX_EFFECTEVIDENCESYNTHESIS_DATE_VALUES_PSER ON FHIRAPP.EFFECTEVIDENCESYNTHESIS_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_EFFECTEVIDENCESYNTHESIS_DATE_VALUES_RPSE ON FHIRAPP.EFFECTEVIDENCESYNTHESIS_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

CREATE INDEX FHIRAPP.IDX_EFFECTEVIDENCESYNTHESIS_DATE_VALUES_PESR ON FHIRAPP.EFFECTEVIDENCESYNTHESIS_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.EFFECTEVIDENCESYNTHESIS_DATE_VALUES ADD CONSTRAINT FK_EFFECTEVIDENCESYNTHESIS_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.EFFECTEVIDENCESYNTHESIS_DATE_VALUES ADD CONSTRAINT FK_EFFECTEVIDENCESYNTHESIS_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.EFFECTEVIDENCESYNTHESIS_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.EFFECTEVIDENCESYNTHESIS_DATE_VALUES_TENANT                      ON FHIRAPP.EFFECTEVIDENCESYNTHESIS_DATE_VALUES          FOR ROWS WHERE FHIRAPP.EFFECTEVIDENCESYNTHESIS_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.EFFECTEVIDENCESYNTHESIS_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.EFFECTEVIDENCESYNTHESIS_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_EFFECTEVIDENCESYNTHESIS_NUMBER_VALUES_RPS ON FHIRAPP.EFFECTEVIDENCESYNTHESIS_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

CREATE INDEX FHIRAPP.IDX_EFFECTEVIDENCESYNTHESIS_NUMBER_VALUES_PNNV ON FHIRAPP.EFFECTEVIDENCESYNTHESIS_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.EFFECTEVIDENCESYNTHESIS_NUMBER_VALUES ADD CONSTRAINT FK_EFFECTEVIDENCESYNTHESIS_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.EFFECTEVIDENCESYNTHESIS_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.EFFECTEVIDENCESYNTHESIS_NUMBER_VALUES ADD CONSTRAINT FK_EFFECTEVIDENCESYNTHESIS_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.EFFECTEVIDENCESYNTHESIS_NUMBER_VALUES_TENANT                      ON FHIRAPP.EFFECTEVIDENCESYNTHESIS_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.EFFECTEVIDENCESYNTHESIS_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.EFFECTEVIDENCESYNTHESIS_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.EFFECTEVIDENCESYNTHESIS_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_EFFECTEVIDENCESYNTHESIS_LATLNG_VALUES_PNNLV ON FHIRAPP.EFFECTEVIDENCESYNTHESIS_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_EFFECTEVIDENCESYNTHESIS_LATLNG_VALUES_PNNHV ON FHIRAPP.EFFECTEVIDENCESYNTHESIS_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_EFFECTEVIDENCESYNTHESIS_LATLNG_VALUES_RPLAT ON FHIRAPP.EFFECTEVIDENCESYNTHESIS_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_EFFECTEVIDENCESYNTHESIS_LATLNG_VALUES_RPLNG ON FHIRAPP.EFFECTEVIDENCESYNTHESIS_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

ALTER TABLE FHIRAPP.EFFECTEVIDENCESYNTHESIS_LATLNG_VALUES ADD CONSTRAINT FK_EFFECTEVIDENCESYNTHESIS_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.EFFECTEVIDENCESYNTHESIS_LATLNG_VALUES ADD CONSTRAINT FK_EFFECTEVIDENCESYNTHESIS_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.EFFECTEVIDENCESYNTHESIS_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.EFFECTEVIDENCESYNTHESIS_LATLNG_VALUES_TENANT                      ON FHIRAPP.EFFECTEVIDENCESYNTHESIS_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.EFFECTEVIDENCESYNTHESIS_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.EFFECTEVIDENCESYNTHESIS_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.EFFECTEVIDENCESYNTHESIS_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_EFFECTEVIDENCESYNTHESIS_QUANTITY_VALUES_PNNV ON FHIRAPP.EFFECTEVIDENCESYNTHESIS_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_EFFECTEVIDENCESYNTHESIS_QUANTITY_VALUES_PCHLSR ON FHIRAPP.EFFECTEVIDENCESYNTHESIS_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_EFFECTEVIDENCESYNTHESIS_QUANTITY_VALUES_RPS ON FHIRAPP.EFFECTEVIDENCESYNTHESIS_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_EFFECTEVIDENCESYNTHESIS_QUANTITY_VALUES_PCLHSR ON FHIRAPP.EFFECTEVIDENCESYNTHESIS_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_EFFECTEVIDENCESYNTHESIS_QUANTITY_VALUES_RPCLHS ON FHIRAPP.EFFECTEVIDENCESYNTHESIS_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_EFFECTEVIDENCESYNTHESIS_QUANTITY_VALUES_RPCHLS ON FHIRAPP.EFFECTEVIDENCESYNTHESIS_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

ALTER TABLE FHIRAPP.EFFECTEVIDENCESYNTHESIS_QUANTITY_VALUES ADD CONSTRAINT FK_EFFECTEVIDENCESYNTHESIS_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.EFFECTEVIDENCESYNTHESIS_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.EFFECTEVIDENCESYNTHESIS_QUANTITY_VALUES ADD CONSTRAINT FK_EFFECTEVIDENCESYNTHESIS_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.EFFECTEVIDENCESYNTHESIS_QUANTITY_VALUES_TENANT                      ON FHIRAPP.EFFECTEVIDENCESYNTHESIS_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.EFFECTEVIDENCESYNTHESIS_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.EFFECTEVIDENCESYNTHESIS_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.BIOLOGICALLYDERIVEDPRODUCT_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT BIOLOGICALLYDERIVEDPRODUCT_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.BIOLOGICALLYDERIVEDPRODUCT_LOGICAL_RESOURCES ADD CONSTRAINT FK_BIOLOGICALLYDERIVEDPRODUCT_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.BIOLOGICALLYDERIVEDPRODUCT_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.BIOLOGICALLYDERIVEDPRODUCT_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.BIOLOGICALLYDERIVEDPRODUCT_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.BIOLOGICALLYDERIVEDPRODUCT_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.BIOLOGICALLYDERIVEDPRODUCT_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT BIOLOGICALLYDERIVEDPRODUCT_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.BIOLOGICALLYDERIVEDPRODUCT_RESOURCES_PRF_IN1 ON FHIRAPP.BIOLOGICALLYDERIVEDPRODUCT_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.BIOLOGICALLYDERIVEDPRODUCT_RESOURCES_TENANT                      ON FHIRAPP.BIOLOGICALLYDERIVEDPRODUCT_RESOURCES          FOR ROWS WHERE FHIRAPP.BIOLOGICALLYDERIVEDPRODUCT_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.BIOLOGICALLYDERIVEDPRODUCT_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.BIOLOGICALLYDERIVEDPRODUCT_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_BIOLOGICALLYDERIVEDPRODUCT_STR_VALUES_RPS ON FHIRAPP.BIOLOGICALLYDERIVEDPRODUCT_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

CREATE INDEX FHIRAPP.IDX_BIOLOGICALLYDERIVEDPRODUCT_STR_VALUES_PLR ON FHIRAPP.BIOLOGICALLYDERIVEDPRODUCT_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_BIOLOGICALLYDERIVEDPRODUCT_STR_VALUES_RPL ON FHIRAPP.BIOLOGICALLYDERIVEDPRODUCT_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

CREATE INDEX FHIRAPP.IDX_BIOLOGICALLYDERIVEDPRODUCT_STR_VALUES_PSR ON FHIRAPP.BIOLOGICALLYDERIVEDPRODUCT_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.BIOLOGICALLYDERIVEDPRODUCT_STR_VALUES ADD CONSTRAINT FK_BIOLOGICALLYDERIVEDPRODUCT_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.BIOLOGICALLYDERIVEDPRODUCT_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.BIOLOGICALLYDERIVEDPRODUCT_STR_VALUES ADD CONSTRAINT FK_BIOLOGICALLYDERIVEDPRODUCT_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.BIOLOGICALLYDERIVEDPRODUCT_STR_VALUES_TENANT                      ON FHIRAPP.BIOLOGICALLYDERIVEDPRODUCT_STR_VALUES          FOR ROWS WHERE FHIRAPP.BIOLOGICALLYDERIVEDPRODUCT_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.BIOLOGICALLYDERIVEDPRODUCT_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.BIOLOGICALLYDERIVEDPRODUCT_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_BIOLOGICALLYDERIVEDPRODUCT_TOKEN_VALUES_RPS ON FHIRAPP.BIOLOGICALLYDERIVEDPRODUCT_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

CREATE INDEX FHIRAPP.IDX_BIOLOGICALLYDERIVEDPRODUCT_TOKEN_VALUES_PNCSCV ON FHIRAPP.BIOLOGICALLYDERIVEDPRODUCT_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.BIOLOGICALLYDERIVEDPRODUCT_TOKEN_VALUES ADD CONSTRAINT FK_BIOLOGICALLYDERIVEDPRODUCT_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.BIOLOGICALLYDERIVEDPRODUCT_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.BIOLOGICALLYDERIVEDPRODUCT_TOKEN_VALUES ADD CONSTRAINT FK_BIOLOGICALLYDERIVEDPRODUCT_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.BIOLOGICALLYDERIVEDPRODUCT_TOKEN_VALUES ADD CONSTRAINT FK_BIOLOGICALLYDERIVEDPRODUCT_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

CREATE PERMISSION FHIRAPP.BIOLOGICALLYDERIVEDPRODUCT_TOKEN_VALUES_TENANT                      ON FHIRAPP.BIOLOGICALLYDERIVEDPRODUCT_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.BIOLOGICALLYDERIVEDPRODUCT_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.BIOLOGICALLYDERIVEDPRODUCT_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.BIOLOGICALLYDERIVEDPRODUCT_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_BIOLOGICALLYDERIVEDPRODUCT_DATE_VALUES_PVR ON FHIRAPP.BIOLOGICALLYDERIVEDPRODUCT_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_BIOLOGICALLYDERIVEDPRODUCT_DATE_VALUES_PSER ON FHIRAPP.BIOLOGICALLYDERIVEDPRODUCT_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_BIOLOGICALLYDERIVEDPRODUCT_DATE_VALUES_RPV ON FHIRAPP.BIOLOGICALLYDERIVEDPRODUCT_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

CREATE INDEX FHIRAPP.IDX_BIOLOGICALLYDERIVEDPRODUCT_DATE_VALUES_RPSE ON FHIRAPP.BIOLOGICALLYDERIVEDPRODUCT_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

CREATE INDEX FHIRAPP.IDX_BIOLOGICALLYDERIVEDPRODUCT_DATE_VALUES_PESR ON FHIRAPP.BIOLOGICALLYDERIVEDPRODUCT_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.BIOLOGICALLYDERIVEDPRODUCT_DATE_VALUES ADD CONSTRAINT FK_BIOLOGICALLYDERIVEDPRODUCT_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.BIOLOGICALLYDERIVEDPRODUCT_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.BIOLOGICALLYDERIVEDPRODUCT_DATE_VALUES ADD CONSTRAINT FK_BIOLOGICALLYDERIVEDPRODUCT_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.BIOLOGICALLYDERIVEDPRODUCT_DATE_VALUES_TENANT                      ON FHIRAPP.BIOLOGICALLYDERIVEDPRODUCT_DATE_VALUES          FOR ROWS WHERE FHIRAPP.BIOLOGICALLYDERIVEDPRODUCT_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.BIOLOGICALLYDERIVEDPRODUCT_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.BIOLOGICALLYDERIVEDPRODUCT_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_BIOLOGICALLYDERIVEDPRODUCT_NUMBER_VALUES_RPS ON FHIRAPP.BIOLOGICALLYDERIVEDPRODUCT_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

CREATE INDEX FHIRAPP.IDX_BIOLOGICALLYDERIVEDPRODUCT_NUMBER_VALUES_PNNV ON FHIRAPP.BIOLOGICALLYDERIVEDPRODUCT_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.BIOLOGICALLYDERIVEDPRODUCT_NUMBER_VALUES ADD CONSTRAINT FK_BIOLOGICALLYDERIVEDPRODUCT_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.BIOLOGICALLYDERIVEDPRODUCT_NUMBER_VALUES ADD CONSTRAINT FK_BIOLOGICALLYDERIVEDPRODUCT_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.BIOLOGICALLYDERIVEDPRODUCT_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.BIOLOGICALLYDERIVEDPRODUCT_NUMBER_VALUES_TENANT                      ON FHIRAPP.BIOLOGICALLYDERIVEDPRODUCT_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.BIOLOGICALLYDERIVEDPRODUCT_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.BIOLOGICALLYDERIVEDPRODUCT_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.BIOLOGICALLYDERIVEDPRODUCT_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_BIOLOGICALLYDERIVEDPRODUCT_LATLNG_VALUES_RPLAT ON FHIRAPP.BIOLOGICALLYDERIVEDPRODUCT_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_BIOLOGICALLYDERIVEDPRODUCT_LATLNG_VALUES_RPLNG ON FHIRAPP.BIOLOGICALLYDERIVEDPRODUCT_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_BIOLOGICALLYDERIVEDPRODUCT_LATLNG_VALUES_PNNLV ON FHIRAPP.BIOLOGICALLYDERIVEDPRODUCT_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_BIOLOGICALLYDERIVEDPRODUCT_LATLNG_VALUES_PNNHV ON FHIRAPP.BIOLOGICALLYDERIVEDPRODUCT_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.BIOLOGICALLYDERIVEDPRODUCT_LATLNG_VALUES ADD CONSTRAINT FK_BIOLOGICALLYDERIVEDPRODUCT_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.BIOLOGICALLYDERIVEDPRODUCT_LATLNG_VALUES ADD CONSTRAINT FK_BIOLOGICALLYDERIVEDPRODUCT_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.BIOLOGICALLYDERIVEDPRODUCT_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.BIOLOGICALLYDERIVEDPRODUCT_LATLNG_VALUES_TENANT                      ON FHIRAPP.BIOLOGICALLYDERIVEDPRODUCT_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.BIOLOGICALLYDERIVEDPRODUCT_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.BIOLOGICALLYDERIVEDPRODUCT_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.BIOLOGICALLYDERIVEDPRODUCT_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_BIOLOGICALLYDERIVEDPRODUCT_QUANTITY_VALUES_PCLHSR ON FHIRAPP.BIOLOGICALLYDERIVEDPRODUCT_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_BIOLOGICALLYDERIVEDPRODUCT_QUANTITY_VALUES_RPCHLS ON FHIRAPP.BIOLOGICALLYDERIVEDPRODUCT_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_BIOLOGICALLYDERIVEDPRODUCT_QUANTITY_VALUES_PNNV ON FHIRAPP.BIOLOGICALLYDERIVEDPRODUCT_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_BIOLOGICALLYDERIVEDPRODUCT_QUANTITY_VALUES_PCHLSR ON FHIRAPP.BIOLOGICALLYDERIVEDPRODUCT_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_BIOLOGICALLYDERIVEDPRODUCT_QUANTITY_VALUES_RPS ON FHIRAPP.BIOLOGICALLYDERIVEDPRODUCT_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_BIOLOGICALLYDERIVEDPRODUCT_QUANTITY_VALUES_RPCLHS ON FHIRAPP.BIOLOGICALLYDERIVEDPRODUCT_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

ALTER TABLE FHIRAPP.BIOLOGICALLYDERIVEDPRODUCT_QUANTITY_VALUES ADD CONSTRAINT FK_BIOLOGICALLYDERIVEDPRODUCT_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.BIOLOGICALLYDERIVEDPRODUCT_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.BIOLOGICALLYDERIVEDPRODUCT_QUANTITY_VALUES ADD CONSTRAINT FK_BIOLOGICALLYDERIVEDPRODUCT_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.BIOLOGICALLYDERIVEDPRODUCT_QUANTITY_VALUES_TENANT                      ON FHIRAPP.BIOLOGICALLYDERIVEDPRODUCT_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.BIOLOGICALLYDERIVEDPRODUCT_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.BIOLOGICALLYDERIVEDPRODUCT_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.DEVICE_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT DEVICE_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.DEVICE_LOGICAL_RESOURCES ADD CONSTRAINT FK_DEVICE_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.DEVICE_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.DEVICE_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.DEVICE_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.DEVICE_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.DEVICE_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT DEVICE_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.DEVICE_RESOURCES_PRF_IN1 ON FHIRAPP.DEVICE_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.DEVICE_RESOURCES_TENANT                      ON FHIRAPP.DEVICE_RESOURCES          FOR ROWS WHERE FHIRAPP.DEVICE_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.DEVICE_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.DEVICE_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_DEVICE_STR_VALUES_RPL ON FHIRAPP.DEVICE_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

CREATE INDEX FHIRAPP.IDX_DEVICE_STR_VALUES_PSR ON FHIRAPP.DEVICE_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_DEVICE_STR_VALUES_RPS ON FHIRAPP.DEVICE_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

CREATE INDEX FHIRAPP.IDX_DEVICE_STR_VALUES_PLR ON FHIRAPP.DEVICE_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.DEVICE_STR_VALUES ADD CONSTRAINT FK_DEVICE_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.DEVICE_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.DEVICE_STR_VALUES ADD CONSTRAINT FK_DEVICE_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.DEVICE_STR_VALUES_TENANT                      ON FHIRAPP.DEVICE_STR_VALUES          FOR ROWS WHERE FHIRAPP.DEVICE_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.DEVICE_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.DEVICE_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_DEVICE_TOKEN_VALUES_PNCSCV ON FHIRAPP.DEVICE_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_DEVICE_TOKEN_VALUES_RPS ON FHIRAPP.DEVICE_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

ALTER TABLE FHIRAPP.DEVICE_TOKEN_VALUES ADD CONSTRAINT FK_DEVICE_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.DEVICE_TOKEN_VALUES ADD CONSTRAINT FK_DEVICE_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.DEVICE_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.DEVICE_TOKEN_VALUES ADD CONSTRAINT FK_DEVICE_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

CREATE PERMISSION FHIRAPP.DEVICE_TOKEN_VALUES_TENANT                      ON FHIRAPP.DEVICE_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.DEVICE_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.DEVICE_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.DEVICE_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_DEVICE_DATE_VALUES_RPV ON FHIRAPP.DEVICE_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

CREATE INDEX FHIRAPP.IDX_DEVICE_DATE_VALUES_RPSE ON FHIRAPP.DEVICE_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

CREATE INDEX FHIRAPP.IDX_DEVICE_DATE_VALUES_PSER ON FHIRAPP.DEVICE_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_DEVICE_DATE_VALUES_PESR ON FHIRAPP.DEVICE_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_DEVICE_DATE_VALUES_PVR ON FHIRAPP.DEVICE_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.DEVICE_DATE_VALUES ADD CONSTRAINT FK_DEVICE_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.DEVICE_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.DEVICE_DATE_VALUES ADD CONSTRAINT FK_DEVICE_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.DEVICE_DATE_VALUES_TENANT                      ON FHIRAPP.DEVICE_DATE_VALUES          FOR ROWS WHERE FHIRAPP.DEVICE_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.DEVICE_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.DEVICE_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_DEVICE_NUMBER_VALUES_PNNV ON FHIRAPP.DEVICE_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_DEVICE_NUMBER_VALUES_RPS ON FHIRAPP.DEVICE_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

ALTER TABLE FHIRAPP.DEVICE_NUMBER_VALUES ADD CONSTRAINT FK_DEVICE_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.DEVICE_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.DEVICE_NUMBER_VALUES ADD CONSTRAINT FK_DEVICE_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.DEVICE_NUMBER_VALUES_TENANT                      ON FHIRAPP.DEVICE_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.DEVICE_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.DEVICE_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.DEVICE_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_DEVICE_LATLNG_VALUES_PNNHV ON FHIRAPP.DEVICE_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_DEVICE_LATLNG_VALUES_RPLNG ON FHIRAPP.DEVICE_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_DEVICE_LATLNG_VALUES_RPLAT ON FHIRAPP.DEVICE_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_DEVICE_LATLNG_VALUES_PNNLV ON FHIRAPP.DEVICE_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.DEVICE_LATLNG_VALUES ADD CONSTRAINT FK_DEVICE_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.DEVICE_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.DEVICE_LATLNG_VALUES ADD CONSTRAINT FK_DEVICE_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.DEVICE_LATLNG_VALUES_TENANT                      ON FHIRAPP.DEVICE_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.DEVICE_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.DEVICE_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.DEVICE_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_DEVICE_QUANTITY_VALUES_PCHLSR ON FHIRAPP.DEVICE_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_DEVICE_QUANTITY_VALUES_RPS ON FHIRAPP.DEVICE_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_DEVICE_QUANTITY_VALUES_RPCLHS ON FHIRAPP.DEVICE_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_DEVICE_QUANTITY_VALUES_PCLHSR ON FHIRAPP.DEVICE_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_DEVICE_QUANTITY_VALUES_PNNV ON FHIRAPP.DEVICE_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_DEVICE_QUANTITY_VALUES_RPCHLS ON FHIRAPP.DEVICE_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

ALTER TABLE FHIRAPP.DEVICE_QUANTITY_VALUES ADD CONSTRAINT FK_DEVICE_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.DEVICE_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.DEVICE_QUANTITY_VALUES ADD CONSTRAINT FK_DEVICE_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.DEVICE_QUANTITY_VALUES_TENANT                      ON FHIRAPP.DEVICE_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.DEVICE_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.DEVICE_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.VISIONPRESCRIPTION_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT VISIONPRESCRIPTION_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.VISIONPRESCRIPTION_LOGICAL_RESOURCES ADD CONSTRAINT FK_VISIONPRESCRIPTION_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.VISIONPRESCRIPTION_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.VISIONPRESCRIPTION_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.VISIONPRESCRIPTION_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.VISIONPRESCRIPTION_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.VISIONPRESCRIPTION_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT VISIONPRESCRIPTION_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.VISIONPRESCRIPTION_RESOURCES_PRF_IN1 ON FHIRAPP.VISIONPRESCRIPTION_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.VISIONPRESCRIPTION_RESOURCES_TENANT                      ON FHIRAPP.VISIONPRESCRIPTION_RESOURCES          FOR ROWS WHERE FHIRAPP.VISIONPRESCRIPTION_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.VISIONPRESCRIPTION_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.VISIONPRESCRIPTION_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_VISIONPRESCRIPTION_STR_VALUES_PSR ON FHIRAPP.VISIONPRESCRIPTION_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_VISIONPRESCRIPTION_STR_VALUES_RPL ON FHIRAPP.VISIONPRESCRIPTION_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

CREATE INDEX FHIRAPP.IDX_VISIONPRESCRIPTION_STR_VALUES_PLR ON FHIRAPP.VISIONPRESCRIPTION_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_VISIONPRESCRIPTION_STR_VALUES_RPS ON FHIRAPP.VISIONPRESCRIPTION_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

ALTER TABLE FHIRAPP.VISIONPRESCRIPTION_STR_VALUES ADD CONSTRAINT FK_VISIONPRESCRIPTION_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.VISIONPRESCRIPTION_STR_VALUES ADD CONSTRAINT FK_VISIONPRESCRIPTION_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.VISIONPRESCRIPTION_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.VISIONPRESCRIPTION_STR_VALUES_TENANT                      ON FHIRAPP.VISIONPRESCRIPTION_STR_VALUES          FOR ROWS WHERE FHIRAPP.VISIONPRESCRIPTION_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.VISIONPRESCRIPTION_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.VISIONPRESCRIPTION_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_VISIONPRESCRIPTION_TOKEN_VALUES_RPS ON FHIRAPP.VISIONPRESCRIPTION_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

CREATE INDEX FHIRAPP.IDX_VISIONPRESCRIPTION_TOKEN_VALUES_PNCSCV ON FHIRAPP.VISIONPRESCRIPTION_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.VISIONPRESCRIPTION_TOKEN_VALUES ADD CONSTRAINT FK_VISIONPRESCRIPTION_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

ALTER TABLE FHIRAPP.VISIONPRESCRIPTION_TOKEN_VALUES ADD CONSTRAINT FK_VISIONPRESCRIPTION_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.VISIONPRESCRIPTION_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.VISIONPRESCRIPTION_TOKEN_VALUES ADD CONSTRAINT FK_VISIONPRESCRIPTION_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.VISIONPRESCRIPTION_TOKEN_VALUES_TENANT                      ON FHIRAPP.VISIONPRESCRIPTION_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.VISIONPRESCRIPTION_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.VISIONPRESCRIPTION_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.VISIONPRESCRIPTION_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_VISIONPRESCRIPTION_DATE_VALUES_PVR ON FHIRAPP.VISIONPRESCRIPTION_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_VISIONPRESCRIPTION_DATE_VALUES_RPSE ON FHIRAPP.VISIONPRESCRIPTION_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

CREATE INDEX FHIRAPP.IDX_VISIONPRESCRIPTION_DATE_VALUES_RPV ON FHIRAPP.VISIONPRESCRIPTION_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

CREATE INDEX FHIRAPP.IDX_VISIONPRESCRIPTION_DATE_VALUES_PSER ON FHIRAPP.VISIONPRESCRIPTION_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_VISIONPRESCRIPTION_DATE_VALUES_PESR ON FHIRAPP.VISIONPRESCRIPTION_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.VISIONPRESCRIPTION_DATE_VALUES ADD CONSTRAINT FK_VISIONPRESCRIPTION_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.VISIONPRESCRIPTION_DATE_VALUES ADD CONSTRAINT FK_VISIONPRESCRIPTION_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.VISIONPRESCRIPTION_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.VISIONPRESCRIPTION_DATE_VALUES_TENANT                      ON FHIRAPP.VISIONPRESCRIPTION_DATE_VALUES          FOR ROWS WHERE FHIRAPP.VISIONPRESCRIPTION_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.VISIONPRESCRIPTION_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.VISIONPRESCRIPTION_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_VISIONPRESCRIPTION_NUMBER_VALUES_RPS ON FHIRAPP.VISIONPRESCRIPTION_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

CREATE INDEX FHIRAPP.IDX_VISIONPRESCRIPTION_NUMBER_VALUES_PNNV ON FHIRAPP.VISIONPRESCRIPTION_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.VISIONPRESCRIPTION_NUMBER_VALUES ADD CONSTRAINT FK_VISIONPRESCRIPTION_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.VISIONPRESCRIPTION_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.VISIONPRESCRIPTION_NUMBER_VALUES ADD CONSTRAINT FK_VISIONPRESCRIPTION_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.VISIONPRESCRIPTION_NUMBER_VALUES_TENANT                      ON FHIRAPP.VISIONPRESCRIPTION_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.VISIONPRESCRIPTION_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.VISIONPRESCRIPTION_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.VISIONPRESCRIPTION_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_VISIONPRESCRIPTION_LATLNG_VALUES_RPLAT ON FHIRAPP.VISIONPRESCRIPTION_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_VISIONPRESCRIPTION_LATLNG_VALUES_PNNLV ON FHIRAPP.VISIONPRESCRIPTION_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_VISIONPRESCRIPTION_LATLNG_VALUES_RPLNG ON FHIRAPP.VISIONPRESCRIPTION_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_VISIONPRESCRIPTION_LATLNG_VALUES_PNNHV ON FHIRAPP.VISIONPRESCRIPTION_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.VISIONPRESCRIPTION_LATLNG_VALUES ADD CONSTRAINT FK_VISIONPRESCRIPTION_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.VISIONPRESCRIPTION_LATLNG_VALUES ADD CONSTRAINT FK_VISIONPRESCRIPTION_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.VISIONPRESCRIPTION_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.VISIONPRESCRIPTION_LATLNG_VALUES_TENANT                      ON FHIRAPP.VISIONPRESCRIPTION_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.VISIONPRESCRIPTION_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.VISIONPRESCRIPTION_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.VISIONPRESCRIPTION_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_VISIONPRESCRIPTION_QUANTITY_VALUES_PCLHSR ON FHIRAPP.VISIONPRESCRIPTION_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_VISIONPRESCRIPTION_QUANTITY_VALUES_RPS ON FHIRAPP.VISIONPRESCRIPTION_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_VISIONPRESCRIPTION_QUANTITY_VALUES_RPCLHS ON FHIRAPP.VISIONPRESCRIPTION_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_VISIONPRESCRIPTION_QUANTITY_VALUES_PNNV ON FHIRAPP.VISIONPRESCRIPTION_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_VISIONPRESCRIPTION_QUANTITY_VALUES_RPCHLS ON FHIRAPP.VISIONPRESCRIPTION_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_VISIONPRESCRIPTION_QUANTITY_VALUES_PCHLSR ON FHIRAPP.VISIONPRESCRIPTION_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.VISIONPRESCRIPTION_QUANTITY_VALUES ADD CONSTRAINT FK_VISIONPRESCRIPTION_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.VISIONPRESCRIPTION_QUANTITY_VALUES ADD CONSTRAINT FK_VISIONPRESCRIPTION_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.VISIONPRESCRIPTION_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.VISIONPRESCRIPTION_QUANTITY_VALUES_TENANT                      ON FHIRAPP.VISIONPRESCRIPTION_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.VISIONPRESCRIPTION_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.VISIONPRESCRIPTION_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDIA_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT MEDIA_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.MEDIA_LOGICAL_RESOURCES ADD CONSTRAINT FK_MEDIA_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.MEDIA_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.MEDIA_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.MEDIA_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDIA_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDIA_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT MEDIA_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.MEDIA_RESOURCES_PRF_IN1 ON FHIRAPP.MEDIA_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.MEDIA_RESOURCES_TENANT                      ON FHIRAPP.MEDIA_RESOURCES          FOR ROWS WHERE FHIRAPP.MEDIA_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDIA_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDIA_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_MEDIA_STR_VALUES_PSR ON FHIRAPP.MEDIA_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEDIA_STR_VALUES_RPL ON FHIRAPP.MEDIA_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

CREATE INDEX FHIRAPP.IDX_MEDIA_STR_VALUES_RPS ON FHIRAPP.MEDIA_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

CREATE INDEX FHIRAPP.IDX_MEDIA_STR_VALUES_PLR ON FHIRAPP.MEDIA_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.MEDIA_STR_VALUES ADD CONSTRAINT FK_MEDIA_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.MEDIA_STR_VALUES ADD CONSTRAINT FK_MEDIA_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.MEDIA_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.MEDIA_STR_VALUES_TENANT                      ON FHIRAPP.MEDIA_STR_VALUES          FOR ROWS WHERE FHIRAPP.MEDIA_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDIA_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDIA_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_MEDIA_TOKEN_VALUES_PNCSCV ON FHIRAPP.MEDIA_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEDIA_TOKEN_VALUES_RPS ON FHIRAPP.MEDIA_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

ALTER TABLE FHIRAPP.MEDIA_TOKEN_VALUES ADD CONSTRAINT FK_MEDIA_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.MEDIA_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.MEDIA_TOKEN_VALUES ADD CONSTRAINT FK_MEDIA_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

ALTER TABLE FHIRAPP.MEDIA_TOKEN_VALUES ADD CONSTRAINT FK_MEDIA_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.MEDIA_TOKEN_VALUES_TENANT                      ON FHIRAPP.MEDIA_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.MEDIA_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDIA_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDIA_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_MEDIA_DATE_VALUES_PESR ON FHIRAPP.MEDIA_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEDIA_DATE_VALUES_PVR ON FHIRAPP.MEDIA_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEDIA_DATE_VALUES_PSER ON FHIRAPP.MEDIA_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEDIA_DATE_VALUES_RPSE ON FHIRAPP.MEDIA_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

CREATE INDEX FHIRAPP.IDX_MEDIA_DATE_VALUES_RPV ON FHIRAPP.MEDIA_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

ALTER TABLE FHIRAPP.MEDIA_DATE_VALUES ADD CONSTRAINT FK_MEDIA_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.MEDIA_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.MEDIA_DATE_VALUES ADD CONSTRAINT FK_MEDIA_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.MEDIA_DATE_VALUES_TENANT                      ON FHIRAPP.MEDIA_DATE_VALUES          FOR ROWS WHERE FHIRAPP.MEDIA_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDIA_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDIA_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_MEDIA_NUMBER_VALUES_RPS ON FHIRAPP.MEDIA_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

CREATE INDEX FHIRAPP.IDX_MEDIA_NUMBER_VALUES_PNNV ON FHIRAPP.MEDIA_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.MEDIA_NUMBER_VALUES ADD CONSTRAINT FK_MEDIA_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.MEDIA_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.MEDIA_NUMBER_VALUES ADD CONSTRAINT FK_MEDIA_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.MEDIA_NUMBER_VALUES_TENANT                      ON FHIRAPP.MEDIA_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.MEDIA_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDIA_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDIA_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_MEDIA_LATLNG_VALUES_RPLAT ON FHIRAPP.MEDIA_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_MEDIA_LATLNG_VALUES_RPLNG ON FHIRAPP.MEDIA_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_MEDIA_LATLNG_VALUES_PNNLV ON FHIRAPP.MEDIA_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEDIA_LATLNG_VALUES_PNNHV ON FHIRAPP.MEDIA_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.MEDIA_LATLNG_VALUES ADD CONSTRAINT FK_MEDIA_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.MEDIA_LATLNG_VALUES ADD CONSTRAINT FK_MEDIA_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.MEDIA_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.MEDIA_LATLNG_VALUES_TENANT                      ON FHIRAPP.MEDIA_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.MEDIA_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDIA_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDIA_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_MEDIA_QUANTITY_VALUES_RPCLHS ON FHIRAPP.MEDIA_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_MEDIA_QUANTITY_VALUES_PNNV ON FHIRAPP.MEDIA_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_MEDIA_QUANTITY_VALUES_PCHLSR ON FHIRAPP.MEDIA_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEDIA_QUANTITY_VALUES_RPCHLS ON FHIRAPP.MEDIA_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_MEDIA_QUANTITY_VALUES_RPS ON FHIRAPP.MEDIA_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_MEDIA_QUANTITY_VALUES_PCLHSR ON FHIRAPP.MEDIA_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.MEDIA_QUANTITY_VALUES ADD CONSTRAINT FK_MEDIA_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.MEDIA_QUANTITY_VALUES ADD CONSTRAINT FK_MEDIA_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.MEDIA_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.MEDIA_QUANTITY_VALUES_TENANT                      ON FHIRAPP.MEDIA_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.MEDIA_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDIA_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDICINALPRODUCTCONTRAINDICATION_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT MEDICINALPRODUCTCONTRAINDICATION_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.MEDICINALPRODUCTCONTRAINDICATION_LOGICAL_RESOURCES ADD CONSTRAINT FK_MEDICINALPRODUCTCONTRAINDICATION_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.MEDICINALPRODUCTCONTRAINDICATION_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.MEDICINALPRODUCTCONTRAINDICATION_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.MEDICINALPRODUCTCONTRAINDICATION_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDICINALPRODUCTCONTRAINDICATION_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDICINALPRODUCTCONTRAINDICATION_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT MEDICINALPRODUCTCONTRAINDICATION_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.MEDICINALPRODUCTCONTRAINDICATION_RESOURCES_PRF_IN1 ON FHIRAPP.MEDICINALPRODUCTCONTRAINDICATION_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.MEDICINALPRODUCTCONTRAINDICATION_RESOURCES_TENANT                      ON FHIRAPP.MEDICINALPRODUCTCONTRAINDICATION_RESOURCES          FOR ROWS WHERE FHIRAPP.MEDICINALPRODUCTCONTRAINDICATION_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDICINALPRODUCTCONTRAINDICATION_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDICINALPRODUCTCONTRAINDICATION_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTCONTRAINDICATION_STR_VALUES_RPS ON FHIRAPP.MEDICINALPRODUCTCONTRAINDICATION_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTCONTRAINDICATION_STR_VALUES_PLR ON FHIRAPP.MEDICINALPRODUCTCONTRAINDICATION_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTCONTRAINDICATION_STR_VALUES_RPL ON FHIRAPP.MEDICINALPRODUCTCONTRAINDICATION_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTCONTRAINDICATION_STR_VALUES_PSR ON FHIRAPP.MEDICINALPRODUCTCONTRAINDICATION_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.MEDICINALPRODUCTCONTRAINDICATION_STR_VALUES ADD CONSTRAINT FK_MEDICINALPRODUCTCONTRAINDICATION_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.MEDICINALPRODUCTCONTRAINDICATION_STR_VALUES ADD CONSTRAINT FK_MEDICINALPRODUCTCONTRAINDICATION_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.MEDICINALPRODUCTCONTRAINDICATION_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.MEDICINALPRODUCTCONTRAINDICATION_STR_VALUES_TENANT                      ON FHIRAPP.MEDICINALPRODUCTCONTRAINDICATION_STR_VALUES          FOR ROWS WHERE FHIRAPP.MEDICINALPRODUCTCONTRAINDICATION_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDICINALPRODUCTCONTRAINDICATION_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDICINALPRODUCTCONTRAINDICATION_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTCONTRAINDICATION_TOKEN_VALUES_PNCSCV ON FHIRAPP.MEDICINALPRODUCTCONTRAINDICATION_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTCONTRAINDICATION_TOKEN_VALUES_RPS ON FHIRAPP.MEDICINALPRODUCTCONTRAINDICATION_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

ALTER TABLE FHIRAPP.MEDICINALPRODUCTCONTRAINDICATION_TOKEN_VALUES ADD CONSTRAINT FK_MEDICINALPRODUCTCONTRAINDICATION_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.MEDICINALPRODUCTCONTRAINDICATION_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.MEDICINALPRODUCTCONTRAINDICATION_TOKEN_VALUES ADD CONSTRAINT FK_MEDICINALPRODUCTCONTRAINDICATION_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.MEDICINALPRODUCTCONTRAINDICATION_TOKEN_VALUES ADD CONSTRAINT FK_MEDICINALPRODUCTCONTRAINDICATION_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

CREATE PERMISSION FHIRAPP.MEDICINALPRODUCTCONTRAINDICATION_TOKEN_VALUES_TENANT                      ON FHIRAPP.MEDICINALPRODUCTCONTRAINDICATION_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.MEDICINALPRODUCTCONTRAINDICATION_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDICINALPRODUCTCONTRAINDICATION_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDICINALPRODUCTCONTRAINDICATION_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTCONTRAINDICATION_DATE_VALUES_PESR ON FHIRAPP.MEDICINALPRODUCTCONTRAINDICATION_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTCONTRAINDICATION_DATE_VALUES_RPSE ON FHIRAPP.MEDICINALPRODUCTCONTRAINDICATION_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTCONTRAINDICATION_DATE_VALUES_PSER ON FHIRAPP.MEDICINALPRODUCTCONTRAINDICATION_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTCONTRAINDICATION_DATE_VALUES_RPV ON FHIRAPP.MEDICINALPRODUCTCONTRAINDICATION_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTCONTRAINDICATION_DATE_VALUES_PVR ON FHIRAPP.MEDICINALPRODUCTCONTRAINDICATION_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.MEDICINALPRODUCTCONTRAINDICATION_DATE_VALUES ADD CONSTRAINT FK_MEDICINALPRODUCTCONTRAINDICATION_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.MEDICINALPRODUCTCONTRAINDICATION_DATE_VALUES ADD CONSTRAINT FK_MEDICINALPRODUCTCONTRAINDICATION_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.MEDICINALPRODUCTCONTRAINDICATION_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.MEDICINALPRODUCTCONTRAINDICATION_DATE_VALUES_TENANT                      ON FHIRAPP.MEDICINALPRODUCTCONTRAINDICATION_DATE_VALUES          FOR ROWS WHERE FHIRAPP.MEDICINALPRODUCTCONTRAINDICATION_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDICINALPRODUCTCONTRAINDICATION_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDICINALPRODUCTCONTRAINDICATION_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTCONTRAINDICATION_NUMBER_VALUES_RPS ON FHIRAPP.MEDICINALPRODUCTCONTRAINDICATION_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTCONTRAINDICATION_NUMBER_VALUES_PNNV ON FHIRAPP.MEDICINALPRODUCTCONTRAINDICATION_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.MEDICINALPRODUCTCONTRAINDICATION_NUMBER_VALUES ADD CONSTRAINT FK_MEDICINALPRODUCTCONTRAINDICATION_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.MEDICINALPRODUCTCONTRAINDICATION_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.MEDICINALPRODUCTCONTRAINDICATION_NUMBER_VALUES ADD CONSTRAINT FK_MEDICINALPRODUCTCONTRAINDICATION_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.MEDICINALPRODUCTCONTRAINDICATION_NUMBER_VALUES_TENANT                      ON FHIRAPP.MEDICINALPRODUCTCONTRAINDICATION_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.MEDICINALPRODUCTCONTRAINDICATION_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDICINALPRODUCTCONTRAINDICATION_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDICINALPRODUCTCONTRAINDICATION_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTCONTRAINDICATION_LATLNG_VALUES_PNNHV ON FHIRAPP.MEDICINALPRODUCTCONTRAINDICATION_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTCONTRAINDICATION_LATLNG_VALUES_RPLNG ON FHIRAPP.MEDICINALPRODUCTCONTRAINDICATION_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTCONTRAINDICATION_LATLNG_VALUES_RPLAT ON FHIRAPP.MEDICINALPRODUCTCONTRAINDICATION_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTCONTRAINDICATION_LATLNG_VALUES_PNNLV ON FHIRAPP.MEDICINALPRODUCTCONTRAINDICATION_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.MEDICINALPRODUCTCONTRAINDICATION_LATLNG_VALUES ADD CONSTRAINT FK_MEDICINALPRODUCTCONTRAINDICATION_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.MEDICINALPRODUCTCONTRAINDICATION_LATLNG_VALUES ADD CONSTRAINT FK_MEDICINALPRODUCTCONTRAINDICATION_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.MEDICINALPRODUCTCONTRAINDICATION_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.MEDICINALPRODUCTCONTRAINDICATION_LATLNG_VALUES_TENANT                      ON FHIRAPP.MEDICINALPRODUCTCONTRAINDICATION_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.MEDICINALPRODUCTCONTRAINDICATION_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDICINALPRODUCTCONTRAINDICATION_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDICINALPRODUCTCONTRAINDICATION_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTCONTRAINDICATION_QUANTITY_VALUES_PNNV ON FHIRAPP.MEDICINALPRODUCTCONTRAINDICATION_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTCONTRAINDICATION_QUANTITY_VALUES_RPCHLS ON FHIRAPP.MEDICINALPRODUCTCONTRAINDICATION_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTCONTRAINDICATION_QUANTITY_VALUES_PCHLSR ON FHIRAPP.MEDICINALPRODUCTCONTRAINDICATION_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTCONTRAINDICATION_QUANTITY_VALUES_RPS ON FHIRAPP.MEDICINALPRODUCTCONTRAINDICATION_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTCONTRAINDICATION_QUANTITY_VALUES_PCLHSR ON FHIRAPP.MEDICINALPRODUCTCONTRAINDICATION_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTCONTRAINDICATION_QUANTITY_VALUES_RPCLHS ON FHIRAPP.MEDICINALPRODUCTCONTRAINDICATION_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

ALTER TABLE FHIRAPP.MEDICINALPRODUCTCONTRAINDICATION_QUANTITY_VALUES ADD CONSTRAINT FK_MEDICINALPRODUCTCONTRAINDICATION_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.MEDICINALPRODUCTCONTRAINDICATION_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.MEDICINALPRODUCTCONTRAINDICATION_QUANTITY_VALUES ADD CONSTRAINT FK_MEDICINALPRODUCTCONTRAINDICATION_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.MEDICINALPRODUCTCONTRAINDICATION_QUANTITY_VALUES_TENANT                      ON FHIRAPP.MEDICINALPRODUCTCONTRAINDICATION_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.MEDICINALPRODUCTCONTRAINDICATION_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDICINALPRODUCTCONTRAINDICATION_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.RESOURCE_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT RESOURCE_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.RESOURCE_LOGICAL_RESOURCES ADD CONSTRAINT FK_RESOURCE_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.RESOURCE_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.RESOURCE_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.RESOURCE_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.RESOURCE_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.RESOURCE_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT RESOURCE_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.RESOURCE_RESOURCES_PRF_IN1 ON FHIRAPP.RESOURCE_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.RESOURCE_RESOURCES_TENANT                      ON FHIRAPP.RESOURCE_RESOURCES          FOR ROWS WHERE FHIRAPP.RESOURCE_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.RESOURCE_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.RESOURCE_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_RESOURCE_STR_VALUES_RPL ON FHIRAPP.RESOURCE_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

CREATE INDEX FHIRAPP.IDX_RESOURCE_STR_VALUES_PSR ON FHIRAPP.RESOURCE_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_RESOURCE_STR_VALUES_RPS ON FHIRAPP.RESOURCE_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

CREATE INDEX FHIRAPP.IDX_RESOURCE_STR_VALUES_PLR ON FHIRAPP.RESOURCE_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.RESOURCE_STR_VALUES ADD CONSTRAINT FK_RESOURCE_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.RESOURCE_STR_VALUES ADD CONSTRAINT FK_RESOURCE_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.RESOURCE_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.RESOURCE_STR_VALUES_TENANT                      ON FHIRAPP.RESOURCE_STR_VALUES          FOR ROWS WHERE FHIRAPP.RESOURCE_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.RESOURCE_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.RESOURCE_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_RESOURCE_TOKEN_VALUES_PNCSCV ON FHIRAPP.RESOURCE_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_RESOURCE_TOKEN_VALUES_RPS ON FHIRAPP.RESOURCE_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

ALTER TABLE FHIRAPP.RESOURCE_TOKEN_VALUES ADD CONSTRAINT FK_RESOURCE_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.RESOURCE_TOKEN_VALUES ADD CONSTRAINT FK_RESOURCE_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.RESOURCE_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.RESOURCE_TOKEN_VALUES ADD CONSTRAINT FK_RESOURCE_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

CREATE PERMISSION FHIRAPP.RESOURCE_TOKEN_VALUES_TENANT                      ON FHIRAPP.RESOURCE_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.RESOURCE_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.RESOURCE_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.RESOURCE_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_RESOURCE_DATE_VALUES_RPSE ON FHIRAPP.RESOURCE_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

CREATE INDEX FHIRAPP.IDX_RESOURCE_DATE_VALUES_PVR ON FHIRAPP.RESOURCE_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_RESOURCE_DATE_VALUES_PSER ON FHIRAPP.RESOURCE_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_RESOURCE_DATE_VALUES_PESR ON FHIRAPP.RESOURCE_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_RESOURCE_DATE_VALUES_RPV ON FHIRAPP.RESOURCE_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

ALTER TABLE FHIRAPP.RESOURCE_DATE_VALUES ADD CONSTRAINT FK_RESOURCE_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.RESOURCE_DATE_VALUES ADD CONSTRAINT FK_RESOURCE_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.RESOURCE_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.RESOURCE_DATE_VALUES_TENANT                      ON FHIRAPP.RESOURCE_DATE_VALUES          FOR ROWS WHERE FHIRAPP.RESOURCE_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.RESOURCE_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.RESOURCE_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_RESOURCE_NUMBER_VALUES_RPS ON FHIRAPP.RESOURCE_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

CREATE INDEX FHIRAPP.IDX_RESOURCE_NUMBER_VALUES_PNNV ON FHIRAPP.RESOURCE_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.RESOURCE_NUMBER_VALUES ADD CONSTRAINT FK_RESOURCE_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.RESOURCE_NUMBER_VALUES ADD CONSTRAINT FK_RESOURCE_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.RESOURCE_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.RESOURCE_NUMBER_VALUES_TENANT                      ON FHIRAPP.RESOURCE_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.RESOURCE_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.RESOURCE_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.RESOURCE_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_RESOURCE_LATLNG_VALUES_PNNHV ON FHIRAPP.RESOURCE_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_RESOURCE_LATLNG_VALUES_RPLAT ON FHIRAPP.RESOURCE_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_RESOURCE_LATLNG_VALUES_PNNLV ON FHIRAPP.RESOURCE_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_RESOURCE_LATLNG_VALUES_RPLNG ON FHIRAPP.RESOURCE_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

ALTER TABLE FHIRAPP.RESOURCE_LATLNG_VALUES ADD CONSTRAINT FK_RESOURCE_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.RESOURCE_LATLNG_VALUES ADD CONSTRAINT FK_RESOURCE_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.RESOURCE_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.RESOURCE_LATLNG_VALUES_TENANT                      ON FHIRAPP.RESOURCE_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.RESOURCE_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.RESOURCE_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.RESOURCE_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_RESOURCE_QUANTITY_VALUES_RPCLHS ON FHIRAPP.RESOURCE_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_RESOURCE_QUANTITY_VALUES_RPS ON FHIRAPP.RESOURCE_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_RESOURCE_QUANTITY_VALUES_PCHLSR ON FHIRAPP.RESOURCE_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_RESOURCE_QUANTITY_VALUES_PNNV ON FHIRAPP.RESOURCE_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_RESOURCE_QUANTITY_VALUES_PCLHSR ON FHIRAPP.RESOURCE_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_RESOURCE_QUANTITY_VALUES_RPCHLS ON FHIRAPP.RESOURCE_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

ALTER TABLE FHIRAPP.RESOURCE_QUANTITY_VALUES ADD CONSTRAINT FK_RESOURCE_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.RESOURCE_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.RESOURCE_QUANTITY_VALUES ADD CONSTRAINT FK_RESOURCE_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.RESOURCE_QUANTITY_VALUES_TENANT                      ON FHIRAPP.RESOURCE_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.RESOURCE_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.RESOURCE_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.EVIDENCEVARIABLE_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT EVIDENCEVARIABLE_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.EVIDENCEVARIABLE_LOGICAL_RESOURCES ADD CONSTRAINT FK_EVIDENCEVARIABLE_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.EVIDENCEVARIABLE_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.EVIDENCEVARIABLE_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.EVIDENCEVARIABLE_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.EVIDENCEVARIABLE_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.EVIDENCEVARIABLE_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT EVIDENCEVARIABLE_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.EVIDENCEVARIABLE_RESOURCES_PRF_IN1 ON FHIRAPP.EVIDENCEVARIABLE_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.EVIDENCEVARIABLE_RESOURCES_TENANT                      ON FHIRAPP.EVIDENCEVARIABLE_RESOURCES          FOR ROWS WHERE FHIRAPP.EVIDENCEVARIABLE_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.EVIDENCEVARIABLE_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.EVIDENCEVARIABLE_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_EVIDENCEVARIABLE_STR_VALUES_RPL ON FHIRAPP.EVIDENCEVARIABLE_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

CREATE INDEX FHIRAPP.IDX_EVIDENCEVARIABLE_STR_VALUES_PSR ON FHIRAPP.EVIDENCEVARIABLE_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_EVIDENCEVARIABLE_STR_VALUES_PLR ON FHIRAPP.EVIDENCEVARIABLE_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_EVIDENCEVARIABLE_STR_VALUES_RPS ON FHIRAPP.EVIDENCEVARIABLE_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

ALTER TABLE FHIRAPP.EVIDENCEVARIABLE_STR_VALUES ADD CONSTRAINT FK_EVIDENCEVARIABLE_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.EVIDENCEVARIABLE_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.EVIDENCEVARIABLE_STR_VALUES ADD CONSTRAINT FK_EVIDENCEVARIABLE_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.EVIDENCEVARIABLE_STR_VALUES_TENANT                      ON FHIRAPP.EVIDENCEVARIABLE_STR_VALUES          FOR ROWS WHERE FHIRAPP.EVIDENCEVARIABLE_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.EVIDENCEVARIABLE_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.EVIDENCEVARIABLE_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_EVIDENCEVARIABLE_TOKEN_VALUES_PNCSCV ON FHIRAPP.EVIDENCEVARIABLE_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_EVIDENCEVARIABLE_TOKEN_VALUES_RPS ON FHIRAPP.EVIDENCEVARIABLE_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

ALTER TABLE FHIRAPP.EVIDENCEVARIABLE_TOKEN_VALUES ADD CONSTRAINT FK_EVIDENCEVARIABLE_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.EVIDENCEVARIABLE_TOKEN_VALUES ADD CONSTRAINT FK_EVIDENCEVARIABLE_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

ALTER TABLE FHIRAPP.EVIDENCEVARIABLE_TOKEN_VALUES ADD CONSTRAINT FK_EVIDENCEVARIABLE_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.EVIDENCEVARIABLE_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.EVIDENCEVARIABLE_TOKEN_VALUES_TENANT                      ON FHIRAPP.EVIDENCEVARIABLE_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.EVIDENCEVARIABLE_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.EVIDENCEVARIABLE_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.EVIDENCEVARIABLE_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_EVIDENCEVARIABLE_DATE_VALUES_PESR ON FHIRAPP.EVIDENCEVARIABLE_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_EVIDENCEVARIABLE_DATE_VALUES_PVR ON FHIRAPP.EVIDENCEVARIABLE_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_EVIDENCEVARIABLE_DATE_VALUES_RPV ON FHIRAPP.EVIDENCEVARIABLE_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

CREATE INDEX FHIRAPP.IDX_EVIDENCEVARIABLE_DATE_VALUES_RPSE ON FHIRAPP.EVIDENCEVARIABLE_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

CREATE INDEX FHIRAPP.IDX_EVIDENCEVARIABLE_DATE_VALUES_PSER ON FHIRAPP.EVIDENCEVARIABLE_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.EVIDENCEVARIABLE_DATE_VALUES ADD CONSTRAINT FK_EVIDENCEVARIABLE_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.EVIDENCEVARIABLE_DATE_VALUES ADD CONSTRAINT FK_EVIDENCEVARIABLE_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.EVIDENCEVARIABLE_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.EVIDENCEVARIABLE_DATE_VALUES_TENANT                      ON FHIRAPP.EVIDENCEVARIABLE_DATE_VALUES          FOR ROWS WHERE FHIRAPP.EVIDENCEVARIABLE_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.EVIDENCEVARIABLE_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.EVIDENCEVARIABLE_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_EVIDENCEVARIABLE_NUMBER_VALUES_PNNV ON FHIRAPP.EVIDENCEVARIABLE_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_EVIDENCEVARIABLE_NUMBER_VALUES_RPS ON FHIRAPP.EVIDENCEVARIABLE_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

ALTER TABLE FHIRAPP.EVIDENCEVARIABLE_NUMBER_VALUES ADD CONSTRAINT FK_EVIDENCEVARIABLE_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.EVIDENCEVARIABLE_NUMBER_VALUES ADD CONSTRAINT FK_EVIDENCEVARIABLE_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.EVIDENCEVARIABLE_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.EVIDENCEVARIABLE_NUMBER_VALUES_TENANT                      ON FHIRAPP.EVIDENCEVARIABLE_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.EVIDENCEVARIABLE_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.EVIDENCEVARIABLE_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.EVIDENCEVARIABLE_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_EVIDENCEVARIABLE_LATLNG_VALUES_PNNLV ON FHIRAPP.EVIDENCEVARIABLE_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_EVIDENCEVARIABLE_LATLNG_VALUES_RPLNG ON FHIRAPP.EVIDENCEVARIABLE_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_EVIDENCEVARIABLE_LATLNG_VALUES_RPLAT ON FHIRAPP.EVIDENCEVARIABLE_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_EVIDENCEVARIABLE_LATLNG_VALUES_PNNHV ON FHIRAPP.EVIDENCEVARIABLE_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.EVIDENCEVARIABLE_LATLNG_VALUES ADD CONSTRAINT FK_EVIDENCEVARIABLE_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.EVIDENCEVARIABLE_LATLNG_VALUES ADD CONSTRAINT FK_EVIDENCEVARIABLE_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.EVIDENCEVARIABLE_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.EVIDENCEVARIABLE_LATLNG_VALUES_TENANT                      ON FHIRAPP.EVIDENCEVARIABLE_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.EVIDENCEVARIABLE_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.EVIDENCEVARIABLE_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.EVIDENCEVARIABLE_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_EVIDENCEVARIABLE_QUANTITY_VALUES_PCLHSR ON FHIRAPP.EVIDENCEVARIABLE_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_EVIDENCEVARIABLE_QUANTITY_VALUES_RPCHLS ON FHIRAPP.EVIDENCEVARIABLE_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_EVIDENCEVARIABLE_QUANTITY_VALUES_PNNV ON FHIRAPP.EVIDENCEVARIABLE_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_EVIDENCEVARIABLE_QUANTITY_VALUES_PCHLSR ON FHIRAPP.EVIDENCEVARIABLE_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_EVIDENCEVARIABLE_QUANTITY_VALUES_RPCLHS ON FHIRAPP.EVIDENCEVARIABLE_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_EVIDENCEVARIABLE_QUANTITY_VALUES_RPS ON FHIRAPP.EVIDENCEVARIABLE_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

ALTER TABLE FHIRAPP.EVIDENCEVARIABLE_QUANTITY_VALUES ADD CONSTRAINT FK_EVIDENCEVARIABLE_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.EVIDENCEVARIABLE_QUANTITY_VALUES ADD CONSTRAINT FK_EVIDENCEVARIABLE_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.EVIDENCEVARIABLE_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.EVIDENCEVARIABLE_QUANTITY_VALUES_TENANT                      ON FHIRAPP.EVIDENCEVARIABLE_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.EVIDENCEVARIABLE_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.EVIDENCEVARIABLE_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MOLECULARSEQUENCE_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT MOLECULARSEQUENCE_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.MOLECULARSEQUENCE_LOGICAL_RESOURCES ADD CONSTRAINT FK_MOLECULARSEQUENCE_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.MOLECULARSEQUENCE_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.MOLECULARSEQUENCE_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.MOLECULARSEQUENCE_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MOLECULARSEQUENCE_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MOLECULARSEQUENCE_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT MOLECULARSEQUENCE_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.MOLECULARSEQUENCE_RESOURCES_PRF_IN1 ON FHIRAPP.MOLECULARSEQUENCE_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.MOLECULARSEQUENCE_RESOURCES_TENANT                      ON FHIRAPP.MOLECULARSEQUENCE_RESOURCES          FOR ROWS WHERE FHIRAPP.MOLECULARSEQUENCE_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MOLECULARSEQUENCE_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MOLECULARSEQUENCE_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_MOLECULARSEQUENCE_STR_VALUES_PSR ON FHIRAPP.MOLECULARSEQUENCE_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MOLECULARSEQUENCE_STR_VALUES_PLR ON FHIRAPP.MOLECULARSEQUENCE_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MOLECULARSEQUENCE_STR_VALUES_RPS ON FHIRAPP.MOLECULARSEQUENCE_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

CREATE INDEX FHIRAPP.IDX_MOLECULARSEQUENCE_STR_VALUES_RPL ON FHIRAPP.MOLECULARSEQUENCE_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

ALTER TABLE FHIRAPP.MOLECULARSEQUENCE_STR_VALUES ADD CONSTRAINT FK_MOLECULARSEQUENCE_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.MOLECULARSEQUENCE_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.MOLECULARSEQUENCE_STR_VALUES ADD CONSTRAINT FK_MOLECULARSEQUENCE_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.MOLECULARSEQUENCE_STR_VALUES_TENANT                      ON FHIRAPP.MOLECULARSEQUENCE_STR_VALUES          FOR ROWS WHERE FHIRAPP.MOLECULARSEQUENCE_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MOLECULARSEQUENCE_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MOLECULARSEQUENCE_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_MOLECULARSEQUENCE_TOKEN_VALUES_PNCSCV ON FHIRAPP.MOLECULARSEQUENCE_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MOLECULARSEQUENCE_TOKEN_VALUES_RPS ON FHIRAPP.MOLECULARSEQUENCE_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

ALTER TABLE FHIRAPP.MOLECULARSEQUENCE_TOKEN_VALUES ADD CONSTRAINT FK_MOLECULARSEQUENCE_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.MOLECULARSEQUENCE_TOKEN_VALUES ADD CONSTRAINT FK_MOLECULARSEQUENCE_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

ALTER TABLE FHIRAPP.MOLECULARSEQUENCE_TOKEN_VALUES ADD CONSTRAINT FK_MOLECULARSEQUENCE_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.MOLECULARSEQUENCE_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.MOLECULARSEQUENCE_TOKEN_VALUES_TENANT                      ON FHIRAPP.MOLECULARSEQUENCE_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.MOLECULARSEQUENCE_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MOLECULARSEQUENCE_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MOLECULARSEQUENCE_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_MOLECULARSEQUENCE_DATE_VALUES_RPSE ON FHIRAPP.MOLECULARSEQUENCE_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

CREATE INDEX FHIRAPP.IDX_MOLECULARSEQUENCE_DATE_VALUES_RPV ON FHIRAPP.MOLECULARSEQUENCE_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

CREATE INDEX FHIRAPP.IDX_MOLECULARSEQUENCE_DATE_VALUES_PESR ON FHIRAPP.MOLECULARSEQUENCE_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MOLECULARSEQUENCE_DATE_VALUES_PVR ON FHIRAPP.MOLECULARSEQUENCE_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MOLECULARSEQUENCE_DATE_VALUES_PSER ON FHIRAPP.MOLECULARSEQUENCE_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.MOLECULARSEQUENCE_DATE_VALUES ADD CONSTRAINT FK_MOLECULARSEQUENCE_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.MOLECULARSEQUENCE_DATE_VALUES ADD CONSTRAINT FK_MOLECULARSEQUENCE_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.MOLECULARSEQUENCE_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.MOLECULARSEQUENCE_DATE_VALUES_TENANT                      ON FHIRAPP.MOLECULARSEQUENCE_DATE_VALUES          FOR ROWS WHERE FHIRAPP.MOLECULARSEQUENCE_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MOLECULARSEQUENCE_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MOLECULARSEQUENCE_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_MOLECULARSEQUENCE_NUMBER_VALUES_PNNV ON FHIRAPP.MOLECULARSEQUENCE_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MOLECULARSEQUENCE_NUMBER_VALUES_RPS ON FHIRAPP.MOLECULARSEQUENCE_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

ALTER TABLE FHIRAPP.MOLECULARSEQUENCE_NUMBER_VALUES ADD CONSTRAINT FK_MOLECULARSEQUENCE_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.MOLECULARSEQUENCE_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.MOLECULARSEQUENCE_NUMBER_VALUES ADD CONSTRAINT FK_MOLECULARSEQUENCE_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.MOLECULARSEQUENCE_NUMBER_VALUES_TENANT                      ON FHIRAPP.MOLECULARSEQUENCE_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.MOLECULARSEQUENCE_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MOLECULARSEQUENCE_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MOLECULARSEQUENCE_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_MOLECULARSEQUENCE_LATLNG_VALUES_RPLAT ON FHIRAPP.MOLECULARSEQUENCE_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_MOLECULARSEQUENCE_LATLNG_VALUES_PNNLV ON FHIRAPP.MOLECULARSEQUENCE_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MOLECULARSEQUENCE_LATLNG_VALUES_PNNHV ON FHIRAPP.MOLECULARSEQUENCE_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MOLECULARSEQUENCE_LATLNG_VALUES_RPLNG ON FHIRAPP.MOLECULARSEQUENCE_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

ALTER TABLE FHIRAPP.MOLECULARSEQUENCE_LATLNG_VALUES ADD CONSTRAINT FK_MOLECULARSEQUENCE_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.MOLECULARSEQUENCE_LATLNG_VALUES ADD CONSTRAINT FK_MOLECULARSEQUENCE_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.MOLECULARSEQUENCE_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.MOLECULARSEQUENCE_LATLNG_VALUES_TENANT                      ON FHIRAPP.MOLECULARSEQUENCE_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.MOLECULARSEQUENCE_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MOLECULARSEQUENCE_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MOLECULARSEQUENCE_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_MOLECULARSEQUENCE_QUANTITY_VALUES_RPCHLS ON FHIRAPP.MOLECULARSEQUENCE_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_MOLECULARSEQUENCE_QUANTITY_VALUES_PCHLSR ON FHIRAPP.MOLECULARSEQUENCE_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MOLECULARSEQUENCE_QUANTITY_VALUES_PNNV ON FHIRAPP.MOLECULARSEQUENCE_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_MOLECULARSEQUENCE_QUANTITY_VALUES_RPCLHS ON FHIRAPP.MOLECULARSEQUENCE_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_MOLECULARSEQUENCE_QUANTITY_VALUES_RPS ON FHIRAPP.MOLECULARSEQUENCE_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_MOLECULARSEQUENCE_QUANTITY_VALUES_PCLHSR ON FHIRAPP.MOLECULARSEQUENCE_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.MOLECULARSEQUENCE_QUANTITY_VALUES ADD CONSTRAINT FK_MOLECULARSEQUENCE_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.MOLECULARSEQUENCE_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.MOLECULARSEQUENCE_QUANTITY_VALUES ADD CONSTRAINT FK_MOLECULARSEQUENCE_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.MOLECULARSEQUENCE_QUANTITY_VALUES_TENANT                      ON FHIRAPP.MOLECULARSEQUENCE_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.MOLECULARSEQUENCE_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MOLECULARSEQUENCE_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDICINALPRODUCT_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT MEDICINALPRODUCT_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.MEDICINALPRODUCT_LOGICAL_RESOURCES ADD CONSTRAINT FK_MEDICINALPRODUCT_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.MEDICINALPRODUCT_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.MEDICINALPRODUCT_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.MEDICINALPRODUCT_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDICINALPRODUCT_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDICINALPRODUCT_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT MEDICINALPRODUCT_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.MEDICINALPRODUCT_RESOURCES_PRF_IN1 ON FHIRAPP.MEDICINALPRODUCT_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.MEDICINALPRODUCT_RESOURCES_TENANT                      ON FHIRAPP.MEDICINALPRODUCT_RESOURCES          FOR ROWS WHERE FHIRAPP.MEDICINALPRODUCT_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDICINALPRODUCT_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDICINALPRODUCT_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCT_STR_VALUES_RPL ON FHIRAPP.MEDICINALPRODUCT_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCT_STR_VALUES_PSR ON FHIRAPP.MEDICINALPRODUCT_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCT_STR_VALUES_PLR ON FHIRAPP.MEDICINALPRODUCT_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCT_STR_VALUES_RPS ON FHIRAPP.MEDICINALPRODUCT_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

ALTER TABLE FHIRAPP.MEDICINALPRODUCT_STR_VALUES ADD CONSTRAINT FK_MEDICINALPRODUCT_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.MEDICINALPRODUCT_STR_VALUES ADD CONSTRAINT FK_MEDICINALPRODUCT_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.MEDICINALPRODUCT_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.MEDICINALPRODUCT_STR_VALUES_TENANT                      ON FHIRAPP.MEDICINALPRODUCT_STR_VALUES          FOR ROWS WHERE FHIRAPP.MEDICINALPRODUCT_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDICINALPRODUCT_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDICINALPRODUCT_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCT_TOKEN_VALUES_RPS ON FHIRAPP.MEDICINALPRODUCT_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCT_TOKEN_VALUES_PNCSCV ON FHIRAPP.MEDICINALPRODUCT_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.MEDICINALPRODUCT_TOKEN_VALUES ADD CONSTRAINT FK_MEDICINALPRODUCT_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.MEDICINALPRODUCT_TOKEN_VALUES ADD CONSTRAINT FK_MEDICINALPRODUCT_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

ALTER TABLE FHIRAPP.MEDICINALPRODUCT_TOKEN_VALUES ADD CONSTRAINT FK_MEDICINALPRODUCT_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.MEDICINALPRODUCT_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.MEDICINALPRODUCT_TOKEN_VALUES_TENANT                      ON FHIRAPP.MEDICINALPRODUCT_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.MEDICINALPRODUCT_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDICINALPRODUCT_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDICINALPRODUCT_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCT_DATE_VALUES_PVR ON FHIRAPP.MEDICINALPRODUCT_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCT_DATE_VALUES_RPV ON FHIRAPP.MEDICINALPRODUCT_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCT_DATE_VALUES_PESR ON FHIRAPP.MEDICINALPRODUCT_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCT_DATE_VALUES_PSER ON FHIRAPP.MEDICINALPRODUCT_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCT_DATE_VALUES_RPSE ON FHIRAPP.MEDICINALPRODUCT_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

ALTER TABLE FHIRAPP.MEDICINALPRODUCT_DATE_VALUES ADD CONSTRAINT FK_MEDICINALPRODUCT_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.MEDICINALPRODUCT_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.MEDICINALPRODUCT_DATE_VALUES ADD CONSTRAINT FK_MEDICINALPRODUCT_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.MEDICINALPRODUCT_DATE_VALUES_TENANT                      ON FHIRAPP.MEDICINALPRODUCT_DATE_VALUES          FOR ROWS WHERE FHIRAPP.MEDICINALPRODUCT_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDICINALPRODUCT_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDICINALPRODUCT_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCT_NUMBER_VALUES_RPS ON FHIRAPP.MEDICINALPRODUCT_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCT_NUMBER_VALUES_PNNV ON FHIRAPP.MEDICINALPRODUCT_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.MEDICINALPRODUCT_NUMBER_VALUES ADD CONSTRAINT FK_MEDICINALPRODUCT_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.MEDICINALPRODUCT_NUMBER_VALUES ADD CONSTRAINT FK_MEDICINALPRODUCT_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.MEDICINALPRODUCT_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.MEDICINALPRODUCT_NUMBER_VALUES_TENANT                      ON FHIRAPP.MEDICINALPRODUCT_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.MEDICINALPRODUCT_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDICINALPRODUCT_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDICINALPRODUCT_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCT_LATLNG_VALUES_PNNHV ON FHIRAPP.MEDICINALPRODUCT_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCT_LATLNG_VALUES_PNNLV ON FHIRAPP.MEDICINALPRODUCT_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCT_LATLNG_VALUES_RPLNG ON FHIRAPP.MEDICINALPRODUCT_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCT_LATLNG_VALUES_RPLAT ON FHIRAPP.MEDICINALPRODUCT_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

ALTER TABLE FHIRAPP.MEDICINALPRODUCT_LATLNG_VALUES ADD CONSTRAINT FK_MEDICINALPRODUCT_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.MEDICINALPRODUCT_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.MEDICINALPRODUCT_LATLNG_VALUES ADD CONSTRAINT FK_MEDICINALPRODUCT_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.MEDICINALPRODUCT_LATLNG_VALUES_TENANT                      ON FHIRAPP.MEDICINALPRODUCT_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.MEDICINALPRODUCT_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDICINALPRODUCT_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDICINALPRODUCT_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCT_QUANTITY_VALUES_RPS ON FHIRAPP.MEDICINALPRODUCT_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCT_QUANTITY_VALUES_PCLHSR ON FHIRAPP.MEDICINALPRODUCT_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCT_QUANTITY_VALUES_RPCLHS ON FHIRAPP.MEDICINALPRODUCT_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCT_QUANTITY_VALUES_PNNV ON FHIRAPP.MEDICINALPRODUCT_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCT_QUANTITY_VALUES_PCHLSR ON FHIRAPP.MEDICINALPRODUCT_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCT_QUANTITY_VALUES_RPCHLS ON FHIRAPP.MEDICINALPRODUCT_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

ALTER TABLE FHIRAPP.MEDICINALPRODUCT_QUANTITY_VALUES ADD CONSTRAINT FK_MEDICINALPRODUCT_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.MEDICINALPRODUCT_QUANTITY_VALUES ADD CONSTRAINT FK_MEDICINALPRODUCT_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.MEDICINALPRODUCT_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.MEDICINALPRODUCT_QUANTITY_VALUES_TENANT                      ON FHIRAPP.MEDICINALPRODUCT_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.MEDICINALPRODUCT_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDICINALPRODUCT_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.DEVICEMETRIC_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT DEVICEMETRIC_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.DEVICEMETRIC_LOGICAL_RESOURCES ADD CONSTRAINT FK_DEVICEMETRIC_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.DEVICEMETRIC_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.DEVICEMETRIC_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.DEVICEMETRIC_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.DEVICEMETRIC_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.DEVICEMETRIC_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT DEVICEMETRIC_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.DEVICEMETRIC_RESOURCES_PRF_IN1 ON FHIRAPP.DEVICEMETRIC_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.DEVICEMETRIC_RESOURCES_TENANT                      ON FHIRAPP.DEVICEMETRIC_RESOURCES          FOR ROWS WHERE FHIRAPP.DEVICEMETRIC_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.DEVICEMETRIC_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.DEVICEMETRIC_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_DEVICEMETRIC_STR_VALUES_PSR ON FHIRAPP.DEVICEMETRIC_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_DEVICEMETRIC_STR_VALUES_RPL ON FHIRAPP.DEVICEMETRIC_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

CREATE INDEX FHIRAPP.IDX_DEVICEMETRIC_STR_VALUES_RPS ON FHIRAPP.DEVICEMETRIC_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

CREATE INDEX FHIRAPP.IDX_DEVICEMETRIC_STR_VALUES_PLR ON FHIRAPP.DEVICEMETRIC_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.DEVICEMETRIC_STR_VALUES ADD CONSTRAINT FK_DEVICEMETRIC_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.DEVICEMETRIC_STR_VALUES ADD CONSTRAINT FK_DEVICEMETRIC_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.DEVICEMETRIC_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.DEVICEMETRIC_STR_VALUES_TENANT                      ON FHIRAPP.DEVICEMETRIC_STR_VALUES          FOR ROWS WHERE FHIRAPP.DEVICEMETRIC_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.DEVICEMETRIC_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.DEVICEMETRIC_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_DEVICEMETRIC_TOKEN_VALUES_RPS ON FHIRAPP.DEVICEMETRIC_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

CREATE INDEX FHIRAPP.IDX_DEVICEMETRIC_TOKEN_VALUES_PNCSCV ON FHIRAPP.DEVICEMETRIC_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.DEVICEMETRIC_TOKEN_VALUES ADD CONSTRAINT FK_DEVICEMETRIC_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

ALTER TABLE FHIRAPP.DEVICEMETRIC_TOKEN_VALUES ADD CONSTRAINT FK_DEVICEMETRIC_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.DEVICEMETRIC_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.DEVICEMETRIC_TOKEN_VALUES ADD CONSTRAINT FK_DEVICEMETRIC_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.DEVICEMETRIC_TOKEN_VALUES_TENANT                      ON FHIRAPP.DEVICEMETRIC_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.DEVICEMETRIC_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.DEVICEMETRIC_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.DEVICEMETRIC_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_DEVICEMETRIC_DATE_VALUES_RPV ON FHIRAPP.DEVICEMETRIC_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

CREATE INDEX FHIRAPP.IDX_DEVICEMETRIC_DATE_VALUES_PESR ON FHIRAPP.DEVICEMETRIC_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_DEVICEMETRIC_DATE_VALUES_RPSE ON FHIRAPP.DEVICEMETRIC_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

CREATE INDEX FHIRAPP.IDX_DEVICEMETRIC_DATE_VALUES_PSER ON FHIRAPP.DEVICEMETRIC_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_DEVICEMETRIC_DATE_VALUES_PVR ON FHIRAPP.DEVICEMETRIC_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.DEVICEMETRIC_DATE_VALUES ADD CONSTRAINT FK_DEVICEMETRIC_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.DEVICEMETRIC_DATE_VALUES ADD CONSTRAINT FK_DEVICEMETRIC_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.DEVICEMETRIC_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.DEVICEMETRIC_DATE_VALUES_TENANT                      ON FHIRAPP.DEVICEMETRIC_DATE_VALUES          FOR ROWS WHERE FHIRAPP.DEVICEMETRIC_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.DEVICEMETRIC_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.DEVICEMETRIC_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_DEVICEMETRIC_NUMBER_VALUES_RPS ON FHIRAPP.DEVICEMETRIC_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

CREATE INDEX FHIRAPP.IDX_DEVICEMETRIC_NUMBER_VALUES_PNNV ON FHIRAPP.DEVICEMETRIC_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.DEVICEMETRIC_NUMBER_VALUES ADD CONSTRAINT FK_DEVICEMETRIC_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.DEVICEMETRIC_NUMBER_VALUES ADD CONSTRAINT FK_DEVICEMETRIC_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.DEVICEMETRIC_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.DEVICEMETRIC_NUMBER_VALUES_TENANT                      ON FHIRAPP.DEVICEMETRIC_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.DEVICEMETRIC_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.DEVICEMETRIC_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.DEVICEMETRIC_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_DEVICEMETRIC_LATLNG_VALUES_RPLAT ON FHIRAPP.DEVICEMETRIC_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_DEVICEMETRIC_LATLNG_VALUES_PNNLV ON FHIRAPP.DEVICEMETRIC_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_DEVICEMETRIC_LATLNG_VALUES_RPLNG ON FHIRAPP.DEVICEMETRIC_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_DEVICEMETRIC_LATLNG_VALUES_PNNHV ON FHIRAPP.DEVICEMETRIC_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.DEVICEMETRIC_LATLNG_VALUES ADD CONSTRAINT FK_DEVICEMETRIC_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.DEVICEMETRIC_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.DEVICEMETRIC_LATLNG_VALUES ADD CONSTRAINT FK_DEVICEMETRIC_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.DEVICEMETRIC_LATLNG_VALUES_TENANT                      ON FHIRAPP.DEVICEMETRIC_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.DEVICEMETRIC_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.DEVICEMETRIC_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.DEVICEMETRIC_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_DEVICEMETRIC_QUANTITY_VALUES_PNNV ON FHIRAPP.DEVICEMETRIC_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_DEVICEMETRIC_QUANTITY_VALUES_PCLHSR ON FHIRAPP.DEVICEMETRIC_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_DEVICEMETRIC_QUANTITY_VALUES_RPCHLS ON FHIRAPP.DEVICEMETRIC_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_DEVICEMETRIC_QUANTITY_VALUES_RPCLHS ON FHIRAPP.DEVICEMETRIC_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_DEVICEMETRIC_QUANTITY_VALUES_RPS ON FHIRAPP.DEVICEMETRIC_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_DEVICEMETRIC_QUANTITY_VALUES_PCHLSR ON FHIRAPP.DEVICEMETRIC_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.DEVICEMETRIC_QUANTITY_VALUES ADD CONSTRAINT FK_DEVICEMETRIC_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.DEVICEMETRIC_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.DEVICEMETRIC_QUANTITY_VALUES ADD CONSTRAINT FK_DEVICEMETRIC_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.DEVICEMETRIC_QUANTITY_VALUES_TENANT                      ON FHIRAPP.DEVICEMETRIC_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.DEVICEMETRIC_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.DEVICEMETRIC_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.CODESYSTEM_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT CODESYSTEM_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.CODESYSTEM_LOGICAL_RESOURCES ADD CONSTRAINT FK_CODESYSTEM_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.CODESYSTEM_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.CODESYSTEM_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.CODESYSTEM_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.CODESYSTEM_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.CODESYSTEM_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT CODESYSTEM_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.CODESYSTEM_RESOURCES_PRF_IN1 ON FHIRAPP.CODESYSTEM_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.CODESYSTEM_RESOURCES_TENANT                      ON FHIRAPP.CODESYSTEM_RESOURCES          FOR ROWS WHERE FHIRAPP.CODESYSTEM_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.CODESYSTEM_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.CODESYSTEM_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_CODESYSTEM_STR_VALUES_RPS ON FHIRAPP.CODESYSTEM_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

CREATE INDEX FHIRAPP.IDX_CODESYSTEM_STR_VALUES_RPL ON FHIRAPP.CODESYSTEM_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

CREATE INDEX FHIRAPP.IDX_CODESYSTEM_STR_VALUES_PSR ON FHIRAPP.CODESYSTEM_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_CODESYSTEM_STR_VALUES_PLR ON FHIRAPP.CODESYSTEM_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.CODESYSTEM_STR_VALUES ADD CONSTRAINT FK_CODESYSTEM_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.CODESYSTEM_STR_VALUES ADD CONSTRAINT FK_CODESYSTEM_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.CODESYSTEM_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.CODESYSTEM_STR_VALUES_TENANT                      ON FHIRAPP.CODESYSTEM_STR_VALUES          FOR ROWS WHERE FHIRAPP.CODESYSTEM_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.CODESYSTEM_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.CODESYSTEM_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_CODESYSTEM_TOKEN_VALUES_PNCSCV ON FHIRAPP.CODESYSTEM_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_CODESYSTEM_TOKEN_VALUES_RPS ON FHIRAPP.CODESYSTEM_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

ALTER TABLE FHIRAPP.CODESYSTEM_TOKEN_VALUES ADD CONSTRAINT FK_CODESYSTEM_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.CODESYSTEM_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.CODESYSTEM_TOKEN_VALUES ADD CONSTRAINT FK_CODESYSTEM_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

ALTER TABLE FHIRAPP.CODESYSTEM_TOKEN_VALUES ADD CONSTRAINT FK_CODESYSTEM_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.CODESYSTEM_TOKEN_VALUES_TENANT                      ON FHIRAPP.CODESYSTEM_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.CODESYSTEM_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.CODESYSTEM_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.CODESYSTEM_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_CODESYSTEM_DATE_VALUES_PESR ON FHIRAPP.CODESYSTEM_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_CODESYSTEM_DATE_VALUES_PVR ON FHIRAPP.CODESYSTEM_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_CODESYSTEM_DATE_VALUES_PSER ON FHIRAPP.CODESYSTEM_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_CODESYSTEM_DATE_VALUES_RPV ON FHIRAPP.CODESYSTEM_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

CREATE INDEX FHIRAPP.IDX_CODESYSTEM_DATE_VALUES_RPSE ON FHIRAPP.CODESYSTEM_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

ALTER TABLE FHIRAPP.CODESYSTEM_DATE_VALUES ADD CONSTRAINT FK_CODESYSTEM_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.CODESYSTEM_DATE_VALUES ADD CONSTRAINT FK_CODESYSTEM_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.CODESYSTEM_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.CODESYSTEM_DATE_VALUES_TENANT                      ON FHIRAPP.CODESYSTEM_DATE_VALUES          FOR ROWS WHERE FHIRAPP.CODESYSTEM_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.CODESYSTEM_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.CODESYSTEM_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_CODESYSTEM_NUMBER_VALUES_PNNV ON FHIRAPP.CODESYSTEM_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_CODESYSTEM_NUMBER_VALUES_RPS ON FHIRAPP.CODESYSTEM_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

ALTER TABLE FHIRAPP.CODESYSTEM_NUMBER_VALUES ADD CONSTRAINT FK_CODESYSTEM_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.CODESYSTEM_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.CODESYSTEM_NUMBER_VALUES ADD CONSTRAINT FK_CODESYSTEM_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.CODESYSTEM_NUMBER_VALUES_TENANT                      ON FHIRAPP.CODESYSTEM_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.CODESYSTEM_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.CODESYSTEM_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.CODESYSTEM_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_CODESYSTEM_LATLNG_VALUES_PNNHV ON FHIRAPP.CODESYSTEM_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_CODESYSTEM_LATLNG_VALUES_RPLAT ON FHIRAPP.CODESYSTEM_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_CODESYSTEM_LATLNG_VALUES_RPLNG ON FHIRAPP.CODESYSTEM_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_CODESYSTEM_LATLNG_VALUES_PNNLV ON FHIRAPP.CODESYSTEM_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.CODESYSTEM_LATLNG_VALUES ADD CONSTRAINT FK_CODESYSTEM_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.CODESYSTEM_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.CODESYSTEM_LATLNG_VALUES ADD CONSTRAINT FK_CODESYSTEM_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.CODESYSTEM_LATLNG_VALUES_TENANT                      ON FHIRAPP.CODESYSTEM_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.CODESYSTEM_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.CODESYSTEM_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.CODESYSTEM_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_CODESYSTEM_QUANTITY_VALUES_RPCHLS ON FHIRAPP.CODESYSTEM_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_CODESYSTEM_QUANTITY_VALUES_PNNV ON FHIRAPP.CODESYSTEM_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_CODESYSTEM_QUANTITY_VALUES_PCHLSR ON FHIRAPP.CODESYSTEM_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_CODESYSTEM_QUANTITY_VALUES_RPS ON FHIRAPP.CODESYSTEM_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_CODESYSTEM_QUANTITY_VALUES_RPCLHS ON FHIRAPP.CODESYSTEM_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_CODESYSTEM_QUANTITY_VALUES_PCLHSR ON FHIRAPP.CODESYSTEM_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.CODESYSTEM_QUANTITY_VALUES ADD CONSTRAINT FK_CODESYSTEM_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.CODESYSTEM_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.CODESYSTEM_QUANTITY_VALUES ADD CONSTRAINT FK_CODESYSTEM_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.CODESYSTEM_QUANTITY_VALUES_TENANT                      ON FHIRAPP.CODESYSTEM_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.CODESYSTEM_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.CODESYSTEM_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.FLAG_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT FLAG_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.FLAG_LOGICAL_RESOURCES ADD CONSTRAINT FK_FLAG_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.FLAG_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.FLAG_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.FLAG_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.FLAG_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.FLAG_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT FLAG_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.FLAG_RESOURCES_PRF_IN1 ON FHIRAPP.FLAG_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.FLAG_RESOURCES_TENANT                      ON FHIRAPP.FLAG_RESOURCES          FOR ROWS WHERE FHIRAPP.FLAG_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.FLAG_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.FLAG_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_FLAG_STR_VALUES_RPS ON FHIRAPP.FLAG_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

CREATE INDEX FHIRAPP.IDX_FLAG_STR_VALUES_RPL ON FHIRAPP.FLAG_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

CREATE INDEX FHIRAPP.IDX_FLAG_STR_VALUES_PSR ON FHIRAPP.FLAG_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_FLAG_STR_VALUES_PLR ON FHIRAPP.FLAG_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.FLAG_STR_VALUES ADD CONSTRAINT FK_FLAG_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.FLAG_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.FLAG_STR_VALUES ADD CONSTRAINT FK_FLAG_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.FLAG_STR_VALUES_TENANT                      ON FHIRAPP.FLAG_STR_VALUES          FOR ROWS WHERE FHIRAPP.FLAG_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.FLAG_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.FLAG_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_FLAG_TOKEN_VALUES_RPS ON FHIRAPP.FLAG_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

CREATE INDEX FHIRAPP.IDX_FLAG_TOKEN_VALUES_PNCSCV ON FHIRAPP.FLAG_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.FLAG_TOKEN_VALUES ADD CONSTRAINT FK_FLAG_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.FLAG_TOKEN_VALUES ADD CONSTRAINT FK_FLAG_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

ALTER TABLE FHIRAPP.FLAG_TOKEN_VALUES ADD CONSTRAINT FK_FLAG_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.FLAG_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.FLAG_TOKEN_VALUES_TENANT                      ON FHIRAPP.FLAG_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.FLAG_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.FLAG_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.FLAG_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_FLAG_DATE_VALUES_PESR ON FHIRAPP.FLAG_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_FLAG_DATE_VALUES_RPSE ON FHIRAPP.FLAG_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

CREATE INDEX FHIRAPP.IDX_FLAG_DATE_VALUES_PSER ON FHIRAPP.FLAG_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_FLAG_DATE_VALUES_RPV ON FHIRAPP.FLAG_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

CREATE INDEX FHIRAPP.IDX_FLAG_DATE_VALUES_PVR ON FHIRAPP.FLAG_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.FLAG_DATE_VALUES ADD CONSTRAINT FK_FLAG_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.FLAG_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.FLAG_DATE_VALUES ADD CONSTRAINT FK_FLAG_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.FLAG_DATE_VALUES_TENANT                      ON FHIRAPP.FLAG_DATE_VALUES          FOR ROWS WHERE FHIRAPP.FLAG_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.FLAG_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.FLAG_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_FLAG_NUMBER_VALUES_RPS ON FHIRAPP.FLAG_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

CREATE INDEX FHIRAPP.IDX_FLAG_NUMBER_VALUES_PNNV ON FHIRAPP.FLAG_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.FLAG_NUMBER_VALUES ADD CONSTRAINT FK_FLAG_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.FLAG_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.FLAG_NUMBER_VALUES ADD CONSTRAINT FK_FLAG_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.FLAG_NUMBER_VALUES_TENANT                      ON FHIRAPP.FLAG_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.FLAG_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.FLAG_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.FLAG_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_FLAG_LATLNG_VALUES_PNNLV ON FHIRAPP.FLAG_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_FLAG_LATLNG_VALUES_RPLNG ON FHIRAPP.FLAG_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_FLAG_LATLNG_VALUES_PNNHV ON FHIRAPP.FLAG_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_FLAG_LATLNG_VALUES_RPLAT ON FHIRAPP.FLAG_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

ALTER TABLE FHIRAPP.FLAG_LATLNG_VALUES ADD CONSTRAINT FK_FLAG_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.FLAG_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.FLAG_LATLNG_VALUES ADD CONSTRAINT FK_FLAG_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.FLAG_LATLNG_VALUES_TENANT                      ON FHIRAPP.FLAG_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.FLAG_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.FLAG_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.FLAG_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_FLAG_QUANTITY_VALUES_PCLHSR ON FHIRAPP.FLAG_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_FLAG_QUANTITY_VALUES_RPCLHS ON FHIRAPP.FLAG_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_FLAG_QUANTITY_VALUES_PCHLSR ON FHIRAPP.FLAG_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_FLAG_QUANTITY_VALUES_RPS ON FHIRAPP.FLAG_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_FLAG_QUANTITY_VALUES_RPCHLS ON FHIRAPP.FLAG_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_FLAG_QUANTITY_VALUES_PNNV ON FHIRAPP.FLAG_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

ALTER TABLE FHIRAPP.FLAG_QUANTITY_VALUES ADD CONSTRAINT FK_FLAG_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.FLAG_QUANTITY_VALUES ADD CONSTRAINT FK_FLAG_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.FLAG_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.FLAG_QUANTITY_VALUES_TENANT                      ON FHIRAPP.FLAG_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.FLAG_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.FLAG_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.SUBSTANCENUCLEICACID_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT SUBSTANCENUCLEICACID_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.SUBSTANCENUCLEICACID_LOGICAL_RESOURCES ADD CONSTRAINT FK_SUBSTANCENUCLEICACID_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.SUBSTANCENUCLEICACID_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.SUBSTANCENUCLEICACID_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.SUBSTANCENUCLEICACID_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.SUBSTANCENUCLEICACID_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.SUBSTANCENUCLEICACID_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT SUBSTANCENUCLEICACID_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.SUBSTANCENUCLEICACID_RESOURCES_PRF_IN1 ON FHIRAPP.SUBSTANCENUCLEICACID_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.SUBSTANCENUCLEICACID_RESOURCES_TENANT                      ON FHIRAPP.SUBSTANCENUCLEICACID_RESOURCES          FOR ROWS WHERE FHIRAPP.SUBSTANCENUCLEICACID_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.SUBSTANCENUCLEICACID_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.SUBSTANCENUCLEICACID_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_SUBSTANCENUCLEICACID_STR_VALUES_RPS ON FHIRAPP.SUBSTANCENUCLEICACID_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

CREATE INDEX FHIRAPP.IDX_SUBSTANCENUCLEICACID_STR_VALUES_RPL ON FHIRAPP.SUBSTANCENUCLEICACID_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

CREATE INDEX FHIRAPP.IDX_SUBSTANCENUCLEICACID_STR_VALUES_PSR ON FHIRAPP.SUBSTANCENUCLEICACID_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SUBSTANCENUCLEICACID_STR_VALUES_PLR ON FHIRAPP.SUBSTANCENUCLEICACID_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.SUBSTANCENUCLEICACID_STR_VALUES ADD CONSTRAINT FK_SUBSTANCENUCLEICACID_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.SUBSTANCENUCLEICACID_STR_VALUES ADD CONSTRAINT FK_SUBSTANCENUCLEICACID_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.SUBSTANCENUCLEICACID_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.SUBSTANCENUCLEICACID_STR_VALUES_TENANT                      ON FHIRAPP.SUBSTANCENUCLEICACID_STR_VALUES          FOR ROWS WHERE FHIRAPP.SUBSTANCENUCLEICACID_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.SUBSTANCENUCLEICACID_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.SUBSTANCENUCLEICACID_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_SUBSTANCENUCLEICACID_TOKEN_VALUES_PNCSCV ON FHIRAPP.SUBSTANCENUCLEICACID_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SUBSTANCENUCLEICACID_TOKEN_VALUES_RPS ON FHIRAPP.SUBSTANCENUCLEICACID_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

ALTER TABLE FHIRAPP.SUBSTANCENUCLEICACID_TOKEN_VALUES ADD CONSTRAINT FK_SUBSTANCENUCLEICACID_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.SUBSTANCENUCLEICACID_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.SUBSTANCENUCLEICACID_TOKEN_VALUES ADD CONSTRAINT FK_SUBSTANCENUCLEICACID_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

ALTER TABLE FHIRAPP.SUBSTANCENUCLEICACID_TOKEN_VALUES ADD CONSTRAINT FK_SUBSTANCENUCLEICACID_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.SUBSTANCENUCLEICACID_TOKEN_VALUES_TENANT                      ON FHIRAPP.SUBSTANCENUCLEICACID_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.SUBSTANCENUCLEICACID_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.SUBSTANCENUCLEICACID_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.SUBSTANCENUCLEICACID_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_SUBSTANCENUCLEICACID_DATE_VALUES_PVR ON FHIRAPP.SUBSTANCENUCLEICACID_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SUBSTANCENUCLEICACID_DATE_VALUES_PSER ON FHIRAPP.SUBSTANCENUCLEICACID_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SUBSTANCENUCLEICACID_DATE_VALUES_RPSE ON FHIRAPP.SUBSTANCENUCLEICACID_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

CREATE INDEX FHIRAPP.IDX_SUBSTANCENUCLEICACID_DATE_VALUES_RPV ON FHIRAPP.SUBSTANCENUCLEICACID_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

CREATE INDEX FHIRAPP.IDX_SUBSTANCENUCLEICACID_DATE_VALUES_PESR ON FHIRAPP.SUBSTANCENUCLEICACID_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.SUBSTANCENUCLEICACID_DATE_VALUES ADD CONSTRAINT FK_SUBSTANCENUCLEICACID_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.SUBSTANCENUCLEICACID_DATE_VALUES ADD CONSTRAINT FK_SUBSTANCENUCLEICACID_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.SUBSTANCENUCLEICACID_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.SUBSTANCENUCLEICACID_DATE_VALUES_TENANT                      ON FHIRAPP.SUBSTANCENUCLEICACID_DATE_VALUES          FOR ROWS WHERE FHIRAPP.SUBSTANCENUCLEICACID_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.SUBSTANCENUCLEICACID_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.SUBSTANCENUCLEICACID_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_SUBSTANCENUCLEICACID_NUMBER_VALUES_PNNV ON FHIRAPP.SUBSTANCENUCLEICACID_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SUBSTANCENUCLEICACID_NUMBER_VALUES_RPS ON FHIRAPP.SUBSTANCENUCLEICACID_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

ALTER TABLE FHIRAPP.SUBSTANCENUCLEICACID_NUMBER_VALUES ADD CONSTRAINT FK_SUBSTANCENUCLEICACID_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.SUBSTANCENUCLEICACID_NUMBER_VALUES ADD CONSTRAINT FK_SUBSTANCENUCLEICACID_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.SUBSTANCENUCLEICACID_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.SUBSTANCENUCLEICACID_NUMBER_VALUES_TENANT                      ON FHIRAPP.SUBSTANCENUCLEICACID_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.SUBSTANCENUCLEICACID_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.SUBSTANCENUCLEICACID_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.SUBSTANCENUCLEICACID_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_SUBSTANCENUCLEICACID_LATLNG_VALUES_PNNHV ON FHIRAPP.SUBSTANCENUCLEICACID_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SUBSTANCENUCLEICACID_LATLNG_VALUES_RPLAT ON FHIRAPP.SUBSTANCENUCLEICACID_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_SUBSTANCENUCLEICACID_LATLNG_VALUES_RPLNG ON FHIRAPP.SUBSTANCENUCLEICACID_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_SUBSTANCENUCLEICACID_LATLNG_VALUES_PNNLV ON FHIRAPP.SUBSTANCENUCLEICACID_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.SUBSTANCENUCLEICACID_LATLNG_VALUES ADD CONSTRAINT FK_SUBSTANCENUCLEICACID_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.SUBSTANCENUCLEICACID_LATLNG_VALUES ADD CONSTRAINT FK_SUBSTANCENUCLEICACID_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.SUBSTANCENUCLEICACID_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.SUBSTANCENUCLEICACID_LATLNG_VALUES_TENANT                      ON FHIRAPP.SUBSTANCENUCLEICACID_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.SUBSTANCENUCLEICACID_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.SUBSTANCENUCLEICACID_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.SUBSTANCENUCLEICACID_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_SUBSTANCENUCLEICACID_QUANTITY_VALUES_PCLHSR ON FHIRAPP.SUBSTANCENUCLEICACID_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SUBSTANCENUCLEICACID_QUANTITY_VALUES_RPCHLS ON FHIRAPP.SUBSTANCENUCLEICACID_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_SUBSTANCENUCLEICACID_QUANTITY_VALUES_RPS ON FHIRAPP.SUBSTANCENUCLEICACID_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_SUBSTANCENUCLEICACID_QUANTITY_VALUES_PCHLSR ON FHIRAPP.SUBSTANCENUCLEICACID_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SUBSTANCENUCLEICACID_QUANTITY_VALUES_RPCLHS ON FHIRAPP.SUBSTANCENUCLEICACID_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_SUBSTANCENUCLEICACID_QUANTITY_VALUES_PNNV ON FHIRAPP.SUBSTANCENUCLEICACID_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

ALTER TABLE FHIRAPP.SUBSTANCENUCLEICACID_QUANTITY_VALUES ADD CONSTRAINT FK_SUBSTANCENUCLEICACID_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.SUBSTANCENUCLEICACID_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.SUBSTANCENUCLEICACID_QUANTITY_VALUES ADD CONSTRAINT FK_SUBSTANCENUCLEICACID_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.SUBSTANCENUCLEICACID_QUANTITY_VALUES_TENANT                      ON FHIRAPP.SUBSTANCENUCLEICACID_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.SUBSTANCENUCLEICACID_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.SUBSTANCENUCLEICACID_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.RISKEVIDENCESYNTHESIS_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT RISKEVIDENCESYNTHESIS_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.RISKEVIDENCESYNTHESIS_LOGICAL_RESOURCES ADD CONSTRAINT FK_RISKEVIDENCESYNTHESIS_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.RISKEVIDENCESYNTHESIS_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.RISKEVIDENCESYNTHESIS_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.RISKEVIDENCESYNTHESIS_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.RISKEVIDENCESYNTHESIS_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.RISKEVIDENCESYNTHESIS_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT RISKEVIDENCESYNTHESIS_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.RISKEVIDENCESYNTHESIS_RESOURCES_PRF_IN1 ON FHIRAPP.RISKEVIDENCESYNTHESIS_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.RISKEVIDENCESYNTHESIS_RESOURCES_TENANT                      ON FHIRAPP.RISKEVIDENCESYNTHESIS_RESOURCES          FOR ROWS WHERE FHIRAPP.RISKEVIDENCESYNTHESIS_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.RISKEVIDENCESYNTHESIS_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.RISKEVIDENCESYNTHESIS_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_RISKEVIDENCESYNTHESIS_STR_VALUES_RPL ON FHIRAPP.RISKEVIDENCESYNTHESIS_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

CREATE INDEX FHIRAPP.IDX_RISKEVIDENCESYNTHESIS_STR_VALUES_PSR ON FHIRAPP.RISKEVIDENCESYNTHESIS_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_RISKEVIDENCESYNTHESIS_STR_VALUES_RPS ON FHIRAPP.RISKEVIDENCESYNTHESIS_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

CREATE INDEX FHIRAPP.IDX_RISKEVIDENCESYNTHESIS_STR_VALUES_PLR ON FHIRAPP.RISKEVIDENCESYNTHESIS_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.RISKEVIDENCESYNTHESIS_STR_VALUES ADD CONSTRAINT FK_RISKEVIDENCESYNTHESIS_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.RISKEVIDENCESYNTHESIS_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.RISKEVIDENCESYNTHESIS_STR_VALUES ADD CONSTRAINT FK_RISKEVIDENCESYNTHESIS_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.RISKEVIDENCESYNTHESIS_STR_VALUES_TENANT                      ON FHIRAPP.RISKEVIDENCESYNTHESIS_STR_VALUES          FOR ROWS WHERE FHIRAPP.RISKEVIDENCESYNTHESIS_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.RISKEVIDENCESYNTHESIS_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.RISKEVIDENCESYNTHESIS_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_RISKEVIDENCESYNTHESIS_TOKEN_VALUES_RPS ON FHIRAPP.RISKEVIDENCESYNTHESIS_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

CREATE INDEX FHIRAPP.IDX_RISKEVIDENCESYNTHESIS_TOKEN_VALUES_PNCSCV ON FHIRAPP.RISKEVIDENCESYNTHESIS_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.RISKEVIDENCESYNTHESIS_TOKEN_VALUES ADD CONSTRAINT FK_RISKEVIDENCESYNTHESIS_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.RISKEVIDENCESYNTHESIS_TOKEN_VALUES ADD CONSTRAINT FK_RISKEVIDENCESYNTHESIS_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.RISKEVIDENCESYNTHESIS_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.RISKEVIDENCESYNTHESIS_TOKEN_VALUES ADD CONSTRAINT FK_RISKEVIDENCESYNTHESIS_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

CREATE PERMISSION FHIRAPP.RISKEVIDENCESYNTHESIS_TOKEN_VALUES_TENANT                      ON FHIRAPP.RISKEVIDENCESYNTHESIS_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.RISKEVIDENCESYNTHESIS_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.RISKEVIDENCESYNTHESIS_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.RISKEVIDENCESYNTHESIS_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_RISKEVIDENCESYNTHESIS_DATE_VALUES_PESR ON FHIRAPP.RISKEVIDENCESYNTHESIS_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_RISKEVIDENCESYNTHESIS_DATE_VALUES_RPV ON FHIRAPP.RISKEVIDENCESYNTHESIS_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

CREATE INDEX FHIRAPP.IDX_RISKEVIDENCESYNTHESIS_DATE_VALUES_RPSE ON FHIRAPP.RISKEVIDENCESYNTHESIS_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

CREATE INDEX FHIRAPP.IDX_RISKEVIDENCESYNTHESIS_DATE_VALUES_PSER ON FHIRAPP.RISKEVIDENCESYNTHESIS_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_RISKEVIDENCESYNTHESIS_DATE_VALUES_PVR ON FHIRAPP.RISKEVIDENCESYNTHESIS_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.RISKEVIDENCESYNTHESIS_DATE_VALUES ADD CONSTRAINT FK_RISKEVIDENCESYNTHESIS_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.RISKEVIDENCESYNTHESIS_DATE_VALUES ADD CONSTRAINT FK_RISKEVIDENCESYNTHESIS_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.RISKEVIDENCESYNTHESIS_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.RISKEVIDENCESYNTHESIS_DATE_VALUES_TENANT                      ON FHIRAPP.RISKEVIDENCESYNTHESIS_DATE_VALUES          FOR ROWS WHERE FHIRAPP.RISKEVIDENCESYNTHESIS_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.RISKEVIDENCESYNTHESIS_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.RISKEVIDENCESYNTHESIS_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_RISKEVIDENCESYNTHESIS_NUMBER_VALUES_RPS ON FHIRAPP.RISKEVIDENCESYNTHESIS_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

CREATE INDEX FHIRAPP.IDX_RISKEVIDENCESYNTHESIS_NUMBER_VALUES_PNNV ON FHIRAPP.RISKEVIDENCESYNTHESIS_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.RISKEVIDENCESYNTHESIS_NUMBER_VALUES ADD CONSTRAINT FK_RISKEVIDENCESYNTHESIS_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.RISKEVIDENCESYNTHESIS_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.RISKEVIDENCESYNTHESIS_NUMBER_VALUES ADD CONSTRAINT FK_RISKEVIDENCESYNTHESIS_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.RISKEVIDENCESYNTHESIS_NUMBER_VALUES_TENANT                      ON FHIRAPP.RISKEVIDENCESYNTHESIS_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.RISKEVIDENCESYNTHESIS_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.RISKEVIDENCESYNTHESIS_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.RISKEVIDENCESYNTHESIS_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_RISKEVIDENCESYNTHESIS_LATLNG_VALUES_PNNLV ON FHIRAPP.RISKEVIDENCESYNTHESIS_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_RISKEVIDENCESYNTHESIS_LATLNG_VALUES_RPLAT ON FHIRAPP.RISKEVIDENCESYNTHESIS_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_RISKEVIDENCESYNTHESIS_LATLNG_VALUES_PNNHV ON FHIRAPP.RISKEVIDENCESYNTHESIS_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_RISKEVIDENCESYNTHESIS_LATLNG_VALUES_RPLNG ON FHIRAPP.RISKEVIDENCESYNTHESIS_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

ALTER TABLE FHIRAPP.RISKEVIDENCESYNTHESIS_LATLNG_VALUES ADD CONSTRAINT FK_RISKEVIDENCESYNTHESIS_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.RISKEVIDENCESYNTHESIS_LATLNG_VALUES ADD CONSTRAINT FK_RISKEVIDENCESYNTHESIS_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.RISKEVIDENCESYNTHESIS_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.RISKEVIDENCESYNTHESIS_LATLNG_VALUES_TENANT                      ON FHIRAPP.RISKEVIDENCESYNTHESIS_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.RISKEVIDENCESYNTHESIS_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.RISKEVIDENCESYNTHESIS_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.RISKEVIDENCESYNTHESIS_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_RISKEVIDENCESYNTHESIS_QUANTITY_VALUES_PCLHSR ON FHIRAPP.RISKEVIDENCESYNTHESIS_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_RISKEVIDENCESYNTHESIS_QUANTITY_VALUES_RPCHLS ON FHIRAPP.RISKEVIDENCESYNTHESIS_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_RISKEVIDENCESYNTHESIS_QUANTITY_VALUES_PCHLSR ON FHIRAPP.RISKEVIDENCESYNTHESIS_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_RISKEVIDENCESYNTHESIS_QUANTITY_VALUES_PNNV ON FHIRAPP.RISKEVIDENCESYNTHESIS_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_RISKEVIDENCESYNTHESIS_QUANTITY_VALUES_RPS ON FHIRAPP.RISKEVIDENCESYNTHESIS_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_RISKEVIDENCESYNTHESIS_QUANTITY_VALUES_RPCLHS ON FHIRAPP.RISKEVIDENCESYNTHESIS_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

ALTER TABLE FHIRAPP.RISKEVIDENCESYNTHESIS_QUANTITY_VALUES ADD CONSTRAINT FK_RISKEVIDENCESYNTHESIS_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.RISKEVIDENCESYNTHESIS_QUANTITY_VALUES ADD CONSTRAINT FK_RISKEVIDENCESYNTHESIS_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.RISKEVIDENCESYNTHESIS_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.RISKEVIDENCESYNTHESIS_QUANTITY_VALUES_TENANT                      ON FHIRAPP.RISKEVIDENCESYNTHESIS_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.RISKEVIDENCESYNTHESIS_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.RISKEVIDENCESYNTHESIS_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.APPOINTMENTRESPONSE_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT APPOINTMENTRESPONSE_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.APPOINTMENTRESPONSE_LOGICAL_RESOURCES ADD CONSTRAINT FK_APPOINTMENTRESPONSE_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.APPOINTMENTRESPONSE_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.APPOINTMENTRESPONSE_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.APPOINTMENTRESPONSE_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.APPOINTMENTRESPONSE_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.APPOINTMENTRESPONSE_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT APPOINTMENTRESPONSE_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.APPOINTMENTRESPONSE_RESOURCES_PRF_IN1 ON FHIRAPP.APPOINTMENTRESPONSE_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.APPOINTMENTRESPONSE_RESOURCES_TENANT                      ON FHIRAPP.APPOINTMENTRESPONSE_RESOURCES          FOR ROWS WHERE FHIRAPP.APPOINTMENTRESPONSE_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.APPOINTMENTRESPONSE_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.APPOINTMENTRESPONSE_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_APPOINTMENTRESPONSE_STR_VALUES_PLR ON FHIRAPP.APPOINTMENTRESPONSE_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_APPOINTMENTRESPONSE_STR_VALUES_RPS ON FHIRAPP.APPOINTMENTRESPONSE_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

CREATE INDEX FHIRAPP.IDX_APPOINTMENTRESPONSE_STR_VALUES_PSR ON FHIRAPP.APPOINTMENTRESPONSE_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_APPOINTMENTRESPONSE_STR_VALUES_RPL ON FHIRAPP.APPOINTMENTRESPONSE_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

ALTER TABLE FHIRAPP.APPOINTMENTRESPONSE_STR_VALUES ADD CONSTRAINT FK_APPOINTMENTRESPONSE_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.APPOINTMENTRESPONSE_STR_VALUES ADD CONSTRAINT FK_APPOINTMENTRESPONSE_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.APPOINTMENTRESPONSE_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.APPOINTMENTRESPONSE_STR_VALUES_TENANT                      ON FHIRAPP.APPOINTMENTRESPONSE_STR_VALUES          FOR ROWS WHERE FHIRAPP.APPOINTMENTRESPONSE_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.APPOINTMENTRESPONSE_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.APPOINTMENTRESPONSE_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_APPOINTMENTRESPONSE_TOKEN_VALUES_RPS ON FHIRAPP.APPOINTMENTRESPONSE_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

CREATE INDEX FHIRAPP.IDX_APPOINTMENTRESPONSE_TOKEN_VALUES_PNCSCV ON FHIRAPP.APPOINTMENTRESPONSE_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.APPOINTMENTRESPONSE_TOKEN_VALUES ADD CONSTRAINT FK_APPOINTMENTRESPONSE_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.APPOINTMENTRESPONSE_TOKEN_VALUES ADD CONSTRAINT FK_APPOINTMENTRESPONSE_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

ALTER TABLE FHIRAPP.APPOINTMENTRESPONSE_TOKEN_VALUES ADD CONSTRAINT FK_APPOINTMENTRESPONSE_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.APPOINTMENTRESPONSE_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.APPOINTMENTRESPONSE_TOKEN_VALUES_TENANT                      ON FHIRAPP.APPOINTMENTRESPONSE_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.APPOINTMENTRESPONSE_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.APPOINTMENTRESPONSE_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.APPOINTMENTRESPONSE_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_APPOINTMENTRESPONSE_DATE_VALUES_PESR ON FHIRAPP.APPOINTMENTRESPONSE_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_APPOINTMENTRESPONSE_DATE_VALUES_RPV ON FHIRAPP.APPOINTMENTRESPONSE_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

CREATE INDEX FHIRAPP.IDX_APPOINTMENTRESPONSE_DATE_VALUES_PSER ON FHIRAPP.APPOINTMENTRESPONSE_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_APPOINTMENTRESPONSE_DATE_VALUES_PVR ON FHIRAPP.APPOINTMENTRESPONSE_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_APPOINTMENTRESPONSE_DATE_VALUES_RPSE ON FHIRAPP.APPOINTMENTRESPONSE_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

ALTER TABLE FHIRAPP.APPOINTMENTRESPONSE_DATE_VALUES ADD CONSTRAINT FK_APPOINTMENTRESPONSE_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.APPOINTMENTRESPONSE_DATE_VALUES ADD CONSTRAINT FK_APPOINTMENTRESPONSE_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.APPOINTMENTRESPONSE_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.APPOINTMENTRESPONSE_DATE_VALUES_TENANT                      ON FHIRAPP.APPOINTMENTRESPONSE_DATE_VALUES          FOR ROWS WHERE FHIRAPP.APPOINTMENTRESPONSE_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.APPOINTMENTRESPONSE_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.APPOINTMENTRESPONSE_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_APPOINTMENTRESPONSE_NUMBER_VALUES_PNNV ON FHIRAPP.APPOINTMENTRESPONSE_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_APPOINTMENTRESPONSE_NUMBER_VALUES_RPS ON FHIRAPP.APPOINTMENTRESPONSE_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

ALTER TABLE FHIRAPP.APPOINTMENTRESPONSE_NUMBER_VALUES ADD CONSTRAINT FK_APPOINTMENTRESPONSE_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.APPOINTMENTRESPONSE_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.APPOINTMENTRESPONSE_NUMBER_VALUES ADD CONSTRAINT FK_APPOINTMENTRESPONSE_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.APPOINTMENTRESPONSE_NUMBER_VALUES_TENANT                      ON FHIRAPP.APPOINTMENTRESPONSE_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.APPOINTMENTRESPONSE_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.APPOINTMENTRESPONSE_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.APPOINTMENTRESPONSE_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_APPOINTMENTRESPONSE_LATLNG_VALUES_PNNLV ON FHIRAPP.APPOINTMENTRESPONSE_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_APPOINTMENTRESPONSE_LATLNG_VALUES_RPLNG ON FHIRAPP.APPOINTMENTRESPONSE_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_APPOINTMENTRESPONSE_LATLNG_VALUES_RPLAT ON FHIRAPP.APPOINTMENTRESPONSE_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_APPOINTMENTRESPONSE_LATLNG_VALUES_PNNHV ON FHIRAPP.APPOINTMENTRESPONSE_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.APPOINTMENTRESPONSE_LATLNG_VALUES ADD CONSTRAINT FK_APPOINTMENTRESPONSE_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.APPOINTMENTRESPONSE_LATLNG_VALUES ADD CONSTRAINT FK_APPOINTMENTRESPONSE_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.APPOINTMENTRESPONSE_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.APPOINTMENTRESPONSE_LATLNG_VALUES_TENANT                      ON FHIRAPP.APPOINTMENTRESPONSE_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.APPOINTMENTRESPONSE_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.APPOINTMENTRESPONSE_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.APPOINTMENTRESPONSE_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_APPOINTMENTRESPONSE_QUANTITY_VALUES_PCLHSR ON FHIRAPP.APPOINTMENTRESPONSE_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_APPOINTMENTRESPONSE_QUANTITY_VALUES_RPCHLS ON FHIRAPP.APPOINTMENTRESPONSE_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_APPOINTMENTRESPONSE_QUANTITY_VALUES_RPS ON FHIRAPP.APPOINTMENTRESPONSE_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_APPOINTMENTRESPONSE_QUANTITY_VALUES_PNNV ON FHIRAPP.APPOINTMENTRESPONSE_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_APPOINTMENTRESPONSE_QUANTITY_VALUES_PCHLSR ON FHIRAPP.APPOINTMENTRESPONSE_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_APPOINTMENTRESPONSE_QUANTITY_VALUES_RPCLHS ON FHIRAPP.APPOINTMENTRESPONSE_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

ALTER TABLE FHIRAPP.APPOINTMENTRESPONSE_QUANTITY_VALUES ADD CONSTRAINT FK_APPOINTMENTRESPONSE_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.APPOINTMENTRESPONSE_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.APPOINTMENTRESPONSE_QUANTITY_VALUES ADD CONSTRAINT FK_APPOINTMENTRESPONSE_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.APPOINTMENTRESPONSE_QUANTITY_VALUES_TENANT                      ON FHIRAPP.APPOINTMENTRESPONSE_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.APPOINTMENTRESPONSE_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.APPOINTMENTRESPONSE_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.STRUCTUREMAP_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT STRUCTUREMAP_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.STRUCTUREMAP_LOGICAL_RESOURCES ADD CONSTRAINT FK_STRUCTUREMAP_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.STRUCTUREMAP_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.STRUCTUREMAP_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.STRUCTUREMAP_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.STRUCTUREMAP_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.STRUCTUREMAP_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT STRUCTUREMAP_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.STRUCTUREMAP_RESOURCES_PRF_IN1 ON FHIRAPP.STRUCTUREMAP_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.STRUCTUREMAP_RESOURCES_TENANT                      ON FHIRAPP.STRUCTUREMAP_RESOURCES          FOR ROWS WHERE FHIRAPP.STRUCTUREMAP_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.STRUCTUREMAP_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.STRUCTUREMAP_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_STRUCTUREMAP_STR_VALUES_RPS ON FHIRAPP.STRUCTUREMAP_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

CREATE INDEX FHIRAPP.IDX_STRUCTUREMAP_STR_VALUES_PLR ON FHIRAPP.STRUCTUREMAP_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_STRUCTUREMAP_STR_VALUES_RPL ON FHIRAPP.STRUCTUREMAP_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

CREATE INDEX FHIRAPP.IDX_STRUCTUREMAP_STR_VALUES_PSR ON FHIRAPP.STRUCTUREMAP_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.STRUCTUREMAP_STR_VALUES ADD CONSTRAINT FK_STRUCTUREMAP_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.STRUCTUREMAP_STR_VALUES ADD CONSTRAINT FK_STRUCTUREMAP_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.STRUCTUREMAP_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.STRUCTUREMAP_STR_VALUES_TENANT                      ON FHIRAPP.STRUCTUREMAP_STR_VALUES          FOR ROWS WHERE FHIRAPP.STRUCTUREMAP_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.STRUCTUREMAP_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.STRUCTUREMAP_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_STRUCTUREMAP_TOKEN_VALUES_RPS ON FHIRAPP.STRUCTUREMAP_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

CREATE INDEX FHIRAPP.IDX_STRUCTUREMAP_TOKEN_VALUES_PNCSCV ON FHIRAPP.STRUCTUREMAP_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.STRUCTUREMAP_TOKEN_VALUES ADD CONSTRAINT FK_STRUCTUREMAP_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.STRUCTUREMAP_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.STRUCTUREMAP_TOKEN_VALUES ADD CONSTRAINT FK_STRUCTUREMAP_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

ALTER TABLE FHIRAPP.STRUCTUREMAP_TOKEN_VALUES ADD CONSTRAINT FK_STRUCTUREMAP_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.STRUCTUREMAP_TOKEN_VALUES_TENANT                      ON FHIRAPP.STRUCTUREMAP_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.STRUCTUREMAP_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.STRUCTUREMAP_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.STRUCTUREMAP_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_STRUCTUREMAP_DATE_VALUES_RPV ON FHIRAPP.STRUCTUREMAP_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

CREATE INDEX FHIRAPP.IDX_STRUCTUREMAP_DATE_VALUES_PSER ON FHIRAPP.STRUCTUREMAP_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_STRUCTUREMAP_DATE_VALUES_RPSE ON FHIRAPP.STRUCTUREMAP_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

CREATE INDEX FHIRAPP.IDX_STRUCTUREMAP_DATE_VALUES_PESR ON FHIRAPP.STRUCTUREMAP_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_STRUCTUREMAP_DATE_VALUES_PVR ON FHIRAPP.STRUCTUREMAP_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.STRUCTUREMAP_DATE_VALUES ADD CONSTRAINT FK_STRUCTUREMAP_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.STRUCTUREMAP_DATE_VALUES ADD CONSTRAINT FK_STRUCTUREMAP_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.STRUCTUREMAP_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.STRUCTUREMAP_DATE_VALUES_TENANT                      ON FHIRAPP.STRUCTUREMAP_DATE_VALUES          FOR ROWS WHERE FHIRAPP.STRUCTUREMAP_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.STRUCTUREMAP_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.STRUCTUREMAP_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_STRUCTUREMAP_NUMBER_VALUES_PNNV ON FHIRAPP.STRUCTUREMAP_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_STRUCTUREMAP_NUMBER_VALUES_RPS ON FHIRAPP.STRUCTUREMAP_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

ALTER TABLE FHIRAPP.STRUCTUREMAP_NUMBER_VALUES ADD CONSTRAINT FK_STRUCTUREMAP_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.STRUCTUREMAP_NUMBER_VALUES ADD CONSTRAINT FK_STRUCTUREMAP_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.STRUCTUREMAP_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.STRUCTUREMAP_NUMBER_VALUES_TENANT                      ON FHIRAPP.STRUCTUREMAP_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.STRUCTUREMAP_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.STRUCTUREMAP_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.STRUCTUREMAP_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_STRUCTUREMAP_LATLNG_VALUES_RPLNG ON FHIRAPP.STRUCTUREMAP_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_STRUCTUREMAP_LATLNG_VALUES_PNNLV ON FHIRAPP.STRUCTUREMAP_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_STRUCTUREMAP_LATLNG_VALUES_PNNHV ON FHIRAPP.STRUCTUREMAP_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_STRUCTUREMAP_LATLNG_VALUES_RPLAT ON FHIRAPP.STRUCTUREMAP_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

ALTER TABLE FHIRAPP.STRUCTUREMAP_LATLNG_VALUES ADD CONSTRAINT FK_STRUCTUREMAP_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.STRUCTUREMAP_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.STRUCTUREMAP_LATLNG_VALUES ADD CONSTRAINT FK_STRUCTUREMAP_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.STRUCTUREMAP_LATLNG_VALUES_TENANT                      ON FHIRAPP.STRUCTUREMAP_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.STRUCTUREMAP_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.STRUCTUREMAP_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.STRUCTUREMAP_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_STRUCTUREMAP_QUANTITY_VALUES_PNNV ON FHIRAPP.STRUCTUREMAP_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_STRUCTUREMAP_QUANTITY_VALUES_RPCLHS ON FHIRAPP.STRUCTUREMAP_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_STRUCTUREMAP_QUANTITY_VALUES_PCLHSR ON FHIRAPP.STRUCTUREMAP_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_STRUCTUREMAP_QUANTITY_VALUES_RPS ON FHIRAPP.STRUCTUREMAP_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_STRUCTUREMAP_QUANTITY_VALUES_RPCHLS ON FHIRAPP.STRUCTUREMAP_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_STRUCTUREMAP_QUANTITY_VALUES_PCHLSR ON FHIRAPP.STRUCTUREMAP_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.STRUCTUREMAP_QUANTITY_VALUES ADD CONSTRAINT FK_STRUCTUREMAP_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.STRUCTUREMAP_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.STRUCTUREMAP_QUANTITY_VALUES ADD CONSTRAINT FK_STRUCTUREMAP_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.STRUCTUREMAP_QUANTITY_VALUES_TENANT                      ON FHIRAPP.STRUCTUREMAP_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.STRUCTUREMAP_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.STRUCTUREMAP_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.ADVERSEEVENT_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT ADVERSEEVENT_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.ADVERSEEVENT_LOGICAL_RESOURCES ADD CONSTRAINT FK_ADVERSEEVENT_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.ADVERSEEVENT_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.ADVERSEEVENT_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.ADVERSEEVENT_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.ADVERSEEVENT_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.ADVERSEEVENT_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT ADVERSEEVENT_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.ADVERSEEVENT_RESOURCES_PRF_IN1 ON FHIRAPP.ADVERSEEVENT_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.ADVERSEEVENT_RESOURCES_TENANT                      ON FHIRAPP.ADVERSEEVENT_RESOURCES          FOR ROWS WHERE FHIRAPP.ADVERSEEVENT_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.ADVERSEEVENT_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.ADVERSEEVENT_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_ADVERSEEVENT_STR_VALUES_PLR ON FHIRAPP.ADVERSEEVENT_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_ADVERSEEVENT_STR_VALUES_RPS ON FHIRAPP.ADVERSEEVENT_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

CREATE INDEX FHIRAPP.IDX_ADVERSEEVENT_STR_VALUES_RPL ON FHIRAPP.ADVERSEEVENT_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

CREATE INDEX FHIRAPP.IDX_ADVERSEEVENT_STR_VALUES_PSR ON FHIRAPP.ADVERSEEVENT_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.ADVERSEEVENT_STR_VALUES ADD CONSTRAINT FK_ADVERSEEVENT_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.ADVERSEEVENT_STR_VALUES ADD CONSTRAINT FK_ADVERSEEVENT_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.ADVERSEEVENT_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.ADVERSEEVENT_STR_VALUES_TENANT                      ON FHIRAPP.ADVERSEEVENT_STR_VALUES          FOR ROWS WHERE FHIRAPP.ADVERSEEVENT_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.ADVERSEEVENT_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.ADVERSEEVENT_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_ADVERSEEVENT_TOKEN_VALUES_RPS ON FHIRAPP.ADVERSEEVENT_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

CREATE INDEX FHIRAPP.IDX_ADVERSEEVENT_TOKEN_VALUES_PNCSCV ON FHIRAPP.ADVERSEEVENT_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.ADVERSEEVENT_TOKEN_VALUES ADD CONSTRAINT FK_ADVERSEEVENT_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.ADVERSEEVENT_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.ADVERSEEVENT_TOKEN_VALUES ADD CONSTRAINT FK_ADVERSEEVENT_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.ADVERSEEVENT_TOKEN_VALUES ADD CONSTRAINT FK_ADVERSEEVENT_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

CREATE PERMISSION FHIRAPP.ADVERSEEVENT_TOKEN_VALUES_TENANT                      ON FHIRAPP.ADVERSEEVENT_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.ADVERSEEVENT_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.ADVERSEEVENT_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.ADVERSEEVENT_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_ADVERSEEVENT_DATE_VALUES_PVR ON FHIRAPP.ADVERSEEVENT_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_ADVERSEEVENT_DATE_VALUES_PSER ON FHIRAPP.ADVERSEEVENT_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_ADVERSEEVENT_DATE_VALUES_RPSE ON FHIRAPP.ADVERSEEVENT_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

CREATE INDEX FHIRAPP.IDX_ADVERSEEVENT_DATE_VALUES_PESR ON FHIRAPP.ADVERSEEVENT_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_ADVERSEEVENT_DATE_VALUES_RPV ON FHIRAPP.ADVERSEEVENT_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

ALTER TABLE FHIRAPP.ADVERSEEVENT_DATE_VALUES ADD CONSTRAINT FK_ADVERSEEVENT_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.ADVERSEEVENT_DATE_VALUES ADD CONSTRAINT FK_ADVERSEEVENT_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.ADVERSEEVENT_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.ADVERSEEVENT_DATE_VALUES_TENANT                      ON FHIRAPP.ADVERSEEVENT_DATE_VALUES          FOR ROWS WHERE FHIRAPP.ADVERSEEVENT_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.ADVERSEEVENT_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.ADVERSEEVENT_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_ADVERSEEVENT_NUMBER_VALUES_RPS ON FHIRAPP.ADVERSEEVENT_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

CREATE INDEX FHIRAPP.IDX_ADVERSEEVENT_NUMBER_VALUES_PNNV ON FHIRAPP.ADVERSEEVENT_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.ADVERSEEVENT_NUMBER_VALUES ADD CONSTRAINT FK_ADVERSEEVENT_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.ADVERSEEVENT_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.ADVERSEEVENT_NUMBER_VALUES ADD CONSTRAINT FK_ADVERSEEVENT_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.ADVERSEEVENT_NUMBER_VALUES_TENANT                      ON FHIRAPP.ADVERSEEVENT_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.ADVERSEEVENT_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.ADVERSEEVENT_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.ADVERSEEVENT_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_ADVERSEEVENT_LATLNG_VALUES_PNNHV ON FHIRAPP.ADVERSEEVENT_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_ADVERSEEVENT_LATLNG_VALUES_PNNLV ON FHIRAPP.ADVERSEEVENT_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_ADVERSEEVENT_LATLNG_VALUES_RPLAT ON FHIRAPP.ADVERSEEVENT_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_ADVERSEEVENT_LATLNG_VALUES_RPLNG ON FHIRAPP.ADVERSEEVENT_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

ALTER TABLE FHIRAPP.ADVERSEEVENT_LATLNG_VALUES ADD CONSTRAINT FK_ADVERSEEVENT_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.ADVERSEEVENT_LATLNG_VALUES ADD CONSTRAINT FK_ADVERSEEVENT_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.ADVERSEEVENT_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.ADVERSEEVENT_LATLNG_VALUES_TENANT                      ON FHIRAPP.ADVERSEEVENT_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.ADVERSEEVENT_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.ADVERSEEVENT_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.ADVERSEEVENT_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_ADVERSEEVENT_QUANTITY_VALUES_PCLHSR ON FHIRAPP.ADVERSEEVENT_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_ADVERSEEVENT_QUANTITY_VALUES_RPCHLS ON FHIRAPP.ADVERSEEVENT_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_ADVERSEEVENT_QUANTITY_VALUES_RPS ON FHIRAPP.ADVERSEEVENT_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_ADVERSEEVENT_QUANTITY_VALUES_PNNV ON FHIRAPP.ADVERSEEVENT_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_ADVERSEEVENT_QUANTITY_VALUES_RPCLHS ON FHIRAPP.ADVERSEEVENT_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_ADVERSEEVENT_QUANTITY_VALUES_PCHLSR ON FHIRAPP.ADVERSEEVENT_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.ADVERSEEVENT_QUANTITY_VALUES ADD CONSTRAINT FK_ADVERSEEVENT_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.ADVERSEEVENT_QUANTITY_VALUES ADD CONSTRAINT FK_ADVERSEEVENT_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.ADVERSEEVENT_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.ADVERSEEVENT_QUANTITY_VALUES_TENANT                      ON FHIRAPP.ADVERSEEVENT_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.ADVERSEEVENT_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.ADVERSEEVENT_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.GUIDANCERESPONSE_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT GUIDANCERESPONSE_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.GUIDANCERESPONSE_LOGICAL_RESOURCES ADD CONSTRAINT FK_GUIDANCERESPONSE_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.GUIDANCERESPONSE_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.GUIDANCERESPONSE_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.GUIDANCERESPONSE_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.GUIDANCERESPONSE_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.GUIDANCERESPONSE_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT GUIDANCERESPONSE_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.GUIDANCERESPONSE_RESOURCES_PRF_IN1 ON FHIRAPP.GUIDANCERESPONSE_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.GUIDANCERESPONSE_RESOURCES_TENANT                      ON FHIRAPP.GUIDANCERESPONSE_RESOURCES          FOR ROWS WHERE FHIRAPP.GUIDANCERESPONSE_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.GUIDANCERESPONSE_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.GUIDANCERESPONSE_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_GUIDANCERESPONSE_STR_VALUES_PLR ON FHIRAPP.GUIDANCERESPONSE_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_GUIDANCERESPONSE_STR_VALUES_RPS ON FHIRAPP.GUIDANCERESPONSE_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

CREATE INDEX FHIRAPP.IDX_GUIDANCERESPONSE_STR_VALUES_PSR ON FHIRAPP.GUIDANCERESPONSE_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_GUIDANCERESPONSE_STR_VALUES_RPL ON FHIRAPP.GUIDANCERESPONSE_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

ALTER TABLE FHIRAPP.GUIDANCERESPONSE_STR_VALUES ADD CONSTRAINT FK_GUIDANCERESPONSE_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.GUIDANCERESPONSE_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.GUIDANCERESPONSE_STR_VALUES ADD CONSTRAINT FK_GUIDANCERESPONSE_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.GUIDANCERESPONSE_STR_VALUES_TENANT                      ON FHIRAPP.GUIDANCERESPONSE_STR_VALUES          FOR ROWS WHERE FHIRAPP.GUIDANCERESPONSE_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.GUIDANCERESPONSE_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.GUIDANCERESPONSE_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_GUIDANCERESPONSE_TOKEN_VALUES_PNCSCV ON FHIRAPP.GUIDANCERESPONSE_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_GUIDANCERESPONSE_TOKEN_VALUES_RPS ON FHIRAPP.GUIDANCERESPONSE_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

ALTER TABLE FHIRAPP.GUIDANCERESPONSE_TOKEN_VALUES ADD CONSTRAINT FK_GUIDANCERESPONSE_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.GUIDANCERESPONSE_TOKEN_VALUES ADD CONSTRAINT FK_GUIDANCERESPONSE_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

ALTER TABLE FHIRAPP.GUIDANCERESPONSE_TOKEN_VALUES ADD CONSTRAINT FK_GUIDANCERESPONSE_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.GUIDANCERESPONSE_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.GUIDANCERESPONSE_TOKEN_VALUES_TENANT                      ON FHIRAPP.GUIDANCERESPONSE_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.GUIDANCERESPONSE_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.GUIDANCERESPONSE_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.GUIDANCERESPONSE_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_GUIDANCERESPONSE_DATE_VALUES_PESR ON FHIRAPP.GUIDANCERESPONSE_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_GUIDANCERESPONSE_DATE_VALUES_PSER ON FHIRAPP.GUIDANCERESPONSE_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_GUIDANCERESPONSE_DATE_VALUES_RPSE ON FHIRAPP.GUIDANCERESPONSE_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

CREATE INDEX FHIRAPP.IDX_GUIDANCERESPONSE_DATE_VALUES_RPV ON FHIRAPP.GUIDANCERESPONSE_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

CREATE INDEX FHIRAPP.IDX_GUIDANCERESPONSE_DATE_VALUES_PVR ON FHIRAPP.GUIDANCERESPONSE_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.GUIDANCERESPONSE_DATE_VALUES ADD CONSTRAINT FK_GUIDANCERESPONSE_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.GUIDANCERESPONSE_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.GUIDANCERESPONSE_DATE_VALUES ADD CONSTRAINT FK_GUIDANCERESPONSE_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.GUIDANCERESPONSE_DATE_VALUES_TENANT                      ON FHIRAPP.GUIDANCERESPONSE_DATE_VALUES          FOR ROWS WHERE FHIRAPP.GUIDANCERESPONSE_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.GUIDANCERESPONSE_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.GUIDANCERESPONSE_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_GUIDANCERESPONSE_NUMBER_VALUES_PNNV ON FHIRAPP.GUIDANCERESPONSE_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_GUIDANCERESPONSE_NUMBER_VALUES_RPS ON FHIRAPP.GUIDANCERESPONSE_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

ALTER TABLE FHIRAPP.GUIDANCERESPONSE_NUMBER_VALUES ADD CONSTRAINT FK_GUIDANCERESPONSE_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.GUIDANCERESPONSE_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.GUIDANCERESPONSE_NUMBER_VALUES ADD CONSTRAINT FK_GUIDANCERESPONSE_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.GUIDANCERESPONSE_NUMBER_VALUES_TENANT                      ON FHIRAPP.GUIDANCERESPONSE_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.GUIDANCERESPONSE_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.GUIDANCERESPONSE_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.GUIDANCERESPONSE_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_GUIDANCERESPONSE_LATLNG_VALUES_RPLNG ON FHIRAPP.GUIDANCERESPONSE_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_GUIDANCERESPONSE_LATLNG_VALUES_RPLAT ON FHIRAPP.GUIDANCERESPONSE_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_GUIDANCERESPONSE_LATLNG_VALUES_PNNHV ON FHIRAPP.GUIDANCERESPONSE_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_GUIDANCERESPONSE_LATLNG_VALUES_PNNLV ON FHIRAPP.GUIDANCERESPONSE_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.GUIDANCERESPONSE_LATLNG_VALUES ADD CONSTRAINT FK_GUIDANCERESPONSE_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.GUIDANCERESPONSE_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.GUIDANCERESPONSE_LATLNG_VALUES ADD CONSTRAINT FK_GUIDANCERESPONSE_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.GUIDANCERESPONSE_LATLNG_VALUES_TENANT                      ON FHIRAPP.GUIDANCERESPONSE_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.GUIDANCERESPONSE_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.GUIDANCERESPONSE_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.GUIDANCERESPONSE_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_GUIDANCERESPONSE_QUANTITY_VALUES_RPCHLS ON FHIRAPP.GUIDANCERESPONSE_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_GUIDANCERESPONSE_QUANTITY_VALUES_PCHLSR ON FHIRAPP.GUIDANCERESPONSE_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_GUIDANCERESPONSE_QUANTITY_VALUES_PNNV ON FHIRAPP.GUIDANCERESPONSE_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_GUIDANCERESPONSE_QUANTITY_VALUES_RPS ON FHIRAPP.GUIDANCERESPONSE_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_GUIDANCERESPONSE_QUANTITY_VALUES_RPCLHS ON FHIRAPP.GUIDANCERESPONSE_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_GUIDANCERESPONSE_QUANTITY_VALUES_PCLHSR ON FHIRAPP.GUIDANCERESPONSE_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.GUIDANCERESPONSE_QUANTITY_VALUES ADD CONSTRAINT FK_GUIDANCERESPONSE_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.GUIDANCERESPONSE_QUANTITY_VALUES ADD CONSTRAINT FK_GUIDANCERESPONSE_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.GUIDANCERESPONSE_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.GUIDANCERESPONSE_QUANTITY_VALUES_TENANT                      ON FHIRAPP.GUIDANCERESPONSE_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.GUIDANCERESPONSE_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.GUIDANCERESPONSE_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.OBSERVATION_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT OBSERVATION_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.OBSERVATION_LOGICAL_RESOURCES ADD CONSTRAINT FK_OBSERVATION_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.OBSERVATION_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.OBSERVATION_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.OBSERVATION_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.OBSERVATION_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.OBSERVATION_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT OBSERVATION_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.OBSERVATION_RESOURCES_PRF_IN1 ON FHIRAPP.OBSERVATION_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.OBSERVATION_RESOURCES_TENANT                      ON FHIRAPP.OBSERVATION_RESOURCES          FOR ROWS WHERE FHIRAPP.OBSERVATION_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.OBSERVATION_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.OBSERVATION_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_OBSERVATION_STR_VALUES_PSR ON FHIRAPP.OBSERVATION_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_OBSERVATION_STR_VALUES_RPL ON FHIRAPP.OBSERVATION_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

CREATE INDEX FHIRAPP.IDX_OBSERVATION_STR_VALUES_RPS ON FHIRAPP.OBSERVATION_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

CREATE INDEX FHIRAPP.IDX_OBSERVATION_STR_VALUES_PLR ON FHIRAPP.OBSERVATION_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.OBSERVATION_STR_VALUES ADD CONSTRAINT FK_OBSERVATION_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.OBSERVATION_STR_VALUES ADD CONSTRAINT FK_OBSERVATION_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.OBSERVATION_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.OBSERVATION_STR_VALUES_TENANT                      ON FHIRAPP.OBSERVATION_STR_VALUES          FOR ROWS WHERE FHIRAPP.OBSERVATION_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.OBSERVATION_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.OBSERVATION_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_OBSERVATION_TOKEN_VALUES_RPS ON FHIRAPP.OBSERVATION_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

CREATE INDEX FHIRAPP.IDX_OBSERVATION_TOKEN_VALUES_PNCSCV ON FHIRAPP.OBSERVATION_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.OBSERVATION_TOKEN_VALUES ADD CONSTRAINT FK_OBSERVATION_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.OBSERVATION_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.OBSERVATION_TOKEN_VALUES ADD CONSTRAINT FK_OBSERVATION_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.OBSERVATION_TOKEN_VALUES ADD CONSTRAINT FK_OBSERVATION_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

CREATE PERMISSION FHIRAPP.OBSERVATION_TOKEN_VALUES_TENANT                      ON FHIRAPP.OBSERVATION_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.OBSERVATION_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.OBSERVATION_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.OBSERVATION_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_OBSERVATION_DATE_VALUES_PESR ON FHIRAPP.OBSERVATION_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_OBSERVATION_DATE_VALUES_PVR ON FHIRAPP.OBSERVATION_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_OBSERVATION_DATE_VALUES_RPSE ON FHIRAPP.OBSERVATION_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

CREATE INDEX FHIRAPP.IDX_OBSERVATION_DATE_VALUES_PSER ON FHIRAPP.OBSERVATION_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_OBSERVATION_DATE_VALUES_RPV ON FHIRAPP.OBSERVATION_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

ALTER TABLE FHIRAPP.OBSERVATION_DATE_VALUES ADD CONSTRAINT FK_OBSERVATION_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.OBSERVATION_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.OBSERVATION_DATE_VALUES ADD CONSTRAINT FK_OBSERVATION_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.OBSERVATION_DATE_VALUES_TENANT                      ON FHIRAPP.OBSERVATION_DATE_VALUES          FOR ROWS WHERE FHIRAPP.OBSERVATION_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.OBSERVATION_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.OBSERVATION_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_OBSERVATION_NUMBER_VALUES_RPS ON FHIRAPP.OBSERVATION_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

CREATE INDEX FHIRAPP.IDX_OBSERVATION_NUMBER_VALUES_PNNV ON FHIRAPP.OBSERVATION_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.OBSERVATION_NUMBER_VALUES ADD CONSTRAINT FK_OBSERVATION_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.OBSERVATION_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.OBSERVATION_NUMBER_VALUES ADD CONSTRAINT FK_OBSERVATION_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.OBSERVATION_NUMBER_VALUES_TENANT                      ON FHIRAPP.OBSERVATION_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.OBSERVATION_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.OBSERVATION_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.OBSERVATION_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_OBSERVATION_LATLNG_VALUES_PNNHV ON FHIRAPP.OBSERVATION_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_OBSERVATION_LATLNG_VALUES_PNNLV ON FHIRAPP.OBSERVATION_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_OBSERVATION_LATLNG_VALUES_RPLAT ON FHIRAPP.OBSERVATION_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_OBSERVATION_LATLNG_VALUES_RPLNG ON FHIRAPP.OBSERVATION_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

ALTER TABLE FHIRAPP.OBSERVATION_LATLNG_VALUES ADD CONSTRAINT FK_OBSERVATION_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.OBSERVATION_LATLNG_VALUES ADD CONSTRAINT FK_OBSERVATION_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.OBSERVATION_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.OBSERVATION_LATLNG_VALUES_TENANT                      ON FHIRAPP.OBSERVATION_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.OBSERVATION_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.OBSERVATION_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.OBSERVATION_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_OBSERVATION_QUANTITY_VALUES_PCLHSR ON FHIRAPP.OBSERVATION_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_OBSERVATION_QUANTITY_VALUES_RPS ON FHIRAPP.OBSERVATION_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_OBSERVATION_QUANTITY_VALUES_RPCHLS ON FHIRAPP.OBSERVATION_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_OBSERVATION_QUANTITY_VALUES_RPCLHS ON FHIRAPP.OBSERVATION_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_OBSERVATION_QUANTITY_VALUES_PNNV ON FHIRAPP.OBSERVATION_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_OBSERVATION_QUANTITY_VALUES_PCHLSR ON FHIRAPP.OBSERVATION_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.OBSERVATION_QUANTITY_VALUES ADD CONSTRAINT FK_OBSERVATION_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.OBSERVATION_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.OBSERVATION_QUANTITY_VALUES ADD CONSTRAINT FK_OBSERVATION_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.OBSERVATION_QUANTITY_VALUES_TENANT                      ON FHIRAPP.OBSERVATION_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.OBSERVATION_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.OBSERVATION_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDICATIONADMINISTRATION_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT MEDICATIONADMINISTRATION_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.MEDICATIONADMINISTRATION_LOGICAL_RESOURCES ADD CONSTRAINT FK_MEDICATIONADMINISTRATION_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.MEDICATIONADMINISTRATION_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.MEDICATIONADMINISTRATION_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.MEDICATIONADMINISTRATION_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDICATIONADMINISTRATION_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDICATIONADMINISTRATION_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT MEDICATIONADMINISTRATION_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.MEDICATIONADMINISTRATION_RESOURCES_PRF_IN1 ON FHIRAPP.MEDICATIONADMINISTRATION_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.MEDICATIONADMINISTRATION_RESOURCES_TENANT                      ON FHIRAPP.MEDICATIONADMINISTRATION_RESOURCES          FOR ROWS WHERE FHIRAPP.MEDICATIONADMINISTRATION_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDICATIONADMINISTRATION_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDICATIONADMINISTRATION_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_MEDICATIONADMINISTRATION_STR_VALUES_PSR ON FHIRAPP.MEDICATIONADMINISTRATION_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEDICATIONADMINISTRATION_STR_VALUES_RPS ON FHIRAPP.MEDICATIONADMINISTRATION_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

CREATE INDEX FHIRAPP.IDX_MEDICATIONADMINISTRATION_STR_VALUES_PLR ON FHIRAPP.MEDICATIONADMINISTRATION_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEDICATIONADMINISTRATION_STR_VALUES_RPL ON FHIRAPP.MEDICATIONADMINISTRATION_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

ALTER TABLE FHIRAPP.MEDICATIONADMINISTRATION_STR_VALUES ADD CONSTRAINT FK_MEDICATIONADMINISTRATION_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.MEDICATIONADMINISTRATION_STR_VALUES ADD CONSTRAINT FK_MEDICATIONADMINISTRATION_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.MEDICATIONADMINISTRATION_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.MEDICATIONADMINISTRATION_STR_VALUES_TENANT                      ON FHIRAPP.MEDICATIONADMINISTRATION_STR_VALUES          FOR ROWS WHERE FHIRAPP.MEDICATIONADMINISTRATION_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDICATIONADMINISTRATION_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDICATIONADMINISTRATION_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_MEDICATIONADMINISTRATION_TOKEN_VALUES_RPS ON FHIRAPP.MEDICATIONADMINISTRATION_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

CREATE INDEX FHIRAPP.IDX_MEDICATIONADMINISTRATION_TOKEN_VALUES_PNCSCV ON FHIRAPP.MEDICATIONADMINISTRATION_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.MEDICATIONADMINISTRATION_TOKEN_VALUES ADD CONSTRAINT FK_MEDICATIONADMINISTRATION_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

ALTER TABLE FHIRAPP.MEDICATIONADMINISTRATION_TOKEN_VALUES ADD CONSTRAINT FK_MEDICATIONADMINISTRATION_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.MEDICATIONADMINISTRATION_TOKEN_VALUES ADD CONSTRAINT FK_MEDICATIONADMINISTRATION_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.MEDICATIONADMINISTRATION_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.MEDICATIONADMINISTRATION_TOKEN_VALUES_TENANT                      ON FHIRAPP.MEDICATIONADMINISTRATION_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.MEDICATIONADMINISTRATION_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDICATIONADMINISTRATION_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDICATIONADMINISTRATION_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_MEDICATIONADMINISTRATION_DATE_VALUES_RPV ON FHIRAPP.MEDICATIONADMINISTRATION_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

CREATE INDEX FHIRAPP.IDX_MEDICATIONADMINISTRATION_DATE_VALUES_PESR ON FHIRAPP.MEDICATIONADMINISTRATION_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEDICATIONADMINISTRATION_DATE_VALUES_PSER ON FHIRAPP.MEDICATIONADMINISTRATION_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEDICATIONADMINISTRATION_DATE_VALUES_RPSE ON FHIRAPP.MEDICATIONADMINISTRATION_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

CREATE INDEX FHIRAPP.IDX_MEDICATIONADMINISTRATION_DATE_VALUES_PVR ON FHIRAPP.MEDICATIONADMINISTRATION_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.MEDICATIONADMINISTRATION_DATE_VALUES ADD CONSTRAINT FK_MEDICATIONADMINISTRATION_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.MEDICATIONADMINISTRATION_DATE_VALUES ADD CONSTRAINT FK_MEDICATIONADMINISTRATION_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.MEDICATIONADMINISTRATION_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.MEDICATIONADMINISTRATION_DATE_VALUES_TENANT                      ON FHIRAPP.MEDICATIONADMINISTRATION_DATE_VALUES          FOR ROWS WHERE FHIRAPP.MEDICATIONADMINISTRATION_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDICATIONADMINISTRATION_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDICATIONADMINISTRATION_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_MEDICATIONADMINISTRATION_NUMBER_VALUES_PNNV ON FHIRAPP.MEDICATIONADMINISTRATION_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEDICATIONADMINISTRATION_NUMBER_VALUES_RPS ON FHIRAPP.MEDICATIONADMINISTRATION_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

ALTER TABLE FHIRAPP.MEDICATIONADMINISTRATION_NUMBER_VALUES ADD CONSTRAINT FK_MEDICATIONADMINISTRATION_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.MEDICATIONADMINISTRATION_NUMBER_VALUES ADD CONSTRAINT FK_MEDICATIONADMINISTRATION_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.MEDICATIONADMINISTRATION_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.MEDICATIONADMINISTRATION_NUMBER_VALUES_TENANT                      ON FHIRAPP.MEDICATIONADMINISTRATION_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.MEDICATIONADMINISTRATION_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDICATIONADMINISTRATION_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDICATIONADMINISTRATION_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_MEDICATIONADMINISTRATION_LATLNG_VALUES_PNNLV ON FHIRAPP.MEDICATIONADMINISTRATION_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEDICATIONADMINISTRATION_LATLNG_VALUES_RPLNG ON FHIRAPP.MEDICATIONADMINISTRATION_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_MEDICATIONADMINISTRATION_LATLNG_VALUES_RPLAT ON FHIRAPP.MEDICATIONADMINISTRATION_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_MEDICATIONADMINISTRATION_LATLNG_VALUES_PNNHV ON FHIRAPP.MEDICATIONADMINISTRATION_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.MEDICATIONADMINISTRATION_LATLNG_VALUES ADD CONSTRAINT FK_MEDICATIONADMINISTRATION_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.MEDICATIONADMINISTRATION_LATLNG_VALUES ADD CONSTRAINT FK_MEDICATIONADMINISTRATION_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.MEDICATIONADMINISTRATION_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.MEDICATIONADMINISTRATION_LATLNG_VALUES_TENANT                      ON FHIRAPP.MEDICATIONADMINISTRATION_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.MEDICATIONADMINISTRATION_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDICATIONADMINISTRATION_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDICATIONADMINISTRATION_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_MEDICATIONADMINISTRATION_QUANTITY_VALUES_RPCLHS ON FHIRAPP.MEDICATIONADMINISTRATION_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_MEDICATIONADMINISTRATION_QUANTITY_VALUES_RPS ON FHIRAPP.MEDICATIONADMINISTRATION_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_MEDICATIONADMINISTRATION_QUANTITY_VALUES_PCHLSR ON FHIRAPP.MEDICATIONADMINISTRATION_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEDICATIONADMINISTRATION_QUANTITY_VALUES_PNNV ON FHIRAPP.MEDICATIONADMINISTRATION_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_MEDICATIONADMINISTRATION_QUANTITY_VALUES_RPCHLS ON FHIRAPP.MEDICATIONADMINISTRATION_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_MEDICATIONADMINISTRATION_QUANTITY_VALUES_PCLHSR ON FHIRAPP.MEDICATIONADMINISTRATION_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.MEDICATIONADMINISTRATION_QUANTITY_VALUES ADD CONSTRAINT FK_MEDICATIONADMINISTRATION_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.MEDICATIONADMINISTRATION_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.MEDICATIONADMINISTRATION_QUANTITY_VALUES ADD CONSTRAINT FK_MEDICATIONADMINISTRATION_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.MEDICATIONADMINISTRATION_QUANTITY_VALUES_TENANT                      ON FHIRAPP.MEDICATIONADMINISTRATION_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.MEDICATIONADMINISTRATION_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDICATIONADMINISTRATION_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.ENROLLMENTRESPONSE_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT ENROLLMENTRESPONSE_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.ENROLLMENTRESPONSE_LOGICAL_RESOURCES ADD CONSTRAINT FK_ENROLLMENTRESPONSE_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.ENROLLMENTRESPONSE_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.ENROLLMENTRESPONSE_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.ENROLLMENTRESPONSE_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.ENROLLMENTRESPONSE_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.ENROLLMENTRESPONSE_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT ENROLLMENTRESPONSE_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.ENROLLMENTRESPONSE_RESOURCES_PRF_IN1 ON FHIRAPP.ENROLLMENTRESPONSE_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.ENROLLMENTRESPONSE_RESOURCES_TENANT                      ON FHIRAPP.ENROLLMENTRESPONSE_RESOURCES          FOR ROWS WHERE FHIRAPP.ENROLLMENTRESPONSE_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.ENROLLMENTRESPONSE_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.ENROLLMENTRESPONSE_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_ENROLLMENTRESPONSE_STR_VALUES_PSR ON FHIRAPP.ENROLLMENTRESPONSE_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_ENROLLMENTRESPONSE_STR_VALUES_PLR ON FHIRAPP.ENROLLMENTRESPONSE_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_ENROLLMENTRESPONSE_STR_VALUES_RPS ON FHIRAPP.ENROLLMENTRESPONSE_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

CREATE INDEX FHIRAPP.IDX_ENROLLMENTRESPONSE_STR_VALUES_RPL ON FHIRAPP.ENROLLMENTRESPONSE_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

ALTER TABLE FHIRAPP.ENROLLMENTRESPONSE_STR_VALUES ADD CONSTRAINT FK_ENROLLMENTRESPONSE_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.ENROLLMENTRESPONSE_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.ENROLLMENTRESPONSE_STR_VALUES ADD CONSTRAINT FK_ENROLLMENTRESPONSE_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.ENROLLMENTRESPONSE_STR_VALUES_TENANT                      ON FHIRAPP.ENROLLMENTRESPONSE_STR_VALUES          FOR ROWS WHERE FHIRAPP.ENROLLMENTRESPONSE_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.ENROLLMENTRESPONSE_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.ENROLLMENTRESPONSE_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_ENROLLMENTRESPONSE_TOKEN_VALUES_PNCSCV ON FHIRAPP.ENROLLMENTRESPONSE_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_ENROLLMENTRESPONSE_TOKEN_VALUES_RPS ON FHIRAPP.ENROLLMENTRESPONSE_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

ALTER TABLE FHIRAPP.ENROLLMENTRESPONSE_TOKEN_VALUES ADD CONSTRAINT FK_ENROLLMENTRESPONSE_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.ENROLLMENTRESPONSE_TOKEN_VALUES ADD CONSTRAINT FK_ENROLLMENTRESPONSE_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.ENROLLMENTRESPONSE_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.ENROLLMENTRESPONSE_TOKEN_VALUES ADD CONSTRAINT FK_ENROLLMENTRESPONSE_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

CREATE PERMISSION FHIRAPP.ENROLLMENTRESPONSE_TOKEN_VALUES_TENANT                      ON FHIRAPP.ENROLLMENTRESPONSE_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.ENROLLMENTRESPONSE_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.ENROLLMENTRESPONSE_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.ENROLLMENTRESPONSE_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_ENROLLMENTRESPONSE_DATE_VALUES_PVR ON FHIRAPP.ENROLLMENTRESPONSE_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_ENROLLMENTRESPONSE_DATE_VALUES_PESR ON FHIRAPP.ENROLLMENTRESPONSE_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_ENROLLMENTRESPONSE_DATE_VALUES_PSER ON FHIRAPP.ENROLLMENTRESPONSE_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_ENROLLMENTRESPONSE_DATE_VALUES_RPSE ON FHIRAPP.ENROLLMENTRESPONSE_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

CREATE INDEX FHIRAPP.IDX_ENROLLMENTRESPONSE_DATE_VALUES_RPV ON FHIRAPP.ENROLLMENTRESPONSE_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

ALTER TABLE FHIRAPP.ENROLLMENTRESPONSE_DATE_VALUES ADD CONSTRAINT FK_ENROLLMENTRESPONSE_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.ENROLLMENTRESPONSE_DATE_VALUES ADD CONSTRAINT FK_ENROLLMENTRESPONSE_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.ENROLLMENTRESPONSE_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.ENROLLMENTRESPONSE_DATE_VALUES_TENANT                      ON FHIRAPP.ENROLLMENTRESPONSE_DATE_VALUES          FOR ROWS WHERE FHIRAPP.ENROLLMENTRESPONSE_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.ENROLLMENTRESPONSE_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.ENROLLMENTRESPONSE_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_ENROLLMENTRESPONSE_NUMBER_VALUES_PNNV ON FHIRAPP.ENROLLMENTRESPONSE_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_ENROLLMENTRESPONSE_NUMBER_VALUES_RPS ON FHIRAPP.ENROLLMENTRESPONSE_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

ALTER TABLE FHIRAPP.ENROLLMENTRESPONSE_NUMBER_VALUES ADD CONSTRAINT FK_ENROLLMENTRESPONSE_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.ENROLLMENTRESPONSE_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.ENROLLMENTRESPONSE_NUMBER_VALUES ADD CONSTRAINT FK_ENROLLMENTRESPONSE_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.ENROLLMENTRESPONSE_NUMBER_VALUES_TENANT                      ON FHIRAPP.ENROLLMENTRESPONSE_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.ENROLLMENTRESPONSE_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.ENROLLMENTRESPONSE_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.ENROLLMENTRESPONSE_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_ENROLLMENTRESPONSE_LATLNG_VALUES_RPLAT ON FHIRAPP.ENROLLMENTRESPONSE_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_ENROLLMENTRESPONSE_LATLNG_VALUES_PNNLV ON FHIRAPP.ENROLLMENTRESPONSE_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_ENROLLMENTRESPONSE_LATLNG_VALUES_PNNHV ON FHIRAPP.ENROLLMENTRESPONSE_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_ENROLLMENTRESPONSE_LATLNG_VALUES_RPLNG ON FHIRAPP.ENROLLMENTRESPONSE_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

ALTER TABLE FHIRAPP.ENROLLMENTRESPONSE_LATLNG_VALUES ADD CONSTRAINT FK_ENROLLMENTRESPONSE_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.ENROLLMENTRESPONSE_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.ENROLLMENTRESPONSE_LATLNG_VALUES ADD CONSTRAINT FK_ENROLLMENTRESPONSE_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.ENROLLMENTRESPONSE_LATLNG_VALUES_TENANT                      ON FHIRAPP.ENROLLMENTRESPONSE_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.ENROLLMENTRESPONSE_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.ENROLLMENTRESPONSE_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.ENROLLMENTRESPONSE_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_ENROLLMENTRESPONSE_QUANTITY_VALUES_RPCHLS ON FHIRAPP.ENROLLMENTRESPONSE_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_ENROLLMENTRESPONSE_QUANTITY_VALUES_PCLHSR ON FHIRAPP.ENROLLMENTRESPONSE_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_ENROLLMENTRESPONSE_QUANTITY_VALUES_PNNV ON FHIRAPP.ENROLLMENTRESPONSE_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_ENROLLMENTRESPONSE_QUANTITY_VALUES_RPCLHS ON FHIRAPP.ENROLLMENTRESPONSE_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_ENROLLMENTRESPONSE_QUANTITY_VALUES_RPS ON FHIRAPP.ENROLLMENTRESPONSE_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_ENROLLMENTRESPONSE_QUANTITY_VALUES_PCHLSR ON FHIRAPP.ENROLLMENTRESPONSE_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.ENROLLMENTRESPONSE_QUANTITY_VALUES ADD CONSTRAINT FK_ENROLLMENTRESPONSE_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.ENROLLMENTRESPONSE_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.ENROLLMENTRESPONSE_QUANTITY_VALUES ADD CONSTRAINT FK_ENROLLMENTRESPONSE_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.ENROLLMENTRESPONSE_QUANTITY_VALUES_TENANT                      ON FHIRAPP.ENROLLMENTRESPONSE_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.ENROLLMENTRESPONSE_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.ENROLLMENTRESPONSE_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.BINARY_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT BINARY_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.BINARY_LOGICAL_RESOURCES ADD CONSTRAINT FK_BINARY_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.BINARY_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.BINARY_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.BINARY_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.BINARY_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.BINARY_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT BINARY_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.BINARY_RESOURCES_PRF_IN1 ON FHIRAPP.BINARY_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.BINARY_RESOURCES_TENANT                      ON FHIRAPP.BINARY_RESOURCES          FOR ROWS WHERE FHIRAPP.BINARY_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.BINARY_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.BINARY_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_BINARY_STR_VALUES_PLR ON FHIRAPP.BINARY_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_BINARY_STR_VALUES_RPS ON FHIRAPP.BINARY_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

CREATE INDEX FHIRAPP.IDX_BINARY_STR_VALUES_RPL ON FHIRAPP.BINARY_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

CREATE INDEX FHIRAPP.IDX_BINARY_STR_VALUES_PSR ON FHIRAPP.BINARY_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.BINARY_STR_VALUES ADD CONSTRAINT FK_BINARY_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.BINARY_STR_VALUES ADD CONSTRAINT FK_BINARY_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.BINARY_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.BINARY_STR_VALUES_TENANT                      ON FHIRAPP.BINARY_STR_VALUES          FOR ROWS WHERE FHIRAPP.BINARY_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.BINARY_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.BINARY_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_BINARY_TOKEN_VALUES_RPS ON FHIRAPP.BINARY_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

CREATE INDEX FHIRAPP.IDX_BINARY_TOKEN_VALUES_PNCSCV ON FHIRAPP.BINARY_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.BINARY_TOKEN_VALUES ADD CONSTRAINT FK_BINARY_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.BINARY_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.BINARY_TOKEN_VALUES ADD CONSTRAINT FK_BINARY_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.BINARY_TOKEN_VALUES ADD CONSTRAINT FK_BINARY_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

CREATE PERMISSION FHIRAPP.BINARY_TOKEN_VALUES_TENANT                      ON FHIRAPP.BINARY_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.BINARY_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.BINARY_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.BINARY_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_BINARY_DATE_VALUES_PESR ON FHIRAPP.BINARY_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_BINARY_DATE_VALUES_PSER ON FHIRAPP.BINARY_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_BINARY_DATE_VALUES_PVR ON FHIRAPP.BINARY_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_BINARY_DATE_VALUES_RPSE ON FHIRAPP.BINARY_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

CREATE INDEX FHIRAPP.IDX_BINARY_DATE_VALUES_RPV ON FHIRAPP.BINARY_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

ALTER TABLE FHIRAPP.BINARY_DATE_VALUES ADD CONSTRAINT FK_BINARY_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.BINARY_DATE_VALUES ADD CONSTRAINT FK_BINARY_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.BINARY_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.BINARY_DATE_VALUES_TENANT                      ON FHIRAPP.BINARY_DATE_VALUES          FOR ROWS WHERE FHIRAPP.BINARY_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.BINARY_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.BINARY_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_BINARY_NUMBER_VALUES_PNNV ON FHIRAPP.BINARY_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_BINARY_NUMBER_VALUES_RPS ON FHIRAPP.BINARY_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

ALTER TABLE FHIRAPP.BINARY_NUMBER_VALUES ADD CONSTRAINT FK_BINARY_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.BINARY_NUMBER_VALUES ADD CONSTRAINT FK_BINARY_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.BINARY_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.BINARY_NUMBER_VALUES_TENANT                      ON FHIRAPP.BINARY_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.BINARY_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.BINARY_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.BINARY_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_BINARY_LATLNG_VALUES_PNNLV ON FHIRAPP.BINARY_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_BINARY_LATLNG_VALUES_RPLNG ON FHIRAPP.BINARY_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_BINARY_LATLNG_VALUES_RPLAT ON FHIRAPP.BINARY_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_BINARY_LATLNG_VALUES_PNNHV ON FHIRAPP.BINARY_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.BINARY_LATLNG_VALUES ADD CONSTRAINT FK_BINARY_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.BINARY_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.BINARY_LATLNG_VALUES ADD CONSTRAINT FK_BINARY_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.BINARY_LATLNG_VALUES_TENANT                      ON FHIRAPP.BINARY_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.BINARY_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.BINARY_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.BINARY_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_BINARY_QUANTITY_VALUES_RPS ON FHIRAPP.BINARY_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_BINARY_QUANTITY_VALUES_PCHLSR ON FHIRAPP.BINARY_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_BINARY_QUANTITY_VALUES_RPCHLS ON FHIRAPP.BINARY_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_BINARY_QUANTITY_VALUES_PNNV ON FHIRAPP.BINARY_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_BINARY_QUANTITY_VALUES_PCLHSR ON FHIRAPP.BINARY_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_BINARY_QUANTITY_VALUES_RPCLHS ON FHIRAPP.BINARY_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

ALTER TABLE FHIRAPP.BINARY_QUANTITY_VALUES ADD CONSTRAINT FK_BINARY_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.BINARY_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.BINARY_QUANTITY_VALUES ADD CONSTRAINT FK_BINARY_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.BINARY_QUANTITY_VALUES_TENANT                      ON FHIRAPP.BINARY_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.BINARY_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.BINARY_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.LIBRARY_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT LIBRARY_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.LIBRARY_LOGICAL_RESOURCES ADD CONSTRAINT FK_LIBRARY_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.LIBRARY_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.LIBRARY_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.LIBRARY_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.LIBRARY_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.LIBRARY_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT LIBRARY_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.LIBRARY_RESOURCES_PRF_IN1 ON FHIRAPP.LIBRARY_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.LIBRARY_RESOURCES_TENANT                      ON FHIRAPP.LIBRARY_RESOURCES          FOR ROWS WHERE FHIRAPP.LIBRARY_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.LIBRARY_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.LIBRARY_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_LIBRARY_STR_VALUES_RPL ON FHIRAPP.LIBRARY_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

CREATE INDEX FHIRAPP.IDX_LIBRARY_STR_VALUES_PSR ON FHIRAPP.LIBRARY_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_LIBRARY_STR_VALUES_PLR ON FHIRAPP.LIBRARY_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_LIBRARY_STR_VALUES_RPS ON FHIRAPP.LIBRARY_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

ALTER TABLE FHIRAPP.LIBRARY_STR_VALUES ADD CONSTRAINT FK_LIBRARY_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.LIBRARY_STR_VALUES ADD CONSTRAINT FK_LIBRARY_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LIBRARY_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.LIBRARY_STR_VALUES_TENANT                      ON FHIRAPP.LIBRARY_STR_VALUES          FOR ROWS WHERE FHIRAPP.LIBRARY_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.LIBRARY_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.LIBRARY_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_LIBRARY_TOKEN_VALUES_RPS ON FHIRAPP.LIBRARY_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

CREATE INDEX FHIRAPP.IDX_LIBRARY_TOKEN_VALUES_PNCSCV ON FHIRAPP.LIBRARY_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.LIBRARY_TOKEN_VALUES ADD CONSTRAINT FK_LIBRARY_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LIBRARY_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.LIBRARY_TOKEN_VALUES ADD CONSTRAINT FK_LIBRARY_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

ALTER TABLE FHIRAPP.LIBRARY_TOKEN_VALUES ADD CONSTRAINT FK_LIBRARY_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.LIBRARY_TOKEN_VALUES_TENANT                      ON FHIRAPP.LIBRARY_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.LIBRARY_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.LIBRARY_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.LIBRARY_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_LIBRARY_DATE_VALUES_PVR ON FHIRAPP.LIBRARY_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_LIBRARY_DATE_VALUES_RPV ON FHIRAPP.LIBRARY_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

CREATE INDEX FHIRAPP.IDX_LIBRARY_DATE_VALUES_PSER ON FHIRAPP.LIBRARY_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_LIBRARY_DATE_VALUES_PESR ON FHIRAPP.LIBRARY_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_LIBRARY_DATE_VALUES_RPSE ON FHIRAPP.LIBRARY_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

ALTER TABLE FHIRAPP.LIBRARY_DATE_VALUES ADD CONSTRAINT FK_LIBRARY_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LIBRARY_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.LIBRARY_DATE_VALUES ADD CONSTRAINT FK_LIBRARY_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.LIBRARY_DATE_VALUES_TENANT                      ON FHIRAPP.LIBRARY_DATE_VALUES          FOR ROWS WHERE FHIRAPP.LIBRARY_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.LIBRARY_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.LIBRARY_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_LIBRARY_NUMBER_VALUES_PNNV ON FHIRAPP.LIBRARY_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_LIBRARY_NUMBER_VALUES_RPS ON FHIRAPP.LIBRARY_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

ALTER TABLE FHIRAPP.LIBRARY_NUMBER_VALUES ADD CONSTRAINT FK_LIBRARY_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LIBRARY_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.LIBRARY_NUMBER_VALUES ADD CONSTRAINT FK_LIBRARY_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.LIBRARY_NUMBER_VALUES_TENANT                      ON FHIRAPP.LIBRARY_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.LIBRARY_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.LIBRARY_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.LIBRARY_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_LIBRARY_LATLNG_VALUES_RPLAT ON FHIRAPP.LIBRARY_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_LIBRARY_LATLNG_VALUES_PNNLV ON FHIRAPP.LIBRARY_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_LIBRARY_LATLNG_VALUES_RPLNG ON FHIRAPP.LIBRARY_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_LIBRARY_LATLNG_VALUES_PNNHV ON FHIRAPP.LIBRARY_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.LIBRARY_LATLNG_VALUES ADD CONSTRAINT FK_LIBRARY_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.LIBRARY_LATLNG_VALUES ADD CONSTRAINT FK_LIBRARY_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LIBRARY_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.LIBRARY_LATLNG_VALUES_TENANT                      ON FHIRAPP.LIBRARY_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.LIBRARY_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.LIBRARY_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.LIBRARY_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_LIBRARY_QUANTITY_VALUES_PCHLSR ON FHIRAPP.LIBRARY_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_LIBRARY_QUANTITY_VALUES_RPCHLS ON FHIRAPP.LIBRARY_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_LIBRARY_QUANTITY_VALUES_PNNV ON FHIRAPP.LIBRARY_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_LIBRARY_QUANTITY_VALUES_RPCLHS ON FHIRAPP.LIBRARY_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_LIBRARY_QUANTITY_VALUES_RPS ON FHIRAPP.LIBRARY_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_LIBRARY_QUANTITY_VALUES_PCLHSR ON FHIRAPP.LIBRARY_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.LIBRARY_QUANTITY_VALUES ADD CONSTRAINT FK_LIBRARY_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.LIBRARY_QUANTITY_VALUES ADD CONSTRAINT FK_LIBRARY_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LIBRARY_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.LIBRARY_QUANTITY_VALUES_TENANT                      ON FHIRAPP.LIBRARY_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.LIBRARY_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.LIBRARY_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDICINALPRODUCTINTERACTION_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT MEDICINALPRODUCTINTERACTION_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.MEDICINALPRODUCTINTERACTION_LOGICAL_RESOURCES ADD CONSTRAINT FK_MEDICINALPRODUCTINTERACTION_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.MEDICINALPRODUCTINTERACTION_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.MEDICINALPRODUCTINTERACTION_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.MEDICINALPRODUCTINTERACTION_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDICINALPRODUCTINTERACTION_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDICINALPRODUCTINTERACTION_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT MEDICINALPRODUCTINTERACTION_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.MEDICINALPRODUCTINTERACTION_RESOURCES_PRF_IN1 ON FHIRAPP.MEDICINALPRODUCTINTERACTION_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.MEDICINALPRODUCTINTERACTION_RESOURCES_TENANT                      ON FHIRAPP.MEDICINALPRODUCTINTERACTION_RESOURCES          FOR ROWS WHERE FHIRAPP.MEDICINALPRODUCTINTERACTION_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDICINALPRODUCTINTERACTION_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDICINALPRODUCTINTERACTION_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTINTERACTION_STR_VALUES_PLR ON FHIRAPP.MEDICINALPRODUCTINTERACTION_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTINTERACTION_STR_VALUES_RPS ON FHIRAPP.MEDICINALPRODUCTINTERACTION_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTINTERACTION_STR_VALUES_PSR ON FHIRAPP.MEDICINALPRODUCTINTERACTION_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTINTERACTION_STR_VALUES_RPL ON FHIRAPP.MEDICINALPRODUCTINTERACTION_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

ALTER TABLE FHIRAPP.MEDICINALPRODUCTINTERACTION_STR_VALUES ADD CONSTRAINT FK_MEDICINALPRODUCTINTERACTION_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.MEDICINALPRODUCTINTERACTION_STR_VALUES ADD CONSTRAINT FK_MEDICINALPRODUCTINTERACTION_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.MEDICINALPRODUCTINTERACTION_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.MEDICINALPRODUCTINTERACTION_STR_VALUES_TENANT                      ON FHIRAPP.MEDICINALPRODUCTINTERACTION_STR_VALUES          FOR ROWS WHERE FHIRAPP.MEDICINALPRODUCTINTERACTION_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDICINALPRODUCTINTERACTION_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDICINALPRODUCTINTERACTION_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTINTERACTION_TOKEN_VALUES_RPS ON FHIRAPP.MEDICINALPRODUCTINTERACTION_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTINTERACTION_TOKEN_VALUES_PNCSCV ON FHIRAPP.MEDICINALPRODUCTINTERACTION_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.MEDICINALPRODUCTINTERACTION_TOKEN_VALUES ADD CONSTRAINT FK_MEDICINALPRODUCTINTERACTION_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.MEDICINALPRODUCTINTERACTION_TOKEN_VALUES ADD CONSTRAINT FK_MEDICINALPRODUCTINTERACTION_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.MEDICINALPRODUCTINTERACTION_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.MEDICINALPRODUCTINTERACTION_TOKEN_VALUES ADD CONSTRAINT FK_MEDICINALPRODUCTINTERACTION_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

CREATE PERMISSION FHIRAPP.MEDICINALPRODUCTINTERACTION_TOKEN_VALUES_TENANT                      ON FHIRAPP.MEDICINALPRODUCTINTERACTION_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.MEDICINALPRODUCTINTERACTION_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDICINALPRODUCTINTERACTION_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDICINALPRODUCTINTERACTION_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTINTERACTION_DATE_VALUES_PESR ON FHIRAPP.MEDICINALPRODUCTINTERACTION_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTINTERACTION_DATE_VALUES_RPV ON FHIRAPP.MEDICINALPRODUCTINTERACTION_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTINTERACTION_DATE_VALUES_PSER ON FHIRAPP.MEDICINALPRODUCTINTERACTION_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTINTERACTION_DATE_VALUES_RPSE ON FHIRAPP.MEDICINALPRODUCTINTERACTION_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTINTERACTION_DATE_VALUES_PVR ON FHIRAPP.MEDICINALPRODUCTINTERACTION_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.MEDICINALPRODUCTINTERACTION_DATE_VALUES ADD CONSTRAINT FK_MEDICINALPRODUCTINTERACTION_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.MEDICINALPRODUCTINTERACTION_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.MEDICINALPRODUCTINTERACTION_DATE_VALUES ADD CONSTRAINT FK_MEDICINALPRODUCTINTERACTION_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.MEDICINALPRODUCTINTERACTION_DATE_VALUES_TENANT                      ON FHIRAPP.MEDICINALPRODUCTINTERACTION_DATE_VALUES          FOR ROWS WHERE FHIRAPP.MEDICINALPRODUCTINTERACTION_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDICINALPRODUCTINTERACTION_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDICINALPRODUCTINTERACTION_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTINTERACTION_NUMBER_VALUES_PNNV ON FHIRAPP.MEDICINALPRODUCTINTERACTION_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTINTERACTION_NUMBER_VALUES_RPS ON FHIRAPP.MEDICINALPRODUCTINTERACTION_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

ALTER TABLE FHIRAPP.MEDICINALPRODUCTINTERACTION_NUMBER_VALUES ADD CONSTRAINT FK_MEDICINALPRODUCTINTERACTION_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.MEDICINALPRODUCTINTERACTION_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.MEDICINALPRODUCTINTERACTION_NUMBER_VALUES ADD CONSTRAINT FK_MEDICINALPRODUCTINTERACTION_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.MEDICINALPRODUCTINTERACTION_NUMBER_VALUES_TENANT                      ON FHIRAPP.MEDICINALPRODUCTINTERACTION_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.MEDICINALPRODUCTINTERACTION_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDICINALPRODUCTINTERACTION_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDICINALPRODUCTINTERACTION_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTINTERACTION_LATLNG_VALUES_PNNHV ON FHIRAPP.MEDICINALPRODUCTINTERACTION_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTINTERACTION_LATLNG_VALUES_RPLNG ON FHIRAPP.MEDICINALPRODUCTINTERACTION_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTINTERACTION_LATLNG_VALUES_RPLAT ON FHIRAPP.MEDICINALPRODUCTINTERACTION_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTINTERACTION_LATLNG_VALUES_PNNLV ON FHIRAPP.MEDICINALPRODUCTINTERACTION_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.MEDICINALPRODUCTINTERACTION_LATLNG_VALUES ADD CONSTRAINT FK_MEDICINALPRODUCTINTERACTION_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.MEDICINALPRODUCTINTERACTION_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.MEDICINALPRODUCTINTERACTION_LATLNG_VALUES ADD CONSTRAINT FK_MEDICINALPRODUCTINTERACTION_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.MEDICINALPRODUCTINTERACTION_LATLNG_VALUES_TENANT                      ON FHIRAPP.MEDICINALPRODUCTINTERACTION_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.MEDICINALPRODUCTINTERACTION_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDICINALPRODUCTINTERACTION_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDICINALPRODUCTINTERACTION_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTINTERACTION_QUANTITY_VALUES_RPCLHS ON FHIRAPP.MEDICINALPRODUCTINTERACTION_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTINTERACTION_QUANTITY_VALUES_RPS ON FHIRAPP.MEDICINALPRODUCTINTERACTION_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTINTERACTION_QUANTITY_VALUES_PCHLSR ON FHIRAPP.MEDICINALPRODUCTINTERACTION_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTINTERACTION_QUANTITY_VALUES_PNNV ON FHIRAPP.MEDICINALPRODUCTINTERACTION_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTINTERACTION_QUANTITY_VALUES_RPCHLS ON FHIRAPP.MEDICINALPRODUCTINTERACTION_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTINTERACTION_QUANTITY_VALUES_PCLHSR ON FHIRAPP.MEDICINALPRODUCTINTERACTION_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.MEDICINALPRODUCTINTERACTION_QUANTITY_VALUES ADD CONSTRAINT FK_MEDICINALPRODUCTINTERACTION_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.MEDICINALPRODUCTINTERACTION_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.MEDICINALPRODUCTINTERACTION_QUANTITY_VALUES ADD CONSTRAINT FK_MEDICINALPRODUCTINTERACTION_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.MEDICINALPRODUCTINTERACTION_QUANTITY_VALUES_TENANT                      ON FHIRAPP.MEDICINALPRODUCTINTERACTION_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.MEDICINALPRODUCTINTERACTION_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDICINALPRODUCTINTERACTION_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDICATIONSTATEMENT_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT MEDICATIONSTATEMENT_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.MEDICATIONSTATEMENT_LOGICAL_RESOURCES ADD CONSTRAINT FK_MEDICATIONSTATEMENT_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.MEDICATIONSTATEMENT_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.MEDICATIONSTATEMENT_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.MEDICATIONSTATEMENT_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDICATIONSTATEMENT_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDICATIONSTATEMENT_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT MEDICATIONSTATEMENT_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.MEDICATIONSTATEMENT_RESOURCES_PRF_IN1 ON FHIRAPP.MEDICATIONSTATEMENT_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.MEDICATIONSTATEMENT_RESOURCES_TENANT                      ON FHIRAPP.MEDICATIONSTATEMENT_RESOURCES          FOR ROWS WHERE FHIRAPP.MEDICATIONSTATEMENT_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDICATIONSTATEMENT_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDICATIONSTATEMENT_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_MEDICATIONSTATEMENT_STR_VALUES_RPL ON FHIRAPP.MEDICATIONSTATEMENT_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

CREATE INDEX FHIRAPP.IDX_MEDICATIONSTATEMENT_STR_VALUES_PSR ON FHIRAPP.MEDICATIONSTATEMENT_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEDICATIONSTATEMENT_STR_VALUES_RPS ON FHIRAPP.MEDICATIONSTATEMENT_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

CREATE INDEX FHIRAPP.IDX_MEDICATIONSTATEMENT_STR_VALUES_PLR ON FHIRAPP.MEDICATIONSTATEMENT_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.MEDICATIONSTATEMENT_STR_VALUES ADD CONSTRAINT FK_MEDICATIONSTATEMENT_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.MEDICATIONSTATEMENT_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.MEDICATIONSTATEMENT_STR_VALUES ADD CONSTRAINT FK_MEDICATIONSTATEMENT_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.MEDICATIONSTATEMENT_STR_VALUES_TENANT                      ON FHIRAPP.MEDICATIONSTATEMENT_STR_VALUES          FOR ROWS WHERE FHIRAPP.MEDICATIONSTATEMENT_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDICATIONSTATEMENT_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDICATIONSTATEMENT_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_MEDICATIONSTATEMENT_TOKEN_VALUES_PNCSCV ON FHIRAPP.MEDICATIONSTATEMENT_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEDICATIONSTATEMENT_TOKEN_VALUES_RPS ON FHIRAPP.MEDICATIONSTATEMENT_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

ALTER TABLE FHIRAPP.MEDICATIONSTATEMENT_TOKEN_VALUES ADD CONSTRAINT FK_MEDICATIONSTATEMENT_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

ALTER TABLE FHIRAPP.MEDICATIONSTATEMENT_TOKEN_VALUES ADD CONSTRAINT FK_MEDICATIONSTATEMENT_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.MEDICATIONSTATEMENT_TOKEN_VALUES ADD CONSTRAINT FK_MEDICATIONSTATEMENT_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.MEDICATIONSTATEMENT_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.MEDICATIONSTATEMENT_TOKEN_VALUES_TENANT                      ON FHIRAPP.MEDICATIONSTATEMENT_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.MEDICATIONSTATEMENT_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDICATIONSTATEMENT_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDICATIONSTATEMENT_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_MEDICATIONSTATEMENT_DATE_VALUES_RPSE ON FHIRAPP.MEDICATIONSTATEMENT_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

CREATE INDEX FHIRAPP.IDX_MEDICATIONSTATEMENT_DATE_VALUES_PSER ON FHIRAPP.MEDICATIONSTATEMENT_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEDICATIONSTATEMENT_DATE_VALUES_PVR ON FHIRAPP.MEDICATIONSTATEMENT_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEDICATIONSTATEMENT_DATE_VALUES_RPV ON FHIRAPP.MEDICATIONSTATEMENT_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

CREATE INDEX FHIRAPP.IDX_MEDICATIONSTATEMENT_DATE_VALUES_PESR ON FHIRAPP.MEDICATIONSTATEMENT_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.MEDICATIONSTATEMENT_DATE_VALUES ADD CONSTRAINT FK_MEDICATIONSTATEMENT_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.MEDICATIONSTATEMENT_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.MEDICATIONSTATEMENT_DATE_VALUES ADD CONSTRAINT FK_MEDICATIONSTATEMENT_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.MEDICATIONSTATEMENT_DATE_VALUES_TENANT                      ON FHIRAPP.MEDICATIONSTATEMENT_DATE_VALUES          FOR ROWS WHERE FHIRAPP.MEDICATIONSTATEMENT_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDICATIONSTATEMENT_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDICATIONSTATEMENT_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_MEDICATIONSTATEMENT_NUMBER_VALUES_PNNV ON FHIRAPP.MEDICATIONSTATEMENT_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEDICATIONSTATEMENT_NUMBER_VALUES_RPS ON FHIRAPP.MEDICATIONSTATEMENT_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

ALTER TABLE FHIRAPP.MEDICATIONSTATEMENT_NUMBER_VALUES ADD CONSTRAINT FK_MEDICATIONSTATEMENT_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.MEDICATIONSTATEMENT_NUMBER_VALUES ADD CONSTRAINT FK_MEDICATIONSTATEMENT_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.MEDICATIONSTATEMENT_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.MEDICATIONSTATEMENT_NUMBER_VALUES_TENANT                      ON FHIRAPP.MEDICATIONSTATEMENT_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.MEDICATIONSTATEMENT_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDICATIONSTATEMENT_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDICATIONSTATEMENT_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_MEDICATIONSTATEMENT_LATLNG_VALUES_PNNHV ON FHIRAPP.MEDICATIONSTATEMENT_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEDICATIONSTATEMENT_LATLNG_VALUES_RPLAT ON FHIRAPP.MEDICATIONSTATEMENT_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_MEDICATIONSTATEMENT_LATLNG_VALUES_RPLNG ON FHIRAPP.MEDICATIONSTATEMENT_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_MEDICATIONSTATEMENT_LATLNG_VALUES_PNNLV ON FHIRAPP.MEDICATIONSTATEMENT_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.MEDICATIONSTATEMENT_LATLNG_VALUES ADD CONSTRAINT FK_MEDICATIONSTATEMENT_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.MEDICATIONSTATEMENT_LATLNG_VALUES ADD CONSTRAINT FK_MEDICATIONSTATEMENT_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.MEDICATIONSTATEMENT_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.MEDICATIONSTATEMENT_LATLNG_VALUES_TENANT                      ON FHIRAPP.MEDICATIONSTATEMENT_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.MEDICATIONSTATEMENT_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDICATIONSTATEMENT_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDICATIONSTATEMENT_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_MEDICATIONSTATEMENT_QUANTITY_VALUES_RPCLHS ON FHIRAPP.MEDICATIONSTATEMENT_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_MEDICATIONSTATEMENT_QUANTITY_VALUES_PNNV ON FHIRAPP.MEDICATIONSTATEMENT_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_MEDICATIONSTATEMENT_QUANTITY_VALUES_RPS ON FHIRAPP.MEDICATIONSTATEMENT_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_MEDICATIONSTATEMENT_QUANTITY_VALUES_PCLHSR ON FHIRAPP.MEDICATIONSTATEMENT_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEDICATIONSTATEMENT_QUANTITY_VALUES_RPCHLS ON FHIRAPP.MEDICATIONSTATEMENT_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_MEDICATIONSTATEMENT_QUANTITY_VALUES_PCHLSR ON FHIRAPP.MEDICATIONSTATEMENT_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.MEDICATIONSTATEMENT_QUANTITY_VALUES ADD CONSTRAINT FK_MEDICATIONSTATEMENT_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.MEDICATIONSTATEMENT_QUANTITY_VALUES ADD CONSTRAINT FK_MEDICATIONSTATEMENT_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.MEDICATIONSTATEMENT_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.MEDICATIONSTATEMENT_QUANTITY_VALUES_TENANT                      ON FHIRAPP.MEDICATIONSTATEMENT_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.MEDICATIONSTATEMENT_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDICATIONSTATEMENT_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.COMMUNICATIONREQUEST_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT COMMUNICATIONREQUEST_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.COMMUNICATIONREQUEST_LOGICAL_RESOURCES ADD CONSTRAINT FK_COMMUNICATIONREQUEST_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.COMMUNICATIONREQUEST_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.COMMUNICATIONREQUEST_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.COMMUNICATIONREQUEST_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.COMMUNICATIONREQUEST_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.COMMUNICATIONREQUEST_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT COMMUNICATIONREQUEST_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.COMMUNICATIONREQUEST_RESOURCES_PRF_IN1 ON FHIRAPP.COMMUNICATIONREQUEST_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.COMMUNICATIONREQUEST_RESOURCES_TENANT                      ON FHIRAPP.COMMUNICATIONREQUEST_RESOURCES          FOR ROWS WHERE FHIRAPP.COMMUNICATIONREQUEST_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.COMMUNICATIONREQUEST_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.COMMUNICATIONREQUEST_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_COMMUNICATIONREQUEST_STR_VALUES_RPS ON FHIRAPP.COMMUNICATIONREQUEST_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

CREATE INDEX FHIRAPP.IDX_COMMUNICATIONREQUEST_STR_VALUES_PLR ON FHIRAPP.COMMUNICATIONREQUEST_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_COMMUNICATIONREQUEST_STR_VALUES_RPL ON FHIRAPP.COMMUNICATIONREQUEST_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

CREATE INDEX FHIRAPP.IDX_COMMUNICATIONREQUEST_STR_VALUES_PSR ON FHIRAPP.COMMUNICATIONREQUEST_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.COMMUNICATIONREQUEST_STR_VALUES ADD CONSTRAINT FK_COMMUNICATIONREQUEST_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.COMMUNICATIONREQUEST_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.COMMUNICATIONREQUEST_STR_VALUES ADD CONSTRAINT FK_COMMUNICATIONREQUEST_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.COMMUNICATIONREQUEST_STR_VALUES_TENANT                      ON FHIRAPP.COMMUNICATIONREQUEST_STR_VALUES          FOR ROWS WHERE FHIRAPP.COMMUNICATIONREQUEST_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.COMMUNICATIONREQUEST_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.COMMUNICATIONREQUEST_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_COMMUNICATIONREQUEST_TOKEN_VALUES_RPS ON FHIRAPP.COMMUNICATIONREQUEST_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

CREATE INDEX FHIRAPP.IDX_COMMUNICATIONREQUEST_TOKEN_VALUES_PNCSCV ON FHIRAPP.COMMUNICATIONREQUEST_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.COMMUNICATIONREQUEST_TOKEN_VALUES ADD CONSTRAINT FK_COMMUNICATIONREQUEST_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

ALTER TABLE FHIRAPP.COMMUNICATIONREQUEST_TOKEN_VALUES ADD CONSTRAINT FK_COMMUNICATIONREQUEST_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.COMMUNICATIONREQUEST_TOKEN_VALUES ADD CONSTRAINT FK_COMMUNICATIONREQUEST_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.COMMUNICATIONREQUEST_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.COMMUNICATIONREQUEST_TOKEN_VALUES_TENANT                      ON FHIRAPP.COMMUNICATIONREQUEST_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.COMMUNICATIONREQUEST_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.COMMUNICATIONREQUEST_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.COMMUNICATIONREQUEST_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_COMMUNICATIONREQUEST_DATE_VALUES_RPV ON FHIRAPP.COMMUNICATIONREQUEST_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

CREATE INDEX FHIRAPP.IDX_COMMUNICATIONREQUEST_DATE_VALUES_PVR ON FHIRAPP.COMMUNICATIONREQUEST_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_COMMUNICATIONREQUEST_DATE_VALUES_PSER ON FHIRAPP.COMMUNICATIONREQUEST_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_COMMUNICATIONREQUEST_DATE_VALUES_RPSE ON FHIRAPP.COMMUNICATIONREQUEST_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

CREATE INDEX FHIRAPP.IDX_COMMUNICATIONREQUEST_DATE_VALUES_PESR ON FHIRAPP.COMMUNICATIONREQUEST_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.COMMUNICATIONREQUEST_DATE_VALUES ADD CONSTRAINT FK_COMMUNICATIONREQUEST_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.COMMUNICATIONREQUEST_DATE_VALUES ADD CONSTRAINT FK_COMMUNICATIONREQUEST_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.COMMUNICATIONREQUEST_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.COMMUNICATIONREQUEST_DATE_VALUES_TENANT                      ON FHIRAPP.COMMUNICATIONREQUEST_DATE_VALUES          FOR ROWS WHERE FHIRAPP.COMMUNICATIONREQUEST_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.COMMUNICATIONREQUEST_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.COMMUNICATIONREQUEST_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_COMMUNICATIONREQUEST_NUMBER_VALUES_PNNV ON FHIRAPP.COMMUNICATIONREQUEST_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_COMMUNICATIONREQUEST_NUMBER_VALUES_RPS ON FHIRAPP.COMMUNICATIONREQUEST_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

ALTER TABLE FHIRAPP.COMMUNICATIONREQUEST_NUMBER_VALUES ADD CONSTRAINT FK_COMMUNICATIONREQUEST_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.COMMUNICATIONREQUEST_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.COMMUNICATIONREQUEST_NUMBER_VALUES ADD CONSTRAINT FK_COMMUNICATIONREQUEST_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.COMMUNICATIONREQUEST_NUMBER_VALUES_TENANT                      ON FHIRAPP.COMMUNICATIONREQUEST_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.COMMUNICATIONREQUEST_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.COMMUNICATIONREQUEST_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.COMMUNICATIONREQUEST_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_COMMUNICATIONREQUEST_LATLNG_VALUES_RPLAT ON FHIRAPP.COMMUNICATIONREQUEST_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_COMMUNICATIONREQUEST_LATLNG_VALUES_RPLNG ON FHIRAPP.COMMUNICATIONREQUEST_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_COMMUNICATIONREQUEST_LATLNG_VALUES_PNNLV ON FHIRAPP.COMMUNICATIONREQUEST_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_COMMUNICATIONREQUEST_LATLNG_VALUES_PNNHV ON FHIRAPP.COMMUNICATIONREQUEST_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.COMMUNICATIONREQUEST_LATLNG_VALUES ADD CONSTRAINT FK_COMMUNICATIONREQUEST_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.COMMUNICATIONREQUEST_LATLNG_VALUES ADD CONSTRAINT FK_COMMUNICATIONREQUEST_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.COMMUNICATIONREQUEST_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.COMMUNICATIONREQUEST_LATLNG_VALUES_TENANT                      ON FHIRAPP.COMMUNICATIONREQUEST_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.COMMUNICATIONREQUEST_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.COMMUNICATIONREQUEST_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.COMMUNICATIONREQUEST_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_COMMUNICATIONREQUEST_QUANTITY_VALUES_RPCHLS ON FHIRAPP.COMMUNICATIONREQUEST_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_COMMUNICATIONREQUEST_QUANTITY_VALUES_RPS ON FHIRAPP.COMMUNICATIONREQUEST_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_COMMUNICATIONREQUEST_QUANTITY_VALUES_PCHLSR ON FHIRAPP.COMMUNICATIONREQUEST_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_COMMUNICATIONREQUEST_QUANTITY_VALUES_PNNV ON FHIRAPP.COMMUNICATIONREQUEST_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_COMMUNICATIONREQUEST_QUANTITY_VALUES_RPCLHS ON FHIRAPP.COMMUNICATIONREQUEST_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_COMMUNICATIONREQUEST_QUANTITY_VALUES_PCLHSR ON FHIRAPP.COMMUNICATIONREQUEST_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.COMMUNICATIONREQUEST_QUANTITY_VALUES ADD CONSTRAINT FK_COMMUNICATIONREQUEST_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.COMMUNICATIONREQUEST_QUANTITY_VALUES ADD CONSTRAINT FK_COMMUNICATIONREQUEST_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.COMMUNICATIONREQUEST_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.COMMUNICATIONREQUEST_QUANTITY_VALUES_TENANT                      ON FHIRAPP.COMMUNICATIONREQUEST_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.COMMUNICATIONREQUEST_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.COMMUNICATIONREQUEST_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.TESTSCRIPT_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT TESTSCRIPT_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.TESTSCRIPT_LOGICAL_RESOURCES ADD CONSTRAINT FK_TESTSCRIPT_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.TESTSCRIPT_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.TESTSCRIPT_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.TESTSCRIPT_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.TESTSCRIPT_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.TESTSCRIPT_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT TESTSCRIPT_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.TESTSCRIPT_RESOURCES_PRF_IN1 ON FHIRAPP.TESTSCRIPT_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.TESTSCRIPT_RESOURCES_TENANT                      ON FHIRAPP.TESTSCRIPT_RESOURCES          FOR ROWS WHERE FHIRAPP.TESTSCRIPT_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.TESTSCRIPT_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.TESTSCRIPT_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_TESTSCRIPT_STR_VALUES_RPL ON FHIRAPP.TESTSCRIPT_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

CREATE INDEX FHIRAPP.IDX_TESTSCRIPT_STR_VALUES_PSR ON FHIRAPP.TESTSCRIPT_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_TESTSCRIPT_STR_VALUES_PLR ON FHIRAPP.TESTSCRIPT_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_TESTSCRIPT_STR_VALUES_RPS ON FHIRAPP.TESTSCRIPT_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

ALTER TABLE FHIRAPP.TESTSCRIPT_STR_VALUES ADD CONSTRAINT FK_TESTSCRIPT_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.TESTSCRIPT_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.TESTSCRIPT_STR_VALUES ADD CONSTRAINT FK_TESTSCRIPT_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.TESTSCRIPT_STR_VALUES_TENANT                      ON FHIRAPP.TESTSCRIPT_STR_VALUES          FOR ROWS WHERE FHIRAPP.TESTSCRIPT_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.TESTSCRIPT_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.TESTSCRIPT_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_TESTSCRIPT_TOKEN_VALUES_RPS ON FHIRAPP.TESTSCRIPT_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

CREATE INDEX FHIRAPP.IDX_TESTSCRIPT_TOKEN_VALUES_PNCSCV ON FHIRAPP.TESTSCRIPT_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.TESTSCRIPT_TOKEN_VALUES ADD CONSTRAINT FK_TESTSCRIPT_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.TESTSCRIPT_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.TESTSCRIPT_TOKEN_VALUES ADD CONSTRAINT FK_TESTSCRIPT_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

ALTER TABLE FHIRAPP.TESTSCRIPT_TOKEN_VALUES ADD CONSTRAINT FK_TESTSCRIPT_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.TESTSCRIPT_TOKEN_VALUES_TENANT                      ON FHIRAPP.TESTSCRIPT_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.TESTSCRIPT_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.TESTSCRIPT_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.TESTSCRIPT_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_TESTSCRIPT_DATE_VALUES_PVR ON FHIRAPP.TESTSCRIPT_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_TESTSCRIPT_DATE_VALUES_PESR ON FHIRAPP.TESTSCRIPT_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_TESTSCRIPT_DATE_VALUES_PSER ON FHIRAPP.TESTSCRIPT_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_TESTSCRIPT_DATE_VALUES_RPSE ON FHIRAPP.TESTSCRIPT_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

CREATE INDEX FHIRAPP.IDX_TESTSCRIPT_DATE_VALUES_RPV ON FHIRAPP.TESTSCRIPT_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

ALTER TABLE FHIRAPP.TESTSCRIPT_DATE_VALUES ADD CONSTRAINT FK_TESTSCRIPT_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.TESTSCRIPT_DATE_VALUES ADD CONSTRAINT FK_TESTSCRIPT_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.TESTSCRIPT_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.TESTSCRIPT_DATE_VALUES_TENANT                      ON FHIRAPP.TESTSCRIPT_DATE_VALUES          FOR ROWS WHERE FHIRAPP.TESTSCRIPT_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.TESTSCRIPT_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.TESTSCRIPT_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_TESTSCRIPT_NUMBER_VALUES_RPS ON FHIRAPP.TESTSCRIPT_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

CREATE INDEX FHIRAPP.IDX_TESTSCRIPT_NUMBER_VALUES_PNNV ON FHIRAPP.TESTSCRIPT_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.TESTSCRIPT_NUMBER_VALUES ADD CONSTRAINT FK_TESTSCRIPT_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.TESTSCRIPT_NUMBER_VALUES ADD CONSTRAINT FK_TESTSCRIPT_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.TESTSCRIPT_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.TESTSCRIPT_NUMBER_VALUES_TENANT                      ON FHIRAPP.TESTSCRIPT_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.TESTSCRIPT_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.TESTSCRIPT_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.TESTSCRIPT_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_TESTSCRIPT_LATLNG_VALUES_PNNLV ON FHIRAPP.TESTSCRIPT_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_TESTSCRIPT_LATLNG_VALUES_RPLNG ON FHIRAPP.TESTSCRIPT_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_TESTSCRIPT_LATLNG_VALUES_RPLAT ON FHIRAPP.TESTSCRIPT_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_TESTSCRIPT_LATLNG_VALUES_PNNHV ON FHIRAPP.TESTSCRIPT_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.TESTSCRIPT_LATLNG_VALUES ADD CONSTRAINT FK_TESTSCRIPT_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.TESTSCRIPT_LATLNG_VALUES ADD CONSTRAINT FK_TESTSCRIPT_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.TESTSCRIPT_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.TESTSCRIPT_LATLNG_VALUES_TENANT                      ON FHIRAPP.TESTSCRIPT_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.TESTSCRIPT_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.TESTSCRIPT_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.TESTSCRIPT_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_TESTSCRIPT_QUANTITY_VALUES_RPS ON FHIRAPP.TESTSCRIPT_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_TESTSCRIPT_QUANTITY_VALUES_RPCHLS ON FHIRAPP.TESTSCRIPT_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_TESTSCRIPT_QUANTITY_VALUES_PCHLSR ON FHIRAPP.TESTSCRIPT_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_TESTSCRIPT_QUANTITY_VALUES_RPCLHS ON FHIRAPP.TESTSCRIPT_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_TESTSCRIPT_QUANTITY_VALUES_PCLHSR ON FHIRAPP.TESTSCRIPT_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_TESTSCRIPT_QUANTITY_VALUES_PNNV ON FHIRAPP.TESTSCRIPT_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

ALTER TABLE FHIRAPP.TESTSCRIPT_QUANTITY_VALUES ADD CONSTRAINT FK_TESTSCRIPT_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.TESTSCRIPT_QUANTITY_VALUES ADD CONSTRAINT FK_TESTSCRIPT_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.TESTSCRIPT_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.TESTSCRIPT_QUANTITY_VALUES_TENANT                      ON FHIRAPP.TESTSCRIPT_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.TESTSCRIPT_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.TESTSCRIPT_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.BASIC_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT BASIC_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.BASIC_LOGICAL_RESOURCES ADD CONSTRAINT FK_BASIC_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.BASIC_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.BASIC_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.BASIC_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.BASIC_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.BASIC_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT BASIC_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.BASIC_RESOURCES_PRF_IN1 ON FHIRAPP.BASIC_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.BASIC_RESOURCES_TENANT                      ON FHIRAPP.BASIC_RESOURCES          FOR ROWS WHERE FHIRAPP.BASIC_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.BASIC_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.BASIC_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_BASIC_STR_VALUES_PLR ON FHIRAPP.BASIC_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_BASIC_STR_VALUES_RPS ON FHIRAPP.BASIC_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

CREATE INDEX FHIRAPP.IDX_BASIC_STR_VALUES_PSR ON FHIRAPP.BASIC_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_BASIC_STR_VALUES_RPL ON FHIRAPP.BASIC_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

ALTER TABLE FHIRAPP.BASIC_STR_VALUES ADD CONSTRAINT FK_BASIC_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.BASIC_STR_VALUES ADD CONSTRAINT FK_BASIC_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.BASIC_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.BASIC_STR_VALUES_TENANT                      ON FHIRAPP.BASIC_STR_VALUES          FOR ROWS WHERE FHIRAPP.BASIC_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.BASIC_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.BASIC_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_BASIC_TOKEN_VALUES_RPS ON FHIRAPP.BASIC_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

CREATE INDEX FHIRAPP.IDX_BASIC_TOKEN_VALUES_PNCSCV ON FHIRAPP.BASIC_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.BASIC_TOKEN_VALUES ADD CONSTRAINT FK_BASIC_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.BASIC_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.BASIC_TOKEN_VALUES ADD CONSTRAINT FK_BASIC_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.BASIC_TOKEN_VALUES ADD CONSTRAINT FK_BASIC_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

CREATE PERMISSION FHIRAPP.BASIC_TOKEN_VALUES_TENANT                      ON FHIRAPP.BASIC_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.BASIC_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.BASIC_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.BASIC_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_BASIC_DATE_VALUES_RPV ON FHIRAPP.BASIC_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

CREATE INDEX FHIRAPP.IDX_BASIC_DATE_VALUES_RPSE ON FHIRAPP.BASIC_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

CREATE INDEX FHIRAPP.IDX_BASIC_DATE_VALUES_PSER ON FHIRAPP.BASIC_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_BASIC_DATE_VALUES_PVR ON FHIRAPP.BASIC_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_BASIC_DATE_VALUES_PESR ON FHIRAPP.BASIC_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.BASIC_DATE_VALUES ADD CONSTRAINT FK_BASIC_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.BASIC_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.BASIC_DATE_VALUES ADD CONSTRAINT FK_BASIC_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.BASIC_DATE_VALUES_TENANT                      ON FHIRAPP.BASIC_DATE_VALUES          FOR ROWS WHERE FHIRAPP.BASIC_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.BASIC_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.BASIC_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_BASIC_NUMBER_VALUES_PNNV ON FHIRAPP.BASIC_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_BASIC_NUMBER_VALUES_RPS ON FHIRAPP.BASIC_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

ALTER TABLE FHIRAPP.BASIC_NUMBER_VALUES ADD CONSTRAINT FK_BASIC_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.BASIC_NUMBER_VALUES ADD CONSTRAINT FK_BASIC_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.BASIC_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.BASIC_NUMBER_VALUES_TENANT                      ON FHIRAPP.BASIC_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.BASIC_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.BASIC_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.BASIC_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_BASIC_LATLNG_VALUES_PNNLV ON FHIRAPP.BASIC_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_BASIC_LATLNG_VALUES_RPLNG ON FHIRAPP.BASIC_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_BASIC_LATLNG_VALUES_PNNHV ON FHIRAPP.BASIC_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_BASIC_LATLNG_VALUES_RPLAT ON FHIRAPP.BASIC_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

ALTER TABLE FHIRAPP.BASIC_LATLNG_VALUES ADD CONSTRAINT FK_BASIC_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.BASIC_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.BASIC_LATLNG_VALUES ADD CONSTRAINT FK_BASIC_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.BASIC_LATLNG_VALUES_TENANT                      ON FHIRAPP.BASIC_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.BASIC_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.BASIC_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.BASIC_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_BASIC_QUANTITY_VALUES_PCLHSR ON FHIRAPP.BASIC_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_BASIC_QUANTITY_VALUES_RPCHLS ON FHIRAPP.BASIC_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_BASIC_QUANTITY_VALUES_RPCLHS ON FHIRAPP.BASIC_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_BASIC_QUANTITY_VALUES_PNNV ON FHIRAPP.BASIC_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_BASIC_QUANTITY_VALUES_PCHLSR ON FHIRAPP.BASIC_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_BASIC_QUANTITY_VALUES_RPS ON FHIRAPP.BASIC_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

ALTER TABLE FHIRAPP.BASIC_QUANTITY_VALUES ADD CONSTRAINT FK_BASIC_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.BASIC_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.BASIC_QUANTITY_VALUES ADD CONSTRAINT FK_BASIC_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.BASIC_QUANTITY_VALUES_TENANT                      ON FHIRAPP.BASIC_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.BASIC_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.BASIC_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.SUBSTANCEPOLYMER_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT SUBSTANCEPOLYMER_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.SUBSTANCEPOLYMER_LOGICAL_RESOURCES ADD CONSTRAINT FK_SUBSTANCEPOLYMER_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.SUBSTANCEPOLYMER_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.SUBSTANCEPOLYMER_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.SUBSTANCEPOLYMER_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.SUBSTANCEPOLYMER_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.SUBSTANCEPOLYMER_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT SUBSTANCEPOLYMER_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.SUBSTANCEPOLYMER_RESOURCES_PRF_IN1 ON FHIRAPP.SUBSTANCEPOLYMER_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.SUBSTANCEPOLYMER_RESOURCES_TENANT                      ON FHIRAPP.SUBSTANCEPOLYMER_RESOURCES          FOR ROWS WHERE FHIRAPP.SUBSTANCEPOLYMER_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.SUBSTANCEPOLYMER_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.SUBSTANCEPOLYMER_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_SUBSTANCEPOLYMER_STR_VALUES_RPS ON FHIRAPP.SUBSTANCEPOLYMER_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

CREATE INDEX FHIRAPP.IDX_SUBSTANCEPOLYMER_STR_VALUES_PLR ON FHIRAPP.SUBSTANCEPOLYMER_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SUBSTANCEPOLYMER_STR_VALUES_PSR ON FHIRAPP.SUBSTANCEPOLYMER_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SUBSTANCEPOLYMER_STR_VALUES_RPL ON FHIRAPP.SUBSTANCEPOLYMER_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

ALTER TABLE FHIRAPP.SUBSTANCEPOLYMER_STR_VALUES ADD CONSTRAINT FK_SUBSTANCEPOLYMER_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.SUBSTANCEPOLYMER_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.SUBSTANCEPOLYMER_STR_VALUES ADD CONSTRAINT FK_SUBSTANCEPOLYMER_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.SUBSTANCEPOLYMER_STR_VALUES_TENANT                      ON FHIRAPP.SUBSTANCEPOLYMER_STR_VALUES          FOR ROWS WHERE FHIRAPP.SUBSTANCEPOLYMER_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.SUBSTANCEPOLYMER_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.SUBSTANCEPOLYMER_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_SUBSTANCEPOLYMER_TOKEN_VALUES_PNCSCV ON FHIRAPP.SUBSTANCEPOLYMER_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SUBSTANCEPOLYMER_TOKEN_VALUES_RPS ON FHIRAPP.SUBSTANCEPOLYMER_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

ALTER TABLE FHIRAPP.SUBSTANCEPOLYMER_TOKEN_VALUES ADD CONSTRAINT FK_SUBSTANCEPOLYMER_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

ALTER TABLE FHIRAPP.SUBSTANCEPOLYMER_TOKEN_VALUES ADD CONSTRAINT FK_SUBSTANCEPOLYMER_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.SUBSTANCEPOLYMER_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.SUBSTANCEPOLYMER_TOKEN_VALUES ADD CONSTRAINT FK_SUBSTANCEPOLYMER_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.SUBSTANCEPOLYMER_TOKEN_VALUES_TENANT                      ON FHIRAPP.SUBSTANCEPOLYMER_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.SUBSTANCEPOLYMER_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.SUBSTANCEPOLYMER_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.SUBSTANCEPOLYMER_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_SUBSTANCEPOLYMER_DATE_VALUES_PSER ON FHIRAPP.SUBSTANCEPOLYMER_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SUBSTANCEPOLYMER_DATE_VALUES_PESR ON FHIRAPP.SUBSTANCEPOLYMER_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SUBSTANCEPOLYMER_DATE_VALUES_RPV ON FHIRAPP.SUBSTANCEPOLYMER_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

CREATE INDEX FHIRAPP.IDX_SUBSTANCEPOLYMER_DATE_VALUES_RPSE ON FHIRAPP.SUBSTANCEPOLYMER_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

CREATE INDEX FHIRAPP.IDX_SUBSTANCEPOLYMER_DATE_VALUES_PVR ON FHIRAPP.SUBSTANCEPOLYMER_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.SUBSTANCEPOLYMER_DATE_VALUES ADD CONSTRAINT FK_SUBSTANCEPOLYMER_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.SUBSTANCEPOLYMER_DATE_VALUES ADD CONSTRAINT FK_SUBSTANCEPOLYMER_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.SUBSTANCEPOLYMER_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.SUBSTANCEPOLYMER_DATE_VALUES_TENANT                      ON FHIRAPP.SUBSTANCEPOLYMER_DATE_VALUES          FOR ROWS WHERE FHIRAPP.SUBSTANCEPOLYMER_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.SUBSTANCEPOLYMER_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.SUBSTANCEPOLYMER_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_SUBSTANCEPOLYMER_NUMBER_VALUES_RPS ON FHIRAPP.SUBSTANCEPOLYMER_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

CREATE INDEX FHIRAPP.IDX_SUBSTANCEPOLYMER_NUMBER_VALUES_PNNV ON FHIRAPP.SUBSTANCEPOLYMER_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.SUBSTANCEPOLYMER_NUMBER_VALUES ADD CONSTRAINT FK_SUBSTANCEPOLYMER_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.SUBSTANCEPOLYMER_NUMBER_VALUES ADD CONSTRAINT FK_SUBSTANCEPOLYMER_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.SUBSTANCEPOLYMER_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.SUBSTANCEPOLYMER_NUMBER_VALUES_TENANT                      ON FHIRAPP.SUBSTANCEPOLYMER_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.SUBSTANCEPOLYMER_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.SUBSTANCEPOLYMER_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.SUBSTANCEPOLYMER_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_SUBSTANCEPOLYMER_LATLNG_VALUES_PNNLV ON FHIRAPP.SUBSTANCEPOLYMER_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SUBSTANCEPOLYMER_LATLNG_VALUES_RPLNG ON FHIRAPP.SUBSTANCEPOLYMER_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_SUBSTANCEPOLYMER_LATLNG_VALUES_PNNHV ON FHIRAPP.SUBSTANCEPOLYMER_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SUBSTANCEPOLYMER_LATLNG_VALUES_RPLAT ON FHIRAPP.SUBSTANCEPOLYMER_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

ALTER TABLE FHIRAPP.SUBSTANCEPOLYMER_LATLNG_VALUES ADD CONSTRAINT FK_SUBSTANCEPOLYMER_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.SUBSTANCEPOLYMER_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.SUBSTANCEPOLYMER_LATLNG_VALUES ADD CONSTRAINT FK_SUBSTANCEPOLYMER_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.SUBSTANCEPOLYMER_LATLNG_VALUES_TENANT                      ON FHIRAPP.SUBSTANCEPOLYMER_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.SUBSTANCEPOLYMER_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.SUBSTANCEPOLYMER_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.SUBSTANCEPOLYMER_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_SUBSTANCEPOLYMER_QUANTITY_VALUES_RPCHLS ON FHIRAPP.SUBSTANCEPOLYMER_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_SUBSTANCEPOLYMER_QUANTITY_VALUES_PCLHSR ON FHIRAPP.SUBSTANCEPOLYMER_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SUBSTANCEPOLYMER_QUANTITY_VALUES_PNNV ON FHIRAPP.SUBSTANCEPOLYMER_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_SUBSTANCEPOLYMER_QUANTITY_VALUES_RPS ON FHIRAPP.SUBSTANCEPOLYMER_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_SUBSTANCEPOLYMER_QUANTITY_VALUES_RPCLHS ON FHIRAPP.SUBSTANCEPOLYMER_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_SUBSTANCEPOLYMER_QUANTITY_VALUES_PCHLSR ON FHIRAPP.SUBSTANCEPOLYMER_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.SUBSTANCEPOLYMER_QUANTITY_VALUES ADD CONSTRAINT FK_SUBSTANCEPOLYMER_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.SUBSTANCEPOLYMER_QUANTITY_VALUES ADD CONSTRAINT FK_SUBSTANCEPOLYMER_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.SUBSTANCEPOLYMER_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.SUBSTANCEPOLYMER_QUANTITY_VALUES_TENANT                      ON FHIRAPP.SUBSTANCEPOLYMER_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.SUBSTANCEPOLYMER_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.SUBSTANCEPOLYMER_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.TESTREPORT_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT TESTREPORT_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.TESTREPORT_LOGICAL_RESOURCES ADD CONSTRAINT FK_TESTREPORT_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.TESTREPORT_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.TESTREPORT_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.TESTREPORT_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.TESTREPORT_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.TESTREPORT_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT TESTREPORT_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.TESTREPORT_RESOURCES_PRF_IN1 ON FHIRAPP.TESTREPORT_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.TESTREPORT_RESOURCES_TENANT                      ON FHIRAPP.TESTREPORT_RESOURCES          FOR ROWS WHERE FHIRAPP.TESTREPORT_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.TESTREPORT_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.TESTREPORT_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_TESTREPORT_STR_VALUES_PLR ON FHIRAPP.TESTREPORT_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_TESTREPORT_STR_VALUES_RPS ON FHIRAPP.TESTREPORT_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

CREATE INDEX FHIRAPP.IDX_TESTREPORT_STR_VALUES_RPL ON FHIRAPP.TESTREPORT_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

CREATE INDEX FHIRAPP.IDX_TESTREPORT_STR_VALUES_PSR ON FHIRAPP.TESTREPORT_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.TESTREPORT_STR_VALUES ADD CONSTRAINT FK_TESTREPORT_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.TESTREPORT_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.TESTREPORT_STR_VALUES ADD CONSTRAINT FK_TESTREPORT_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.TESTREPORT_STR_VALUES_TENANT                      ON FHIRAPP.TESTREPORT_STR_VALUES          FOR ROWS WHERE FHIRAPP.TESTREPORT_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.TESTREPORT_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.TESTREPORT_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_TESTREPORT_TOKEN_VALUES_RPS ON FHIRAPP.TESTREPORT_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

CREATE INDEX FHIRAPP.IDX_TESTREPORT_TOKEN_VALUES_PNCSCV ON FHIRAPP.TESTREPORT_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.TESTREPORT_TOKEN_VALUES ADD CONSTRAINT FK_TESTREPORT_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

ALTER TABLE FHIRAPP.TESTREPORT_TOKEN_VALUES ADD CONSTRAINT FK_TESTREPORT_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.TESTREPORT_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.TESTREPORT_TOKEN_VALUES ADD CONSTRAINT FK_TESTREPORT_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.TESTREPORT_TOKEN_VALUES_TENANT                      ON FHIRAPP.TESTREPORT_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.TESTREPORT_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.TESTREPORT_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.TESTREPORT_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_TESTREPORT_DATE_VALUES_PVR ON FHIRAPP.TESTREPORT_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_TESTREPORT_DATE_VALUES_PESR ON FHIRAPP.TESTREPORT_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_TESTREPORT_DATE_VALUES_RPSE ON FHIRAPP.TESTREPORT_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

CREATE INDEX FHIRAPP.IDX_TESTREPORT_DATE_VALUES_PSER ON FHIRAPP.TESTREPORT_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_TESTREPORT_DATE_VALUES_RPV ON FHIRAPP.TESTREPORT_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

ALTER TABLE FHIRAPP.TESTREPORT_DATE_VALUES ADD CONSTRAINT FK_TESTREPORT_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.TESTREPORT_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.TESTREPORT_DATE_VALUES ADD CONSTRAINT FK_TESTREPORT_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.TESTREPORT_DATE_VALUES_TENANT                      ON FHIRAPP.TESTREPORT_DATE_VALUES          FOR ROWS WHERE FHIRAPP.TESTREPORT_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.TESTREPORT_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.TESTREPORT_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_TESTREPORT_NUMBER_VALUES_PNNV ON FHIRAPP.TESTREPORT_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_TESTREPORT_NUMBER_VALUES_RPS ON FHIRAPP.TESTREPORT_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

ALTER TABLE FHIRAPP.TESTREPORT_NUMBER_VALUES ADD CONSTRAINT FK_TESTREPORT_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.TESTREPORT_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.TESTREPORT_NUMBER_VALUES ADD CONSTRAINT FK_TESTREPORT_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.TESTREPORT_NUMBER_VALUES_TENANT                      ON FHIRAPP.TESTREPORT_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.TESTREPORT_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.TESTREPORT_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.TESTREPORT_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_TESTREPORT_LATLNG_VALUES_PNNHV ON FHIRAPP.TESTREPORT_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_TESTREPORT_LATLNG_VALUES_RPLNG ON FHIRAPP.TESTREPORT_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_TESTREPORT_LATLNG_VALUES_RPLAT ON FHIRAPP.TESTREPORT_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_TESTREPORT_LATLNG_VALUES_PNNLV ON FHIRAPP.TESTREPORT_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.TESTREPORT_LATLNG_VALUES ADD CONSTRAINT FK_TESTREPORT_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.TESTREPORT_LATLNG_VALUES ADD CONSTRAINT FK_TESTREPORT_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.TESTREPORT_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.TESTREPORT_LATLNG_VALUES_TENANT                      ON FHIRAPP.TESTREPORT_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.TESTREPORT_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.TESTREPORT_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.TESTREPORT_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_TESTREPORT_QUANTITY_VALUES_RPCLHS ON FHIRAPP.TESTREPORT_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_TESTREPORT_QUANTITY_VALUES_RPCHLS ON FHIRAPP.TESTREPORT_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_TESTREPORT_QUANTITY_VALUES_RPS ON FHIRAPP.TESTREPORT_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_TESTREPORT_QUANTITY_VALUES_PCHLSR ON FHIRAPP.TESTREPORT_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_TESTREPORT_QUANTITY_VALUES_PNNV ON FHIRAPP.TESTREPORT_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_TESTREPORT_QUANTITY_VALUES_PCLHSR ON FHIRAPP.TESTREPORT_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.TESTREPORT_QUANTITY_VALUES ADD CONSTRAINT FK_TESTREPORT_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.TESTREPORT_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.TESTREPORT_QUANTITY_VALUES ADD CONSTRAINT FK_TESTREPORT_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.TESTREPORT_QUANTITY_VALUES_TENANT                      ON FHIRAPP.TESTREPORT_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.TESTREPORT_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.TESTREPORT_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.CLAIMRESPONSE_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT CLAIMRESPONSE_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.CLAIMRESPONSE_LOGICAL_RESOURCES ADD CONSTRAINT FK_CLAIMRESPONSE_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.CLAIMRESPONSE_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.CLAIMRESPONSE_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.CLAIMRESPONSE_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.CLAIMRESPONSE_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.CLAIMRESPONSE_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT CLAIMRESPONSE_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.CLAIMRESPONSE_RESOURCES_PRF_IN1 ON FHIRAPP.CLAIMRESPONSE_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.CLAIMRESPONSE_RESOURCES_TENANT                      ON FHIRAPP.CLAIMRESPONSE_RESOURCES          FOR ROWS WHERE FHIRAPP.CLAIMRESPONSE_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.CLAIMRESPONSE_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.CLAIMRESPONSE_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_CLAIMRESPONSE_STR_VALUES_PLR ON FHIRAPP.CLAIMRESPONSE_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_CLAIMRESPONSE_STR_VALUES_RPS ON FHIRAPP.CLAIMRESPONSE_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

CREATE INDEX FHIRAPP.IDX_CLAIMRESPONSE_STR_VALUES_RPL ON FHIRAPP.CLAIMRESPONSE_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

CREATE INDEX FHIRAPP.IDX_CLAIMRESPONSE_STR_VALUES_PSR ON FHIRAPP.CLAIMRESPONSE_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.CLAIMRESPONSE_STR_VALUES ADD CONSTRAINT FK_CLAIMRESPONSE_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.CLAIMRESPONSE_STR_VALUES ADD CONSTRAINT FK_CLAIMRESPONSE_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.CLAIMRESPONSE_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.CLAIMRESPONSE_STR_VALUES_TENANT                      ON FHIRAPP.CLAIMRESPONSE_STR_VALUES          FOR ROWS WHERE FHIRAPP.CLAIMRESPONSE_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.CLAIMRESPONSE_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.CLAIMRESPONSE_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_CLAIMRESPONSE_TOKEN_VALUES_PNCSCV ON FHIRAPP.CLAIMRESPONSE_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_CLAIMRESPONSE_TOKEN_VALUES_RPS ON FHIRAPP.CLAIMRESPONSE_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

ALTER TABLE FHIRAPP.CLAIMRESPONSE_TOKEN_VALUES ADD CONSTRAINT FK_CLAIMRESPONSE_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

ALTER TABLE FHIRAPP.CLAIMRESPONSE_TOKEN_VALUES ADD CONSTRAINT FK_CLAIMRESPONSE_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.CLAIMRESPONSE_TOKEN_VALUES ADD CONSTRAINT FK_CLAIMRESPONSE_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.CLAIMRESPONSE_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.CLAIMRESPONSE_TOKEN_VALUES_TENANT                      ON FHIRAPP.CLAIMRESPONSE_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.CLAIMRESPONSE_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.CLAIMRESPONSE_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.CLAIMRESPONSE_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_CLAIMRESPONSE_DATE_VALUES_PSER ON FHIRAPP.CLAIMRESPONSE_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_CLAIMRESPONSE_DATE_VALUES_RPV ON FHIRAPP.CLAIMRESPONSE_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

CREATE INDEX FHIRAPP.IDX_CLAIMRESPONSE_DATE_VALUES_RPSE ON FHIRAPP.CLAIMRESPONSE_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

CREATE INDEX FHIRAPP.IDX_CLAIMRESPONSE_DATE_VALUES_PESR ON FHIRAPP.CLAIMRESPONSE_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_CLAIMRESPONSE_DATE_VALUES_PVR ON FHIRAPP.CLAIMRESPONSE_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.CLAIMRESPONSE_DATE_VALUES ADD CONSTRAINT FK_CLAIMRESPONSE_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.CLAIMRESPONSE_DATE_VALUES ADD CONSTRAINT FK_CLAIMRESPONSE_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.CLAIMRESPONSE_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.CLAIMRESPONSE_DATE_VALUES_TENANT                      ON FHIRAPP.CLAIMRESPONSE_DATE_VALUES          FOR ROWS WHERE FHIRAPP.CLAIMRESPONSE_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.CLAIMRESPONSE_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.CLAIMRESPONSE_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_CLAIMRESPONSE_NUMBER_VALUES_PNNV ON FHIRAPP.CLAIMRESPONSE_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_CLAIMRESPONSE_NUMBER_VALUES_RPS ON FHIRAPP.CLAIMRESPONSE_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

ALTER TABLE FHIRAPP.CLAIMRESPONSE_NUMBER_VALUES ADD CONSTRAINT FK_CLAIMRESPONSE_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.CLAIMRESPONSE_NUMBER_VALUES ADD CONSTRAINT FK_CLAIMRESPONSE_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.CLAIMRESPONSE_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.CLAIMRESPONSE_NUMBER_VALUES_TENANT                      ON FHIRAPP.CLAIMRESPONSE_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.CLAIMRESPONSE_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.CLAIMRESPONSE_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.CLAIMRESPONSE_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_CLAIMRESPONSE_LATLNG_VALUES_RPLAT ON FHIRAPP.CLAIMRESPONSE_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_CLAIMRESPONSE_LATLNG_VALUES_RPLNG ON FHIRAPP.CLAIMRESPONSE_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_CLAIMRESPONSE_LATLNG_VALUES_PNNHV ON FHIRAPP.CLAIMRESPONSE_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_CLAIMRESPONSE_LATLNG_VALUES_PNNLV ON FHIRAPP.CLAIMRESPONSE_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.CLAIMRESPONSE_LATLNG_VALUES ADD CONSTRAINT FK_CLAIMRESPONSE_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.CLAIMRESPONSE_LATLNG_VALUES ADD CONSTRAINT FK_CLAIMRESPONSE_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.CLAIMRESPONSE_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.CLAIMRESPONSE_LATLNG_VALUES_TENANT                      ON FHIRAPP.CLAIMRESPONSE_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.CLAIMRESPONSE_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.CLAIMRESPONSE_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.CLAIMRESPONSE_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_CLAIMRESPONSE_QUANTITY_VALUES_RPCLHS ON FHIRAPP.CLAIMRESPONSE_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_CLAIMRESPONSE_QUANTITY_VALUES_PCLHSR ON FHIRAPP.CLAIMRESPONSE_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_CLAIMRESPONSE_QUANTITY_VALUES_RPS ON FHIRAPP.CLAIMRESPONSE_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_CLAIMRESPONSE_QUANTITY_VALUES_PNNV ON FHIRAPP.CLAIMRESPONSE_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_CLAIMRESPONSE_QUANTITY_VALUES_RPCHLS ON FHIRAPP.CLAIMRESPONSE_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_CLAIMRESPONSE_QUANTITY_VALUES_PCHLSR ON FHIRAPP.CLAIMRESPONSE_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.CLAIMRESPONSE_QUANTITY_VALUES ADD CONSTRAINT FK_CLAIMRESPONSE_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.CLAIMRESPONSE_QUANTITY_VALUES ADD CONSTRAINT FK_CLAIMRESPONSE_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.CLAIMRESPONSE_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.CLAIMRESPONSE_QUANTITY_VALUES_TENANT                      ON FHIRAPP.CLAIMRESPONSE_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.CLAIMRESPONSE_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.CLAIMRESPONSE_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDICATIONDISPENSE_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT MEDICATIONDISPENSE_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.MEDICATIONDISPENSE_LOGICAL_RESOURCES ADD CONSTRAINT FK_MEDICATIONDISPENSE_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.MEDICATIONDISPENSE_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.MEDICATIONDISPENSE_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.MEDICATIONDISPENSE_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDICATIONDISPENSE_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDICATIONDISPENSE_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT MEDICATIONDISPENSE_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.MEDICATIONDISPENSE_RESOURCES_PRF_IN1 ON FHIRAPP.MEDICATIONDISPENSE_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.MEDICATIONDISPENSE_RESOURCES_TENANT                      ON FHIRAPP.MEDICATIONDISPENSE_RESOURCES          FOR ROWS WHERE FHIRAPP.MEDICATIONDISPENSE_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDICATIONDISPENSE_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDICATIONDISPENSE_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_MEDICATIONDISPENSE_STR_VALUES_RPL ON FHIRAPP.MEDICATIONDISPENSE_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

CREATE INDEX FHIRAPP.IDX_MEDICATIONDISPENSE_STR_VALUES_PSR ON FHIRAPP.MEDICATIONDISPENSE_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEDICATIONDISPENSE_STR_VALUES_RPS ON FHIRAPP.MEDICATIONDISPENSE_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

CREATE INDEX FHIRAPP.IDX_MEDICATIONDISPENSE_STR_VALUES_PLR ON FHIRAPP.MEDICATIONDISPENSE_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.MEDICATIONDISPENSE_STR_VALUES ADD CONSTRAINT FK_MEDICATIONDISPENSE_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.MEDICATIONDISPENSE_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.MEDICATIONDISPENSE_STR_VALUES ADD CONSTRAINT FK_MEDICATIONDISPENSE_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.MEDICATIONDISPENSE_STR_VALUES_TENANT                      ON FHIRAPP.MEDICATIONDISPENSE_STR_VALUES          FOR ROWS WHERE FHIRAPP.MEDICATIONDISPENSE_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDICATIONDISPENSE_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDICATIONDISPENSE_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_MEDICATIONDISPENSE_TOKEN_VALUES_RPS ON FHIRAPP.MEDICATIONDISPENSE_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

CREATE INDEX FHIRAPP.IDX_MEDICATIONDISPENSE_TOKEN_VALUES_PNCSCV ON FHIRAPP.MEDICATIONDISPENSE_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.MEDICATIONDISPENSE_TOKEN_VALUES ADD CONSTRAINT FK_MEDICATIONDISPENSE_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.MEDICATIONDISPENSE_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.MEDICATIONDISPENSE_TOKEN_VALUES ADD CONSTRAINT FK_MEDICATIONDISPENSE_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.MEDICATIONDISPENSE_TOKEN_VALUES ADD CONSTRAINT FK_MEDICATIONDISPENSE_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

CREATE PERMISSION FHIRAPP.MEDICATIONDISPENSE_TOKEN_VALUES_TENANT                      ON FHIRAPP.MEDICATIONDISPENSE_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.MEDICATIONDISPENSE_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDICATIONDISPENSE_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDICATIONDISPENSE_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_MEDICATIONDISPENSE_DATE_VALUES_PESR ON FHIRAPP.MEDICATIONDISPENSE_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEDICATIONDISPENSE_DATE_VALUES_RPV ON FHIRAPP.MEDICATIONDISPENSE_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

CREATE INDEX FHIRAPP.IDX_MEDICATIONDISPENSE_DATE_VALUES_PVR ON FHIRAPP.MEDICATIONDISPENSE_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEDICATIONDISPENSE_DATE_VALUES_PSER ON FHIRAPP.MEDICATIONDISPENSE_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEDICATIONDISPENSE_DATE_VALUES_RPSE ON FHIRAPP.MEDICATIONDISPENSE_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

ALTER TABLE FHIRAPP.MEDICATIONDISPENSE_DATE_VALUES ADD CONSTRAINT FK_MEDICATIONDISPENSE_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.MEDICATIONDISPENSE_DATE_VALUES ADD CONSTRAINT FK_MEDICATIONDISPENSE_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.MEDICATIONDISPENSE_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.MEDICATIONDISPENSE_DATE_VALUES_TENANT                      ON FHIRAPP.MEDICATIONDISPENSE_DATE_VALUES          FOR ROWS WHERE FHIRAPP.MEDICATIONDISPENSE_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDICATIONDISPENSE_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDICATIONDISPENSE_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_MEDICATIONDISPENSE_NUMBER_VALUES_PNNV ON FHIRAPP.MEDICATIONDISPENSE_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEDICATIONDISPENSE_NUMBER_VALUES_RPS ON FHIRAPP.MEDICATIONDISPENSE_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

ALTER TABLE FHIRAPP.MEDICATIONDISPENSE_NUMBER_VALUES ADD CONSTRAINT FK_MEDICATIONDISPENSE_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.MEDICATIONDISPENSE_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.MEDICATIONDISPENSE_NUMBER_VALUES ADD CONSTRAINT FK_MEDICATIONDISPENSE_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.MEDICATIONDISPENSE_NUMBER_VALUES_TENANT                      ON FHIRAPP.MEDICATIONDISPENSE_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.MEDICATIONDISPENSE_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDICATIONDISPENSE_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDICATIONDISPENSE_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_MEDICATIONDISPENSE_LATLNG_VALUES_RPLNG ON FHIRAPP.MEDICATIONDISPENSE_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_MEDICATIONDISPENSE_LATLNG_VALUES_PNNLV ON FHIRAPP.MEDICATIONDISPENSE_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEDICATIONDISPENSE_LATLNG_VALUES_PNNHV ON FHIRAPP.MEDICATIONDISPENSE_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEDICATIONDISPENSE_LATLNG_VALUES_RPLAT ON FHIRAPP.MEDICATIONDISPENSE_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

ALTER TABLE FHIRAPP.MEDICATIONDISPENSE_LATLNG_VALUES ADD CONSTRAINT FK_MEDICATIONDISPENSE_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.MEDICATIONDISPENSE_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.MEDICATIONDISPENSE_LATLNG_VALUES ADD CONSTRAINT FK_MEDICATIONDISPENSE_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.MEDICATIONDISPENSE_LATLNG_VALUES_TENANT                      ON FHIRAPP.MEDICATIONDISPENSE_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.MEDICATIONDISPENSE_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDICATIONDISPENSE_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDICATIONDISPENSE_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_MEDICATIONDISPENSE_QUANTITY_VALUES_PNNV ON FHIRAPP.MEDICATIONDISPENSE_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_MEDICATIONDISPENSE_QUANTITY_VALUES_PCHLSR ON FHIRAPP.MEDICATIONDISPENSE_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEDICATIONDISPENSE_QUANTITY_VALUES_RPCHLS ON FHIRAPP.MEDICATIONDISPENSE_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_MEDICATIONDISPENSE_QUANTITY_VALUES_PCLHSR ON FHIRAPP.MEDICATIONDISPENSE_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEDICATIONDISPENSE_QUANTITY_VALUES_RPCLHS ON FHIRAPP.MEDICATIONDISPENSE_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_MEDICATIONDISPENSE_QUANTITY_VALUES_RPS ON FHIRAPP.MEDICATIONDISPENSE_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

ALTER TABLE FHIRAPP.MEDICATIONDISPENSE_QUANTITY_VALUES ADD CONSTRAINT FK_MEDICATIONDISPENSE_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.MEDICATIONDISPENSE_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.MEDICATIONDISPENSE_QUANTITY_VALUES ADD CONSTRAINT FK_MEDICATIONDISPENSE_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.MEDICATIONDISPENSE_QUANTITY_VALUES_TENANT                      ON FHIRAPP.MEDICATIONDISPENSE_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.MEDICATIONDISPENSE_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDICATIONDISPENSE_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.DIAGNOSTICREPORT_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT DIAGNOSTICREPORT_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.DIAGNOSTICREPORT_LOGICAL_RESOURCES ADD CONSTRAINT FK_DIAGNOSTICREPORT_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.DIAGNOSTICREPORT_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.DIAGNOSTICREPORT_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.DIAGNOSTICREPORT_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.DIAGNOSTICREPORT_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.DIAGNOSTICREPORT_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT DIAGNOSTICREPORT_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.DIAGNOSTICREPORT_RESOURCES_PRF_IN1 ON FHIRAPP.DIAGNOSTICREPORT_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.DIAGNOSTICREPORT_RESOURCES_TENANT                      ON FHIRAPP.DIAGNOSTICREPORT_RESOURCES          FOR ROWS WHERE FHIRAPP.DIAGNOSTICREPORT_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.DIAGNOSTICREPORT_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.DIAGNOSTICREPORT_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_DIAGNOSTICREPORT_STR_VALUES_PLR ON FHIRAPP.DIAGNOSTICREPORT_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_DIAGNOSTICREPORT_STR_VALUES_RPS ON FHIRAPP.DIAGNOSTICREPORT_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

CREATE INDEX FHIRAPP.IDX_DIAGNOSTICREPORT_STR_VALUES_RPL ON FHIRAPP.DIAGNOSTICREPORT_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

CREATE INDEX FHIRAPP.IDX_DIAGNOSTICREPORT_STR_VALUES_PSR ON FHIRAPP.DIAGNOSTICREPORT_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.DIAGNOSTICREPORT_STR_VALUES ADD CONSTRAINT FK_DIAGNOSTICREPORT_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.DIAGNOSTICREPORT_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.DIAGNOSTICREPORT_STR_VALUES ADD CONSTRAINT FK_DIAGNOSTICREPORT_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.DIAGNOSTICREPORT_STR_VALUES_TENANT                      ON FHIRAPP.DIAGNOSTICREPORT_STR_VALUES          FOR ROWS WHERE FHIRAPP.DIAGNOSTICREPORT_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.DIAGNOSTICREPORT_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.DIAGNOSTICREPORT_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_DIAGNOSTICREPORT_TOKEN_VALUES_RPS ON FHIRAPP.DIAGNOSTICREPORT_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

CREATE INDEX FHIRAPP.IDX_DIAGNOSTICREPORT_TOKEN_VALUES_PNCSCV ON FHIRAPP.DIAGNOSTICREPORT_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.DIAGNOSTICREPORT_TOKEN_VALUES ADD CONSTRAINT FK_DIAGNOSTICREPORT_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.DIAGNOSTICREPORT_TOKEN_VALUES ADD CONSTRAINT FK_DIAGNOSTICREPORT_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

ALTER TABLE FHIRAPP.DIAGNOSTICREPORT_TOKEN_VALUES ADD CONSTRAINT FK_DIAGNOSTICREPORT_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.DIAGNOSTICREPORT_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.DIAGNOSTICREPORT_TOKEN_VALUES_TENANT                      ON FHIRAPP.DIAGNOSTICREPORT_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.DIAGNOSTICREPORT_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.DIAGNOSTICREPORT_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.DIAGNOSTICREPORT_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_DIAGNOSTICREPORT_DATE_VALUES_PSER ON FHIRAPP.DIAGNOSTICREPORT_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_DIAGNOSTICREPORT_DATE_VALUES_RPSE ON FHIRAPP.DIAGNOSTICREPORT_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

CREATE INDEX FHIRAPP.IDX_DIAGNOSTICREPORT_DATE_VALUES_RPV ON FHIRAPP.DIAGNOSTICREPORT_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

CREATE INDEX FHIRAPP.IDX_DIAGNOSTICREPORT_DATE_VALUES_PVR ON FHIRAPP.DIAGNOSTICREPORT_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_DIAGNOSTICREPORT_DATE_VALUES_PESR ON FHIRAPP.DIAGNOSTICREPORT_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.DIAGNOSTICREPORT_DATE_VALUES ADD CONSTRAINT FK_DIAGNOSTICREPORT_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.DIAGNOSTICREPORT_DATE_VALUES ADD CONSTRAINT FK_DIAGNOSTICREPORT_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.DIAGNOSTICREPORT_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.DIAGNOSTICREPORT_DATE_VALUES_TENANT                      ON FHIRAPP.DIAGNOSTICREPORT_DATE_VALUES          FOR ROWS WHERE FHIRAPP.DIAGNOSTICREPORT_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.DIAGNOSTICREPORT_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.DIAGNOSTICREPORT_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_DIAGNOSTICREPORT_NUMBER_VALUES_PNNV ON FHIRAPP.DIAGNOSTICREPORT_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_DIAGNOSTICREPORT_NUMBER_VALUES_RPS ON FHIRAPP.DIAGNOSTICREPORT_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

ALTER TABLE FHIRAPP.DIAGNOSTICREPORT_NUMBER_VALUES ADD CONSTRAINT FK_DIAGNOSTICREPORT_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.DIAGNOSTICREPORT_NUMBER_VALUES ADD CONSTRAINT FK_DIAGNOSTICREPORT_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.DIAGNOSTICREPORT_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.DIAGNOSTICREPORT_NUMBER_VALUES_TENANT                      ON FHIRAPP.DIAGNOSTICREPORT_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.DIAGNOSTICREPORT_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.DIAGNOSTICREPORT_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.DIAGNOSTICREPORT_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_DIAGNOSTICREPORT_LATLNG_VALUES_RPLAT ON FHIRAPP.DIAGNOSTICREPORT_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_DIAGNOSTICREPORT_LATLNG_VALUES_PNNLV ON FHIRAPP.DIAGNOSTICREPORT_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_DIAGNOSTICREPORT_LATLNG_VALUES_PNNHV ON FHIRAPP.DIAGNOSTICREPORT_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_DIAGNOSTICREPORT_LATLNG_VALUES_RPLNG ON FHIRAPP.DIAGNOSTICREPORT_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

ALTER TABLE FHIRAPP.DIAGNOSTICREPORT_LATLNG_VALUES ADD CONSTRAINT FK_DIAGNOSTICREPORT_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.DIAGNOSTICREPORT_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.DIAGNOSTICREPORT_LATLNG_VALUES ADD CONSTRAINT FK_DIAGNOSTICREPORT_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.DIAGNOSTICREPORT_LATLNG_VALUES_TENANT                      ON FHIRAPP.DIAGNOSTICREPORT_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.DIAGNOSTICREPORT_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.DIAGNOSTICREPORT_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.DIAGNOSTICREPORT_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_DIAGNOSTICREPORT_QUANTITY_VALUES_PNNV ON FHIRAPP.DIAGNOSTICREPORT_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_DIAGNOSTICREPORT_QUANTITY_VALUES_RPCLHS ON FHIRAPP.DIAGNOSTICREPORT_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_DIAGNOSTICREPORT_QUANTITY_VALUES_PCLHSR ON FHIRAPP.DIAGNOSTICREPORT_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_DIAGNOSTICREPORT_QUANTITY_VALUES_RPS ON FHIRAPP.DIAGNOSTICREPORT_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_DIAGNOSTICREPORT_QUANTITY_VALUES_RPCHLS ON FHIRAPP.DIAGNOSTICREPORT_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_DIAGNOSTICREPORT_QUANTITY_VALUES_PCHLSR ON FHIRAPP.DIAGNOSTICREPORT_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.DIAGNOSTICREPORT_QUANTITY_VALUES ADD CONSTRAINT FK_DIAGNOSTICREPORT_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.DIAGNOSTICREPORT_QUANTITY_VALUES ADD CONSTRAINT FK_DIAGNOSTICREPORT_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.DIAGNOSTICREPORT_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.DIAGNOSTICREPORT_QUANTITY_VALUES_TENANT                      ON FHIRAPP.DIAGNOSTICREPORT_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.DIAGNOSTICREPORT_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.DIAGNOSTICREPORT_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.ORGANIZATIONAFFILIATION_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT ORGANIZATIONAFFILIATION_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.ORGANIZATIONAFFILIATION_LOGICAL_RESOURCES ADD CONSTRAINT FK_ORGANIZATIONAFFILIATION_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.ORGANIZATIONAFFILIATION_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.ORGANIZATIONAFFILIATION_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.ORGANIZATIONAFFILIATION_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.ORGANIZATIONAFFILIATION_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.ORGANIZATIONAFFILIATION_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT ORGANIZATIONAFFILIATION_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.ORGANIZATIONAFFILIATION_RESOURCES_PRF_IN1 ON FHIRAPP.ORGANIZATIONAFFILIATION_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.ORGANIZATIONAFFILIATION_RESOURCES_TENANT                      ON FHIRAPP.ORGANIZATIONAFFILIATION_RESOURCES          FOR ROWS WHERE FHIRAPP.ORGANIZATIONAFFILIATION_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.ORGANIZATIONAFFILIATION_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.ORGANIZATIONAFFILIATION_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_ORGANIZATIONAFFILIATION_STR_VALUES_RPL ON FHIRAPP.ORGANIZATIONAFFILIATION_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

CREATE INDEX FHIRAPP.IDX_ORGANIZATIONAFFILIATION_STR_VALUES_PSR ON FHIRAPP.ORGANIZATIONAFFILIATION_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_ORGANIZATIONAFFILIATION_STR_VALUES_RPS ON FHIRAPP.ORGANIZATIONAFFILIATION_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

CREATE INDEX FHIRAPP.IDX_ORGANIZATIONAFFILIATION_STR_VALUES_PLR ON FHIRAPP.ORGANIZATIONAFFILIATION_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.ORGANIZATIONAFFILIATION_STR_VALUES ADD CONSTRAINT FK_ORGANIZATIONAFFILIATION_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.ORGANIZATIONAFFILIATION_STR_VALUES ADD CONSTRAINT FK_ORGANIZATIONAFFILIATION_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.ORGANIZATIONAFFILIATION_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.ORGANIZATIONAFFILIATION_STR_VALUES_TENANT                      ON FHIRAPP.ORGANIZATIONAFFILIATION_STR_VALUES          FOR ROWS WHERE FHIRAPP.ORGANIZATIONAFFILIATION_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.ORGANIZATIONAFFILIATION_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.ORGANIZATIONAFFILIATION_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_ORGANIZATIONAFFILIATION_TOKEN_VALUES_PNCSCV ON FHIRAPP.ORGANIZATIONAFFILIATION_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_ORGANIZATIONAFFILIATION_TOKEN_VALUES_RPS ON FHIRAPP.ORGANIZATIONAFFILIATION_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

ALTER TABLE FHIRAPP.ORGANIZATIONAFFILIATION_TOKEN_VALUES ADD CONSTRAINT FK_ORGANIZATIONAFFILIATION_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.ORGANIZATIONAFFILIATION_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.ORGANIZATIONAFFILIATION_TOKEN_VALUES ADD CONSTRAINT FK_ORGANIZATIONAFFILIATION_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

ALTER TABLE FHIRAPP.ORGANIZATIONAFFILIATION_TOKEN_VALUES ADD CONSTRAINT FK_ORGANIZATIONAFFILIATION_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.ORGANIZATIONAFFILIATION_TOKEN_VALUES_TENANT                      ON FHIRAPP.ORGANIZATIONAFFILIATION_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.ORGANIZATIONAFFILIATION_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.ORGANIZATIONAFFILIATION_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.ORGANIZATIONAFFILIATION_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_ORGANIZATIONAFFILIATION_DATE_VALUES_PSER ON FHIRAPP.ORGANIZATIONAFFILIATION_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_ORGANIZATIONAFFILIATION_DATE_VALUES_RPSE ON FHIRAPP.ORGANIZATIONAFFILIATION_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

CREATE INDEX FHIRAPP.IDX_ORGANIZATIONAFFILIATION_DATE_VALUES_PESR ON FHIRAPP.ORGANIZATIONAFFILIATION_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_ORGANIZATIONAFFILIATION_DATE_VALUES_PVR ON FHIRAPP.ORGANIZATIONAFFILIATION_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_ORGANIZATIONAFFILIATION_DATE_VALUES_RPV ON FHIRAPP.ORGANIZATIONAFFILIATION_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

ALTER TABLE FHIRAPP.ORGANIZATIONAFFILIATION_DATE_VALUES ADD CONSTRAINT FK_ORGANIZATIONAFFILIATION_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.ORGANIZATIONAFFILIATION_DATE_VALUES ADD CONSTRAINT FK_ORGANIZATIONAFFILIATION_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.ORGANIZATIONAFFILIATION_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.ORGANIZATIONAFFILIATION_DATE_VALUES_TENANT                      ON FHIRAPP.ORGANIZATIONAFFILIATION_DATE_VALUES          FOR ROWS WHERE FHIRAPP.ORGANIZATIONAFFILIATION_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.ORGANIZATIONAFFILIATION_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.ORGANIZATIONAFFILIATION_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_ORGANIZATIONAFFILIATION_NUMBER_VALUES_PNNV ON FHIRAPP.ORGANIZATIONAFFILIATION_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_ORGANIZATIONAFFILIATION_NUMBER_VALUES_RPS ON FHIRAPP.ORGANIZATIONAFFILIATION_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

ALTER TABLE FHIRAPP.ORGANIZATIONAFFILIATION_NUMBER_VALUES ADD CONSTRAINT FK_ORGANIZATIONAFFILIATION_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.ORGANIZATIONAFFILIATION_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.ORGANIZATIONAFFILIATION_NUMBER_VALUES ADD CONSTRAINT FK_ORGANIZATIONAFFILIATION_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.ORGANIZATIONAFFILIATION_NUMBER_VALUES_TENANT                      ON FHIRAPP.ORGANIZATIONAFFILIATION_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.ORGANIZATIONAFFILIATION_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.ORGANIZATIONAFFILIATION_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.ORGANIZATIONAFFILIATION_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_ORGANIZATIONAFFILIATION_LATLNG_VALUES_PNNHV ON FHIRAPP.ORGANIZATIONAFFILIATION_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_ORGANIZATIONAFFILIATION_LATLNG_VALUES_PNNLV ON FHIRAPP.ORGANIZATIONAFFILIATION_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_ORGANIZATIONAFFILIATION_LATLNG_VALUES_RPLAT ON FHIRAPP.ORGANIZATIONAFFILIATION_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_ORGANIZATIONAFFILIATION_LATLNG_VALUES_RPLNG ON FHIRAPP.ORGANIZATIONAFFILIATION_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

ALTER TABLE FHIRAPP.ORGANIZATIONAFFILIATION_LATLNG_VALUES ADD CONSTRAINT FK_ORGANIZATIONAFFILIATION_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.ORGANIZATIONAFFILIATION_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.ORGANIZATIONAFFILIATION_LATLNG_VALUES ADD CONSTRAINT FK_ORGANIZATIONAFFILIATION_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.ORGANIZATIONAFFILIATION_LATLNG_VALUES_TENANT                      ON FHIRAPP.ORGANIZATIONAFFILIATION_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.ORGANIZATIONAFFILIATION_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.ORGANIZATIONAFFILIATION_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.ORGANIZATIONAFFILIATION_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_ORGANIZATIONAFFILIATION_QUANTITY_VALUES_PNNV ON FHIRAPP.ORGANIZATIONAFFILIATION_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_ORGANIZATIONAFFILIATION_QUANTITY_VALUES_RPCLHS ON FHIRAPP.ORGANIZATIONAFFILIATION_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_ORGANIZATIONAFFILIATION_QUANTITY_VALUES_PCLHSR ON FHIRAPP.ORGANIZATIONAFFILIATION_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_ORGANIZATIONAFFILIATION_QUANTITY_VALUES_PCHLSR ON FHIRAPP.ORGANIZATIONAFFILIATION_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_ORGANIZATIONAFFILIATION_QUANTITY_VALUES_RPCHLS ON FHIRAPP.ORGANIZATIONAFFILIATION_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_ORGANIZATIONAFFILIATION_QUANTITY_VALUES_RPS ON FHIRAPP.ORGANIZATIONAFFILIATION_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

ALTER TABLE FHIRAPP.ORGANIZATIONAFFILIATION_QUANTITY_VALUES ADD CONSTRAINT FK_ORGANIZATIONAFFILIATION_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.ORGANIZATIONAFFILIATION_QUANTITY_VALUES ADD CONSTRAINT FK_ORGANIZATIONAFFILIATION_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.ORGANIZATIONAFFILIATION_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.ORGANIZATIONAFFILIATION_QUANTITY_VALUES_TENANT                      ON FHIRAPP.ORGANIZATIONAFFILIATION_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.ORGANIZATIONAFFILIATION_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.ORGANIZATIONAFFILIATION_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.HEALTHCARESERVICE_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT HEALTHCARESERVICE_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.HEALTHCARESERVICE_LOGICAL_RESOURCES ADD CONSTRAINT FK_HEALTHCARESERVICE_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.HEALTHCARESERVICE_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.HEALTHCARESERVICE_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.HEALTHCARESERVICE_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.HEALTHCARESERVICE_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.HEALTHCARESERVICE_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT HEALTHCARESERVICE_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.HEALTHCARESERVICE_RESOURCES_PRF_IN1 ON FHIRAPP.HEALTHCARESERVICE_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.HEALTHCARESERVICE_RESOURCES_TENANT                      ON FHIRAPP.HEALTHCARESERVICE_RESOURCES          FOR ROWS WHERE FHIRAPP.HEALTHCARESERVICE_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.HEALTHCARESERVICE_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.HEALTHCARESERVICE_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_HEALTHCARESERVICE_STR_VALUES_RPS ON FHIRAPP.HEALTHCARESERVICE_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

CREATE INDEX FHIRAPP.IDX_HEALTHCARESERVICE_STR_VALUES_PSR ON FHIRAPP.HEALTHCARESERVICE_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_HEALTHCARESERVICE_STR_VALUES_RPL ON FHIRAPP.HEALTHCARESERVICE_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

CREATE INDEX FHIRAPP.IDX_HEALTHCARESERVICE_STR_VALUES_PLR ON FHIRAPP.HEALTHCARESERVICE_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.HEALTHCARESERVICE_STR_VALUES ADD CONSTRAINT FK_HEALTHCARESERVICE_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.HEALTHCARESERVICE_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.HEALTHCARESERVICE_STR_VALUES ADD CONSTRAINT FK_HEALTHCARESERVICE_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.HEALTHCARESERVICE_STR_VALUES_TENANT                      ON FHIRAPP.HEALTHCARESERVICE_STR_VALUES          FOR ROWS WHERE FHIRAPP.HEALTHCARESERVICE_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.HEALTHCARESERVICE_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.HEALTHCARESERVICE_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_HEALTHCARESERVICE_TOKEN_VALUES_PNCSCV ON FHIRAPP.HEALTHCARESERVICE_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_HEALTHCARESERVICE_TOKEN_VALUES_RPS ON FHIRAPP.HEALTHCARESERVICE_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

ALTER TABLE FHIRAPP.HEALTHCARESERVICE_TOKEN_VALUES ADD CONSTRAINT FK_HEALTHCARESERVICE_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.HEALTHCARESERVICE_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.HEALTHCARESERVICE_TOKEN_VALUES ADD CONSTRAINT FK_HEALTHCARESERVICE_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

ALTER TABLE FHIRAPP.HEALTHCARESERVICE_TOKEN_VALUES ADD CONSTRAINT FK_HEALTHCARESERVICE_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.HEALTHCARESERVICE_TOKEN_VALUES_TENANT                      ON FHIRAPP.HEALTHCARESERVICE_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.HEALTHCARESERVICE_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.HEALTHCARESERVICE_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.HEALTHCARESERVICE_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_HEALTHCARESERVICE_DATE_VALUES_RPSE ON FHIRAPP.HEALTHCARESERVICE_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

CREATE INDEX FHIRAPP.IDX_HEALTHCARESERVICE_DATE_VALUES_PSER ON FHIRAPP.HEALTHCARESERVICE_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_HEALTHCARESERVICE_DATE_VALUES_PVR ON FHIRAPP.HEALTHCARESERVICE_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_HEALTHCARESERVICE_DATE_VALUES_PESR ON FHIRAPP.HEALTHCARESERVICE_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_HEALTHCARESERVICE_DATE_VALUES_RPV ON FHIRAPP.HEALTHCARESERVICE_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

ALTER TABLE FHIRAPP.HEALTHCARESERVICE_DATE_VALUES ADD CONSTRAINT FK_HEALTHCARESERVICE_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.HEALTHCARESERVICE_DATE_VALUES ADD CONSTRAINT FK_HEALTHCARESERVICE_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.HEALTHCARESERVICE_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.HEALTHCARESERVICE_DATE_VALUES_TENANT                      ON FHIRAPP.HEALTHCARESERVICE_DATE_VALUES          FOR ROWS WHERE FHIRAPP.HEALTHCARESERVICE_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.HEALTHCARESERVICE_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.HEALTHCARESERVICE_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_HEALTHCARESERVICE_NUMBER_VALUES_PNNV ON FHIRAPP.HEALTHCARESERVICE_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_HEALTHCARESERVICE_NUMBER_VALUES_RPS ON FHIRAPP.HEALTHCARESERVICE_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

ALTER TABLE FHIRAPP.HEALTHCARESERVICE_NUMBER_VALUES ADD CONSTRAINT FK_HEALTHCARESERVICE_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.HEALTHCARESERVICE_NUMBER_VALUES ADD CONSTRAINT FK_HEALTHCARESERVICE_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.HEALTHCARESERVICE_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.HEALTHCARESERVICE_NUMBER_VALUES_TENANT                      ON FHIRAPP.HEALTHCARESERVICE_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.HEALTHCARESERVICE_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.HEALTHCARESERVICE_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.HEALTHCARESERVICE_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_HEALTHCARESERVICE_LATLNG_VALUES_PNNHV ON FHIRAPP.HEALTHCARESERVICE_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_HEALTHCARESERVICE_LATLNG_VALUES_RPLNG ON FHIRAPP.HEALTHCARESERVICE_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_HEALTHCARESERVICE_LATLNG_VALUES_RPLAT ON FHIRAPP.HEALTHCARESERVICE_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_HEALTHCARESERVICE_LATLNG_VALUES_PNNLV ON FHIRAPP.HEALTHCARESERVICE_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.HEALTHCARESERVICE_LATLNG_VALUES ADD CONSTRAINT FK_HEALTHCARESERVICE_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.HEALTHCARESERVICE_LATLNG_VALUES ADD CONSTRAINT FK_HEALTHCARESERVICE_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.HEALTHCARESERVICE_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.HEALTHCARESERVICE_LATLNG_VALUES_TENANT                      ON FHIRAPP.HEALTHCARESERVICE_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.HEALTHCARESERVICE_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.HEALTHCARESERVICE_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.HEALTHCARESERVICE_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_HEALTHCARESERVICE_QUANTITY_VALUES_RPS ON FHIRAPP.HEALTHCARESERVICE_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_HEALTHCARESERVICE_QUANTITY_VALUES_PCLHSR ON FHIRAPP.HEALTHCARESERVICE_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_HEALTHCARESERVICE_QUANTITY_VALUES_PNNV ON FHIRAPP.HEALTHCARESERVICE_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_HEALTHCARESERVICE_QUANTITY_VALUES_RPCHLS ON FHIRAPP.HEALTHCARESERVICE_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_HEALTHCARESERVICE_QUANTITY_VALUES_PCHLSR ON FHIRAPP.HEALTHCARESERVICE_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_HEALTHCARESERVICE_QUANTITY_VALUES_RPCLHS ON FHIRAPP.HEALTHCARESERVICE_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

ALTER TABLE FHIRAPP.HEALTHCARESERVICE_QUANTITY_VALUES ADD CONSTRAINT FK_HEALTHCARESERVICE_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.HEALTHCARESERVICE_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.HEALTHCARESERVICE_QUANTITY_VALUES ADD CONSTRAINT FK_HEALTHCARESERVICE_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.HEALTHCARESERVICE_QUANTITY_VALUES_TENANT                      ON FHIRAPP.HEALTHCARESERVICE_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.HEALTHCARESERVICE_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.HEALTHCARESERVICE_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDICINALPRODUCTINDICATION_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT MEDICINALPRODUCTINDICATION_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.MEDICINALPRODUCTINDICATION_LOGICAL_RESOURCES ADD CONSTRAINT FK_MEDICINALPRODUCTINDICATION_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.MEDICINALPRODUCTINDICATION_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.MEDICINALPRODUCTINDICATION_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.MEDICINALPRODUCTINDICATION_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDICINALPRODUCTINDICATION_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDICINALPRODUCTINDICATION_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT MEDICINALPRODUCTINDICATION_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.MEDICINALPRODUCTINDICATION_RESOURCES_PRF_IN1 ON FHIRAPP.MEDICINALPRODUCTINDICATION_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.MEDICINALPRODUCTINDICATION_RESOURCES_TENANT                      ON FHIRAPP.MEDICINALPRODUCTINDICATION_RESOURCES          FOR ROWS WHERE FHIRAPP.MEDICINALPRODUCTINDICATION_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDICINALPRODUCTINDICATION_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDICINALPRODUCTINDICATION_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTINDICATION_STR_VALUES_RPL ON FHIRAPP.MEDICINALPRODUCTINDICATION_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTINDICATION_STR_VALUES_RPS ON FHIRAPP.MEDICINALPRODUCTINDICATION_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTINDICATION_STR_VALUES_PLR ON FHIRAPP.MEDICINALPRODUCTINDICATION_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTINDICATION_STR_VALUES_PSR ON FHIRAPP.MEDICINALPRODUCTINDICATION_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.MEDICINALPRODUCTINDICATION_STR_VALUES ADD CONSTRAINT FK_MEDICINALPRODUCTINDICATION_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.MEDICINALPRODUCTINDICATION_STR_VALUES ADD CONSTRAINT FK_MEDICINALPRODUCTINDICATION_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.MEDICINALPRODUCTINDICATION_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.MEDICINALPRODUCTINDICATION_STR_VALUES_TENANT                      ON FHIRAPP.MEDICINALPRODUCTINDICATION_STR_VALUES          FOR ROWS WHERE FHIRAPP.MEDICINALPRODUCTINDICATION_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDICINALPRODUCTINDICATION_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDICINALPRODUCTINDICATION_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTINDICATION_TOKEN_VALUES_PNCSCV ON FHIRAPP.MEDICINALPRODUCTINDICATION_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTINDICATION_TOKEN_VALUES_RPS ON FHIRAPP.MEDICINALPRODUCTINDICATION_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

ALTER TABLE FHIRAPP.MEDICINALPRODUCTINDICATION_TOKEN_VALUES ADD CONSTRAINT FK_MEDICINALPRODUCTINDICATION_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

ALTER TABLE FHIRAPP.MEDICINALPRODUCTINDICATION_TOKEN_VALUES ADD CONSTRAINT FK_MEDICINALPRODUCTINDICATION_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.MEDICINALPRODUCTINDICATION_TOKEN_VALUES ADD CONSTRAINT FK_MEDICINALPRODUCTINDICATION_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.MEDICINALPRODUCTINDICATION_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.MEDICINALPRODUCTINDICATION_TOKEN_VALUES_TENANT                      ON FHIRAPP.MEDICINALPRODUCTINDICATION_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.MEDICINALPRODUCTINDICATION_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDICINALPRODUCTINDICATION_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDICINALPRODUCTINDICATION_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTINDICATION_DATE_VALUES_PSER ON FHIRAPP.MEDICINALPRODUCTINDICATION_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTINDICATION_DATE_VALUES_RPSE ON FHIRAPP.MEDICINALPRODUCTINDICATION_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTINDICATION_DATE_VALUES_RPV ON FHIRAPP.MEDICINALPRODUCTINDICATION_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTINDICATION_DATE_VALUES_PVR ON FHIRAPP.MEDICINALPRODUCTINDICATION_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTINDICATION_DATE_VALUES_PESR ON FHIRAPP.MEDICINALPRODUCTINDICATION_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.MEDICINALPRODUCTINDICATION_DATE_VALUES ADD CONSTRAINT FK_MEDICINALPRODUCTINDICATION_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.MEDICINALPRODUCTINDICATION_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.MEDICINALPRODUCTINDICATION_DATE_VALUES ADD CONSTRAINT FK_MEDICINALPRODUCTINDICATION_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.MEDICINALPRODUCTINDICATION_DATE_VALUES_TENANT                      ON FHIRAPP.MEDICINALPRODUCTINDICATION_DATE_VALUES          FOR ROWS WHERE FHIRAPP.MEDICINALPRODUCTINDICATION_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDICINALPRODUCTINDICATION_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDICINALPRODUCTINDICATION_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTINDICATION_NUMBER_VALUES_RPS ON FHIRAPP.MEDICINALPRODUCTINDICATION_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTINDICATION_NUMBER_VALUES_PNNV ON FHIRAPP.MEDICINALPRODUCTINDICATION_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.MEDICINALPRODUCTINDICATION_NUMBER_VALUES ADD CONSTRAINT FK_MEDICINALPRODUCTINDICATION_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.MEDICINALPRODUCTINDICATION_NUMBER_VALUES ADD CONSTRAINT FK_MEDICINALPRODUCTINDICATION_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.MEDICINALPRODUCTINDICATION_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.MEDICINALPRODUCTINDICATION_NUMBER_VALUES_TENANT                      ON FHIRAPP.MEDICINALPRODUCTINDICATION_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.MEDICINALPRODUCTINDICATION_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDICINALPRODUCTINDICATION_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDICINALPRODUCTINDICATION_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTINDICATION_LATLNG_VALUES_RPLNG ON FHIRAPP.MEDICINALPRODUCTINDICATION_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTINDICATION_LATLNG_VALUES_PNNLV ON FHIRAPP.MEDICINALPRODUCTINDICATION_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTINDICATION_LATLNG_VALUES_PNNHV ON FHIRAPP.MEDICINALPRODUCTINDICATION_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTINDICATION_LATLNG_VALUES_RPLAT ON FHIRAPP.MEDICINALPRODUCTINDICATION_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

ALTER TABLE FHIRAPP.MEDICINALPRODUCTINDICATION_LATLNG_VALUES ADD CONSTRAINT FK_MEDICINALPRODUCTINDICATION_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.MEDICINALPRODUCTINDICATION_LATLNG_VALUES ADD CONSTRAINT FK_MEDICINALPRODUCTINDICATION_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.MEDICINALPRODUCTINDICATION_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.MEDICINALPRODUCTINDICATION_LATLNG_VALUES_TENANT                      ON FHIRAPP.MEDICINALPRODUCTINDICATION_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.MEDICINALPRODUCTINDICATION_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDICINALPRODUCTINDICATION_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDICINALPRODUCTINDICATION_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTINDICATION_QUANTITY_VALUES_RPCHLS ON FHIRAPP.MEDICINALPRODUCTINDICATION_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTINDICATION_QUANTITY_VALUES_PCHLSR ON FHIRAPP.MEDICINALPRODUCTINDICATION_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTINDICATION_QUANTITY_VALUES_RPS ON FHIRAPP.MEDICINALPRODUCTINDICATION_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTINDICATION_QUANTITY_VALUES_PNNV ON FHIRAPP.MEDICINALPRODUCTINDICATION_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTINDICATION_QUANTITY_VALUES_PCLHSR ON FHIRAPP.MEDICINALPRODUCTINDICATION_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTINDICATION_QUANTITY_VALUES_RPCLHS ON FHIRAPP.MEDICINALPRODUCTINDICATION_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

ALTER TABLE FHIRAPP.MEDICINALPRODUCTINDICATION_QUANTITY_VALUES ADD CONSTRAINT FK_MEDICINALPRODUCTINDICATION_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.MEDICINALPRODUCTINDICATION_QUANTITY_VALUES ADD CONSTRAINT FK_MEDICINALPRODUCTINDICATION_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.MEDICINALPRODUCTINDICATION_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.MEDICINALPRODUCTINDICATION_QUANTITY_VALUES_TENANT                      ON FHIRAPP.MEDICINALPRODUCTINDICATION_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.MEDICINALPRODUCTINDICATION_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDICINALPRODUCTINDICATION_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.NUTRITIONORDER_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT NUTRITIONORDER_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.NUTRITIONORDER_LOGICAL_RESOURCES ADD CONSTRAINT FK_NUTRITIONORDER_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.NUTRITIONORDER_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.NUTRITIONORDER_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.NUTRITIONORDER_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.NUTRITIONORDER_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.NUTRITIONORDER_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT NUTRITIONORDER_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.NUTRITIONORDER_RESOURCES_PRF_IN1 ON FHIRAPP.NUTRITIONORDER_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.NUTRITIONORDER_RESOURCES_TENANT                      ON FHIRAPP.NUTRITIONORDER_RESOURCES          FOR ROWS WHERE FHIRAPP.NUTRITIONORDER_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.NUTRITIONORDER_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.NUTRITIONORDER_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_NUTRITIONORDER_STR_VALUES_RPL ON FHIRAPP.NUTRITIONORDER_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

CREATE INDEX FHIRAPP.IDX_NUTRITIONORDER_STR_VALUES_PSR ON FHIRAPP.NUTRITIONORDER_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_NUTRITIONORDER_STR_VALUES_PLR ON FHIRAPP.NUTRITIONORDER_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_NUTRITIONORDER_STR_VALUES_RPS ON FHIRAPP.NUTRITIONORDER_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

ALTER TABLE FHIRAPP.NUTRITIONORDER_STR_VALUES ADD CONSTRAINT FK_NUTRITIONORDER_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.NUTRITIONORDER_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.NUTRITIONORDER_STR_VALUES ADD CONSTRAINT FK_NUTRITIONORDER_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.NUTRITIONORDER_STR_VALUES_TENANT                      ON FHIRAPP.NUTRITIONORDER_STR_VALUES          FOR ROWS WHERE FHIRAPP.NUTRITIONORDER_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.NUTRITIONORDER_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.NUTRITIONORDER_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_NUTRITIONORDER_TOKEN_VALUES_RPS ON FHIRAPP.NUTRITIONORDER_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

CREATE INDEX FHIRAPP.IDX_NUTRITIONORDER_TOKEN_VALUES_PNCSCV ON FHIRAPP.NUTRITIONORDER_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.NUTRITIONORDER_TOKEN_VALUES ADD CONSTRAINT FK_NUTRITIONORDER_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.NUTRITIONORDER_TOKEN_VALUES ADD CONSTRAINT FK_NUTRITIONORDER_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.NUTRITIONORDER_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.NUTRITIONORDER_TOKEN_VALUES ADD CONSTRAINT FK_NUTRITIONORDER_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

CREATE PERMISSION FHIRAPP.NUTRITIONORDER_TOKEN_VALUES_TENANT                      ON FHIRAPP.NUTRITIONORDER_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.NUTRITIONORDER_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.NUTRITIONORDER_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.NUTRITIONORDER_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_NUTRITIONORDER_DATE_VALUES_PVR ON FHIRAPP.NUTRITIONORDER_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_NUTRITIONORDER_DATE_VALUES_PESR ON FHIRAPP.NUTRITIONORDER_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_NUTRITIONORDER_DATE_VALUES_RPV ON FHIRAPP.NUTRITIONORDER_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

CREATE INDEX FHIRAPP.IDX_NUTRITIONORDER_DATE_VALUES_RPSE ON FHIRAPP.NUTRITIONORDER_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

CREATE INDEX FHIRAPP.IDX_NUTRITIONORDER_DATE_VALUES_PSER ON FHIRAPP.NUTRITIONORDER_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.NUTRITIONORDER_DATE_VALUES ADD CONSTRAINT FK_NUTRITIONORDER_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.NUTRITIONORDER_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.NUTRITIONORDER_DATE_VALUES ADD CONSTRAINT FK_NUTRITIONORDER_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.NUTRITIONORDER_DATE_VALUES_TENANT                      ON FHIRAPP.NUTRITIONORDER_DATE_VALUES          FOR ROWS WHERE FHIRAPP.NUTRITIONORDER_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.NUTRITIONORDER_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.NUTRITIONORDER_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_NUTRITIONORDER_NUMBER_VALUES_RPS ON FHIRAPP.NUTRITIONORDER_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

CREATE INDEX FHIRAPP.IDX_NUTRITIONORDER_NUMBER_VALUES_PNNV ON FHIRAPP.NUTRITIONORDER_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.NUTRITIONORDER_NUMBER_VALUES ADD CONSTRAINT FK_NUTRITIONORDER_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.NUTRITIONORDER_NUMBER_VALUES ADD CONSTRAINT FK_NUTRITIONORDER_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.NUTRITIONORDER_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.NUTRITIONORDER_NUMBER_VALUES_TENANT                      ON FHIRAPP.NUTRITIONORDER_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.NUTRITIONORDER_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.NUTRITIONORDER_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.NUTRITIONORDER_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_NUTRITIONORDER_LATLNG_VALUES_PNNHV ON FHIRAPP.NUTRITIONORDER_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_NUTRITIONORDER_LATLNG_VALUES_RPLAT ON FHIRAPP.NUTRITIONORDER_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_NUTRITIONORDER_LATLNG_VALUES_PNNLV ON FHIRAPP.NUTRITIONORDER_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_NUTRITIONORDER_LATLNG_VALUES_RPLNG ON FHIRAPP.NUTRITIONORDER_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

ALTER TABLE FHIRAPP.NUTRITIONORDER_LATLNG_VALUES ADD CONSTRAINT FK_NUTRITIONORDER_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.NUTRITIONORDER_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.NUTRITIONORDER_LATLNG_VALUES ADD CONSTRAINT FK_NUTRITIONORDER_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.NUTRITIONORDER_LATLNG_VALUES_TENANT                      ON FHIRAPP.NUTRITIONORDER_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.NUTRITIONORDER_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.NUTRITIONORDER_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.NUTRITIONORDER_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_NUTRITIONORDER_QUANTITY_VALUES_RPS ON FHIRAPP.NUTRITIONORDER_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_NUTRITIONORDER_QUANTITY_VALUES_PNNV ON FHIRAPP.NUTRITIONORDER_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_NUTRITIONORDER_QUANTITY_VALUES_RPCHLS ON FHIRAPP.NUTRITIONORDER_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_NUTRITIONORDER_QUANTITY_VALUES_PCHLSR ON FHIRAPP.NUTRITIONORDER_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_NUTRITIONORDER_QUANTITY_VALUES_RPCLHS ON FHIRAPP.NUTRITIONORDER_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_NUTRITIONORDER_QUANTITY_VALUES_PCLHSR ON FHIRAPP.NUTRITIONORDER_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.NUTRITIONORDER_QUANTITY_VALUES ADD CONSTRAINT FK_NUTRITIONORDER_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.NUTRITIONORDER_QUANTITY_VALUES ADD CONSTRAINT FK_NUTRITIONORDER_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.NUTRITIONORDER_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.NUTRITIONORDER_QUANTITY_VALUES_TENANT                      ON FHIRAPP.NUTRITIONORDER_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.NUTRITIONORDER_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.NUTRITIONORDER_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.TERMINOLOGYCAPABILITIES_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT TERMINOLOGYCAPABILITIES_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.TERMINOLOGYCAPABILITIES_LOGICAL_RESOURCES ADD CONSTRAINT FK_TERMINOLOGYCAPABILITIES_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.TERMINOLOGYCAPABILITIES_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.TERMINOLOGYCAPABILITIES_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.TERMINOLOGYCAPABILITIES_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.TERMINOLOGYCAPABILITIES_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.TERMINOLOGYCAPABILITIES_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT TERMINOLOGYCAPABILITIES_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.TERMINOLOGYCAPABILITIES_RESOURCES_PRF_IN1 ON FHIRAPP.TERMINOLOGYCAPABILITIES_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.TERMINOLOGYCAPABILITIES_RESOURCES_TENANT                      ON FHIRAPP.TERMINOLOGYCAPABILITIES_RESOURCES          FOR ROWS WHERE FHIRAPP.TERMINOLOGYCAPABILITIES_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.TERMINOLOGYCAPABILITIES_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.TERMINOLOGYCAPABILITIES_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_TERMINOLOGYCAPABILITIES_STR_VALUES_RPS ON FHIRAPP.TERMINOLOGYCAPABILITIES_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

CREATE INDEX FHIRAPP.IDX_TERMINOLOGYCAPABILITIES_STR_VALUES_PLR ON FHIRAPP.TERMINOLOGYCAPABILITIES_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_TERMINOLOGYCAPABILITIES_STR_VALUES_PSR ON FHIRAPP.TERMINOLOGYCAPABILITIES_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_TERMINOLOGYCAPABILITIES_STR_VALUES_RPL ON FHIRAPP.TERMINOLOGYCAPABILITIES_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

ALTER TABLE FHIRAPP.TERMINOLOGYCAPABILITIES_STR_VALUES ADD CONSTRAINT FK_TERMINOLOGYCAPABILITIES_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.TERMINOLOGYCAPABILITIES_STR_VALUES ADD CONSTRAINT FK_TERMINOLOGYCAPABILITIES_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.TERMINOLOGYCAPABILITIES_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.TERMINOLOGYCAPABILITIES_STR_VALUES_TENANT                      ON FHIRAPP.TERMINOLOGYCAPABILITIES_STR_VALUES          FOR ROWS WHERE FHIRAPP.TERMINOLOGYCAPABILITIES_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.TERMINOLOGYCAPABILITIES_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.TERMINOLOGYCAPABILITIES_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_TERMINOLOGYCAPABILITIES_TOKEN_VALUES_PNCSCV ON FHIRAPP.TERMINOLOGYCAPABILITIES_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_TERMINOLOGYCAPABILITIES_TOKEN_VALUES_RPS ON FHIRAPP.TERMINOLOGYCAPABILITIES_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

ALTER TABLE FHIRAPP.TERMINOLOGYCAPABILITIES_TOKEN_VALUES ADD CONSTRAINT FK_TERMINOLOGYCAPABILITIES_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.TERMINOLOGYCAPABILITIES_TOKEN_VALUES ADD CONSTRAINT FK_TERMINOLOGYCAPABILITIES_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

ALTER TABLE FHIRAPP.TERMINOLOGYCAPABILITIES_TOKEN_VALUES ADD CONSTRAINT FK_TERMINOLOGYCAPABILITIES_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.TERMINOLOGYCAPABILITIES_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.TERMINOLOGYCAPABILITIES_TOKEN_VALUES_TENANT                      ON FHIRAPP.TERMINOLOGYCAPABILITIES_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.TERMINOLOGYCAPABILITIES_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.TERMINOLOGYCAPABILITIES_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.TERMINOLOGYCAPABILITIES_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_TERMINOLOGYCAPABILITIES_DATE_VALUES_PVR ON FHIRAPP.TERMINOLOGYCAPABILITIES_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_TERMINOLOGYCAPABILITIES_DATE_VALUES_PSER ON FHIRAPP.TERMINOLOGYCAPABILITIES_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_TERMINOLOGYCAPABILITIES_DATE_VALUES_RPSE ON FHIRAPP.TERMINOLOGYCAPABILITIES_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

CREATE INDEX FHIRAPP.IDX_TERMINOLOGYCAPABILITIES_DATE_VALUES_PESR ON FHIRAPP.TERMINOLOGYCAPABILITIES_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_TERMINOLOGYCAPABILITIES_DATE_VALUES_RPV ON FHIRAPP.TERMINOLOGYCAPABILITIES_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

ALTER TABLE FHIRAPP.TERMINOLOGYCAPABILITIES_DATE_VALUES ADD CONSTRAINT FK_TERMINOLOGYCAPABILITIES_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.TERMINOLOGYCAPABILITIES_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.TERMINOLOGYCAPABILITIES_DATE_VALUES ADD CONSTRAINT FK_TERMINOLOGYCAPABILITIES_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.TERMINOLOGYCAPABILITIES_DATE_VALUES_TENANT                      ON FHIRAPP.TERMINOLOGYCAPABILITIES_DATE_VALUES          FOR ROWS WHERE FHIRAPP.TERMINOLOGYCAPABILITIES_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.TERMINOLOGYCAPABILITIES_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.TERMINOLOGYCAPABILITIES_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_TERMINOLOGYCAPABILITIES_NUMBER_VALUES_PNNV ON FHIRAPP.TERMINOLOGYCAPABILITIES_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_TERMINOLOGYCAPABILITIES_NUMBER_VALUES_RPS ON FHIRAPP.TERMINOLOGYCAPABILITIES_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

ALTER TABLE FHIRAPP.TERMINOLOGYCAPABILITIES_NUMBER_VALUES ADD CONSTRAINT FK_TERMINOLOGYCAPABILITIES_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.TERMINOLOGYCAPABILITIES_NUMBER_VALUES ADD CONSTRAINT FK_TERMINOLOGYCAPABILITIES_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.TERMINOLOGYCAPABILITIES_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.TERMINOLOGYCAPABILITIES_NUMBER_VALUES_TENANT                      ON FHIRAPP.TERMINOLOGYCAPABILITIES_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.TERMINOLOGYCAPABILITIES_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.TERMINOLOGYCAPABILITIES_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.TERMINOLOGYCAPABILITIES_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_TERMINOLOGYCAPABILITIES_LATLNG_VALUES_PNNHV ON FHIRAPP.TERMINOLOGYCAPABILITIES_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_TERMINOLOGYCAPABILITIES_LATLNG_VALUES_RPLNG ON FHIRAPP.TERMINOLOGYCAPABILITIES_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_TERMINOLOGYCAPABILITIES_LATLNG_VALUES_RPLAT ON FHIRAPP.TERMINOLOGYCAPABILITIES_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_TERMINOLOGYCAPABILITIES_LATLNG_VALUES_PNNLV ON FHIRAPP.TERMINOLOGYCAPABILITIES_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.TERMINOLOGYCAPABILITIES_LATLNG_VALUES ADD CONSTRAINT FK_TERMINOLOGYCAPABILITIES_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.TERMINOLOGYCAPABILITIES_LATLNG_VALUES ADD CONSTRAINT FK_TERMINOLOGYCAPABILITIES_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.TERMINOLOGYCAPABILITIES_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.TERMINOLOGYCAPABILITIES_LATLNG_VALUES_TENANT                      ON FHIRAPP.TERMINOLOGYCAPABILITIES_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.TERMINOLOGYCAPABILITIES_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.TERMINOLOGYCAPABILITIES_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.TERMINOLOGYCAPABILITIES_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_TERMINOLOGYCAPABILITIES_QUANTITY_VALUES_RPCHLS ON FHIRAPP.TERMINOLOGYCAPABILITIES_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_TERMINOLOGYCAPABILITIES_QUANTITY_VALUES_PCLHSR ON FHIRAPP.TERMINOLOGYCAPABILITIES_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_TERMINOLOGYCAPABILITIES_QUANTITY_VALUES_RPS ON FHIRAPP.TERMINOLOGYCAPABILITIES_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_TERMINOLOGYCAPABILITIES_QUANTITY_VALUES_RPCLHS ON FHIRAPP.TERMINOLOGYCAPABILITIES_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_TERMINOLOGYCAPABILITIES_QUANTITY_VALUES_PNNV ON FHIRAPP.TERMINOLOGYCAPABILITIES_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_TERMINOLOGYCAPABILITIES_QUANTITY_VALUES_PCHLSR ON FHIRAPP.TERMINOLOGYCAPABILITIES_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.TERMINOLOGYCAPABILITIES_QUANTITY_VALUES ADD CONSTRAINT FK_TERMINOLOGYCAPABILITIES_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.TERMINOLOGYCAPABILITIES_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.TERMINOLOGYCAPABILITIES_QUANTITY_VALUES ADD CONSTRAINT FK_TERMINOLOGYCAPABILITIES_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.TERMINOLOGYCAPABILITIES_QUANTITY_VALUES_TENANT                      ON FHIRAPP.TERMINOLOGYCAPABILITIES_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.TERMINOLOGYCAPABILITIES_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.TERMINOLOGYCAPABILITIES_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.EVIDENCE_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT EVIDENCE_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.EVIDENCE_LOGICAL_RESOURCES ADD CONSTRAINT FK_EVIDENCE_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.EVIDENCE_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.EVIDENCE_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.EVIDENCE_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.EVIDENCE_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.EVIDENCE_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT EVIDENCE_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.EVIDENCE_RESOURCES_PRF_IN1 ON FHIRAPP.EVIDENCE_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.EVIDENCE_RESOURCES_TENANT                      ON FHIRAPP.EVIDENCE_RESOURCES          FOR ROWS WHERE FHIRAPP.EVIDENCE_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.EVIDENCE_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.EVIDENCE_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_EVIDENCE_STR_VALUES_PLR ON FHIRAPP.EVIDENCE_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_EVIDENCE_STR_VALUES_RPS ON FHIRAPP.EVIDENCE_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

CREATE INDEX FHIRAPP.IDX_EVIDENCE_STR_VALUES_RPL ON FHIRAPP.EVIDENCE_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

CREATE INDEX FHIRAPP.IDX_EVIDENCE_STR_VALUES_PSR ON FHIRAPP.EVIDENCE_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.EVIDENCE_STR_VALUES ADD CONSTRAINT FK_EVIDENCE_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.EVIDENCE_STR_VALUES ADD CONSTRAINT FK_EVIDENCE_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.EVIDENCE_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.EVIDENCE_STR_VALUES_TENANT                      ON FHIRAPP.EVIDENCE_STR_VALUES          FOR ROWS WHERE FHIRAPP.EVIDENCE_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.EVIDENCE_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.EVIDENCE_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_EVIDENCE_TOKEN_VALUES_RPS ON FHIRAPP.EVIDENCE_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

CREATE INDEX FHIRAPP.IDX_EVIDENCE_TOKEN_VALUES_PNCSCV ON FHIRAPP.EVIDENCE_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.EVIDENCE_TOKEN_VALUES ADD CONSTRAINT FK_EVIDENCE_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.EVIDENCE_TOKEN_VALUES ADD CONSTRAINT FK_EVIDENCE_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

ALTER TABLE FHIRAPP.EVIDENCE_TOKEN_VALUES ADD CONSTRAINT FK_EVIDENCE_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.EVIDENCE_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.EVIDENCE_TOKEN_VALUES_TENANT                      ON FHIRAPP.EVIDENCE_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.EVIDENCE_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.EVIDENCE_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.EVIDENCE_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_EVIDENCE_DATE_VALUES_PVR ON FHIRAPP.EVIDENCE_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_EVIDENCE_DATE_VALUES_PSER ON FHIRAPP.EVIDENCE_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_EVIDENCE_DATE_VALUES_RPSE ON FHIRAPP.EVIDENCE_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

CREATE INDEX FHIRAPP.IDX_EVIDENCE_DATE_VALUES_PESR ON FHIRAPP.EVIDENCE_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_EVIDENCE_DATE_VALUES_RPV ON FHIRAPP.EVIDENCE_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

ALTER TABLE FHIRAPP.EVIDENCE_DATE_VALUES ADD CONSTRAINT FK_EVIDENCE_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.EVIDENCE_DATE_VALUES ADD CONSTRAINT FK_EVIDENCE_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.EVIDENCE_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.EVIDENCE_DATE_VALUES_TENANT                      ON FHIRAPP.EVIDENCE_DATE_VALUES          FOR ROWS WHERE FHIRAPP.EVIDENCE_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.EVIDENCE_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.EVIDENCE_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_EVIDENCE_NUMBER_VALUES_RPS ON FHIRAPP.EVIDENCE_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

CREATE INDEX FHIRAPP.IDX_EVIDENCE_NUMBER_VALUES_PNNV ON FHIRAPP.EVIDENCE_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.EVIDENCE_NUMBER_VALUES ADD CONSTRAINT FK_EVIDENCE_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.EVIDENCE_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.EVIDENCE_NUMBER_VALUES ADD CONSTRAINT FK_EVIDENCE_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.EVIDENCE_NUMBER_VALUES_TENANT                      ON FHIRAPP.EVIDENCE_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.EVIDENCE_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.EVIDENCE_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.EVIDENCE_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_EVIDENCE_LATLNG_VALUES_PNNLV ON FHIRAPP.EVIDENCE_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_EVIDENCE_LATLNG_VALUES_PNNHV ON FHIRAPP.EVIDENCE_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_EVIDENCE_LATLNG_VALUES_RPLAT ON FHIRAPP.EVIDENCE_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_EVIDENCE_LATLNG_VALUES_RPLNG ON FHIRAPP.EVIDENCE_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

ALTER TABLE FHIRAPP.EVIDENCE_LATLNG_VALUES ADD CONSTRAINT FK_EVIDENCE_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.EVIDENCE_LATLNG_VALUES ADD CONSTRAINT FK_EVIDENCE_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.EVIDENCE_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.EVIDENCE_LATLNG_VALUES_TENANT                      ON FHIRAPP.EVIDENCE_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.EVIDENCE_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.EVIDENCE_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.EVIDENCE_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_EVIDENCE_QUANTITY_VALUES_RPS ON FHIRAPP.EVIDENCE_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_EVIDENCE_QUANTITY_VALUES_PCHLSR ON FHIRAPP.EVIDENCE_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_EVIDENCE_QUANTITY_VALUES_RPCHLS ON FHIRAPP.EVIDENCE_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_EVIDENCE_QUANTITY_VALUES_PNNV ON FHIRAPP.EVIDENCE_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_EVIDENCE_QUANTITY_VALUES_RPCLHS ON FHIRAPP.EVIDENCE_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_EVIDENCE_QUANTITY_VALUES_PCLHSR ON FHIRAPP.EVIDENCE_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.EVIDENCE_QUANTITY_VALUES ADD CONSTRAINT FK_EVIDENCE_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.EVIDENCE_QUANTITY_VALUES ADD CONSTRAINT FK_EVIDENCE_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.EVIDENCE_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.EVIDENCE_QUANTITY_VALUES_TENANT                      ON FHIRAPP.EVIDENCE_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.EVIDENCE_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.EVIDENCE_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.AUDITEVENT_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT AUDITEVENT_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.AUDITEVENT_LOGICAL_RESOURCES ADD CONSTRAINT FK_AUDITEVENT_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.AUDITEVENT_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.AUDITEVENT_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.AUDITEVENT_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.AUDITEVENT_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.AUDITEVENT_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT AUDITEVENT_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.AUDITEVENT_RESOURCES_PRF_IN1 ON FHIRAPP.AUDITEVENT_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.AUDITEVENT_RESOURCES_TENANT                      ON FHIRAPP.AUDITEVENT_RESOURCES          FOR ROWS WHERE FHIRAPP.AUDITEVENT_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.AUDITEVENT_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.AUDITEVENT_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_AUDITEVENT_STR_VALUES_PLR ON FHIRAPP.AUDITEVENT_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_AUDITEVENT_STR_VALUES_RPS ON FHIRAPP.AUDITEVENT_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

CREATE INDEX FHIRAPP.IDX_AUDITEVENT_STR_VALUES_RPL ON FHIRAPP.AUDITEVENT_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

CREATE INDEX FHIRAPP.IDX_AUDITEVENT_STR_VALUES_PSR ON FHIRAPP.AUDITEVENT_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.AUDITEVENT_STR_VALUES ADD CONSTRAINT FK_AUDITEVENT_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.AUDITEVENT_STR_VALUES ADD CONSTRAINT FK_AUDITEVENT_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.AUDITEVENT_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.AUDITEVENT_STR_VALUES_TENANT                      ON FHIRAPP.AUDITEVENT_STR_VALUES          FOR ROWS WHERE FHIRAPP.AUDITEVENT_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.AUDITEVENT_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.AUDITEVENT_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_AUDITEVENT_TOKEN_VALUES_RPS ON FHIRAPP.AUDITEVENT_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

CREATE INDEX FHIRAPP.IDX_AUDITEVENT_TOKEN_VALUES_PNCSCV ON FHIRAPP.AUDITEVENT_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.AUDITEVENT_TOKEN_VALUES ADD CONSTRAINT FK_AUDITEVENT_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.AUDITEVENT_TOKEN_VALUES ADD CONSTRAINT FK_AUDITEVENT_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.AUDITEVENT_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.AUDITEVENT_TOKEN_VALUES ADD CONSTRAINT FK_AUDITEVENT_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

CREATE PERMISSION FHIRAPP.AUDITEVENT_TOKEN_VALUES_TENANT                      ON FHIRAPP.AUDITEVENT_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.AUDITEVENT_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.AUDITEVENT_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.AUDITEVENT_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_AUDITEVENT_DATE_VALUES_RPV ON FHIRAPP.AUDITEVENT_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

CREATE INDEX FHIRAPP.IDX_AUDITEVENT_DATE_VALUES_PESR ON FHIRAPP.AUDITEVENT_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_AUDITEVENT_DATE_VALUES_PSER ON FHIRAPP.AUDITEVENT_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_AUDITEVENT_DATE_VALUES_RPSE ON FHIRAPP.AUDITEVENT_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

CREATE INDEX FHIRAPP.IDX_AUDITEVENT_DATE_VALUES_PVR ON FHIRAPP.AUDITEVENT_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.AUDITEVENT_DATE_VALUES ADD CONSTRAINT FK_AUDITEVENT_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.AUDITEVENT_DATE_VALUES ADD CONSTRAINT FK_AUDITEVENT_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.AUDITEVENT_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.AUDITEVENT_DATE_VALUES_TENANT                      ON FHIRAPP.AUDITEVENT_DATE_VALUES          FOR ROWS WHERE FHIRAPP.AUDITEVENT_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.AUDITEVENT_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.AUDITEVENT_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_AUDITEVENT_NUMBER_VALUES_PNNV ON FHIRAPP.AUDITEVENT_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_AUDITEVENT_NUMBER_VALUES_RPS ON FHIRAPP.AUDITEVENT_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

ALTER TABLE FHIRAPP.AUDITEVENT_NUMBER_VALUES ADD CONSTRAINT FK_AUDITEVENT_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.AUDITEVENT_NUMBER_VALUES ADD CONSTRAINT FK_AUDITEVENT_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.AUDITEVENT_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.AUDITEVENT_NUMBER_VALUES_TENANT                      ON FHIRAPP.AUDITEVENT_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.AUDITEVENT_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.AUDITEVENT_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.AUDITEVENT_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_AUDITEVENT_LATLNG_VALUES_PNNLV ON FHIRAPP.AUDITEVENT_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_AUDITEVENT_LATLNG_VALUES_RPLNG ON FHIRAPP.AUDITEVENT_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_AUDITEVENT_LATLNG_VALUES_PNNHV ON FHIRAPP.AUDITEVENT_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_AUDITEVENT_LATLNG_VALUES_RPLAT ON FHIRAPP.AUDITEVENT_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

ALTER TABLE FHIRAPP.AUDITEVENT_LATLNG_VALUES ADD CONSTRAINT FK_AUDITEVENT_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.AUDITEVENT_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.AUDITEVENT_LATLNG_VALUES ADD CONSTRAINT FK_AUDITEVENT_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.AUDITEVENT_LATLNG_VALUES_TENANT                      ON FHIRAPP.AUDITEVENT_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.AUDITEVENT_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.AUDITEVENT_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.AUDITEVENT_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_AUDITEVENT_QUANTITY_VALUES_RPCLHS ON FHIRAPP.AUDITEVENT_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_AUDITEVENT_QUANTITY_VALUES_PCHLSR ON FHIRAPP.AUDITEVENT_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_AUDITEVENT_QUANTITY_VALUES_RPS ON FHIRAPP.AUDITEVENT_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_AUDITEVENT_QUANTITY_VALUES_RPCHLS ON FHIRAPP.AUDITEVENT_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_AUDITEVENT_QUANTITY_VALUES_PCLHSR ON FHIRAPP.AUDITEVENT_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_AUDITEVENT_QUANTITY_VALUES_PNNV ON FHIRAPP.AUDITEVENT_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

ALTER TABLE FHIRAPP.AUDITEVENT_QUANTITY_VALUES ADD CONSTRAINT FK_AUDITEVENT_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.AUDITEVENT_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.AUDITEVENT_QUANTITY_VALUES ADD CONSTRAINT FK_AUDITEVENT_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.AUDITEVENT_QUANTITY_VALUES_TENANT                      ON FHIRAPP.AUDITEVENT_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.AUDITEVENT_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.AUDITEVENT_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.PAYMENTRECONCILIATION_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT PAYMENTRECONCILIATION_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.PAYMENTRECONCILIATION_LOGICAL_RESOURCES ADD CONSTRAINT FK_PAYMENTRECONCILIATION_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.PAYMENTRECONCILIATION_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.PAYMENTRECONCILIATION_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.PAYMENTRECONCILIATION_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.PAYMENTRECONCILIATION_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.PAYMENTRECONCILIATION_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT PAYMENTRECONCILIATION_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.PAYMENTRECONCILIATION_RESOURCES_PRF_IN1 ON FHIRAPP.PAYMENTRECONCILIATION_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.PAYMENTRECONCILIATION_RESOURCES_TENANT                      ON FHIRAPP.PAYMENTRECONCILIATION_RESOURCES          FOR ROWS WHERE FHIRAPP.PAYMENTRECONCILIATION_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.PAYMENTRECONCILIATION_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.PAYMENTRECONCILIATION_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_PAYMENTRECONCILIATION_STR_VALUES_RPL ON FHIRAPP.PAYMENTRECONCILIATION_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

CREATE INDEX FHIRAPP.IDX_PAYMENTRECONCILIATION_STR_VALUES_RPS ON FHIRAPP.PAYMENTRECONCILIATION_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

CREATE INDEX FHIRAPP.IDX_PAYMENTRECONCILIATION_STR_VALUES_PLR ON FHIRAPP.PAYMENTRECONCILIATION_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_PAYMENTRECONCILIATION_STR_VALUES_PSR ON FHIRAPP.PAYMENTRECONCILIATION_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.PAYMENTRECONCILIATION_STR_VALUES ADD CONSTRAINT FK_PAYMENTRECONCILIATION_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.PAYMENTRECONCILIATION_STR_VALUES ADD CONSTRAINT FK_PAYMENTRECONCILIATION_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.PAYMENTRECONCILIATION_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.PAYMENTRECONCILIATION_STR_VALUES_TENANT                      ON FHIRAPP.PAYMENTRECONCILIATION_STR_VALUES          FOR ROWS WHERE FHIRAPP.PAYMENTRECONCILIATION_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.PAYMENTRECONCILIATION_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.PAYMENTRECONCILIATION_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_PAYMENTRECONCILIATION_TOKEN_VALUES_PNCSCV ON FHIRAPP.PAYMENTRECONCILIATION_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_PAYMENTRECONCILIATION_TOKEN_VALUES_RPS ON FHIRAPP.PAYMENTRECONCILIATION_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

ALTER TABLE FHIRAPP.PAYMENTRECONCILIATION_TOKEN_VALUES ADD CONSTRAINT FK_PAYMENTRECONCILIATION_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.PAYMENTRECONCILIATION_TOKEN_VALUES ADD CONSTRAINT FK_PAYMENTRECONCILIATION_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

ALTER TABLE FHIRAPP.PAYMENTRECONCILIATION_TOKEN_VALUES ADD CONSTRAINT FK_PAYMENTRECONCILIATION_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.PAYMENTRECONCILIATION_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.PAYMENTRECONCILIATION_TOKEN_VALUES_TENANT                      ON FHIRAPP.PAYMENTRECONCILIATION_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.PAYMENTRECONCILIATION_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.PAYMENTRECONCILIATION_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.PAYMENTRECONCILIATION_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_PAYMENTRECONCILIATION_DATE_VALUES_PSER ON FHIRAPP.PAYMENTRECONCILIATION_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_PAYMENTRECONCILIATION_DATE_VALUES_RPSE ON FHIRAPP.PAYMENTRECONCILIATION_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

CREATE INDEX FHIRAPP.IDX_PAYMENTRECONCILIATION_DATE_VALUES_RPV ON FHIRAPP.PAYMENTRECONCILIATION_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

CREATE INDEX FHIRAPP.IDX_PAYMENTRECONCILIATION_DATE_VALUES_PVR ON FHIRAPP.PAYMENTRECONCILIATION_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_PAYMENTRECONCILIATION_DATE_VALUES_PESR ON FHIRAPP.PAYMENTRECONCILIATION_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.PAYMENTRECONCILIATION_DATE_VALUES ADD CONSTRAINT FK_PAYMENTRECONCILIATION_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.PAYMENTRECONCILIATION_DATE_VALUES ADD CONSTRAINT FK_PAYMENTRECONCILIATION_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.PAYMENTRECONCILIATION_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.PAYMENTRECONCILIATION_DATE_VALUES_TENANT                      ON FHIRAPP.PAYMENTRECONCILIATION_DATE_VALUES          FOR ROWS WHERE FHIRAPP.PAYMENTRECONCILIATION_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.PAYMENTRECONCILIATION_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.PAYMENTRECONCILIATION_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_PAYMENTRECONCILIATION_NUMBER_VALUES_RPS ON FHIRAPP.PAYMENTRECONCILIATION_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

CREATE INDEX FHIRAPP.IDX_PAYMENTRECONCILIATION_NUMBER_VALUES_PNNV ON FHIRAPP.PAYMENTRECONCILIATION_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.PAYMENTRECONCILIATION_NUMBER_VALUES ADD CONSTRAINT FK_PAYMENTRECONCILIATION_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.PAYMENTRECONCILIATION_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.PAYMENTRECONCILIATION_NUMBER_VALUES ADD CONSTRAINT FK_PAYMENTRECONCILIATION_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.PAYMENTRECONCILIATION_NUMBER_VALUES_TENANT                      ON FHIRAPP.PAYMENTRECONCILIATION_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.PAYMENTRECONCILIATION_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.PAYMENTRECONCILIATION_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.PAYMENTRECONCILIATION_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_PAYMENTRECONCILIATION_LATLNG_VALUES_RPLNG ON FHIRAPP.PAYMENTRECONCILIATION_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_PAYMENTRECONCILIATION_LATLNG_VALUES_PNNLV ON FHIRAPP.PAYMENTRECONCILIATION_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_PAYMENTRECONCILIATION_LATLNG_VALUES_PNNHV ON FHIRAPP.PAYMENTRECONCILIATION_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_PAYMENTRECONCILIATION_LATLNG_VALUES_RPLAT ON FHIRAPP.PAYMENTRECONCILIATION_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

ALTER TABLE FHIRAPP.PAYMENTRECONCILIATION_LATLNG_VALUES ADD CONSTRAINT FK_PAYMENTRECONCILIATION_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.PAYMENTRECONCILIATION_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.PAYMENTRECONCILIATION_LATLNG_VALUES ADD CONSTRAINT FK_PAYMENTRECONCILIATION_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.PAYMENTRECONCILIATION_LATLNG_VALUES_TENANT                      ON FHIRAPP.PAYMENTRECONCILIATION_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.PAYMENTRECONCILIATION_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.PAYMENTRECONCILIATION_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.PAYMENTRECONCILIATION_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_PAYMENTRECONCILIATION_QUANTITY_VALUES_RPCLHS ON FHIRAPP.PAYMENTRECONCILIATION_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_PAYMENTRECONCILIATION_QUANTITY_VALUES_PCHLSR ON FHIRAPP.PAYMENTRECONCILIATION_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_PAYMENTRECONCILIATION_QUANTITY_VALUES_RPS ON FHIRAPP.PAYMENTRECONCILIATION_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_PAYMENTRECONCILIATION_QUANTITY_VALUES_PNNV ON FHIRAPP.PAYMENTRECONCILIATION_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_PAYMENTRECONCILIATION_QUANTITY_VALUES_RPCHLS ON FHIRAPP.PAYMENTRECONCILIATION_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_PAYMENTRECONCILIATION_QUANTITY_VALUES_PCLHSR ON FHIRAPP.PAYMENTRECONCILIATION_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.PAYMENTRECONCILIATION_QUANTITY_VALUES ADD CONSTRAINT FK_PAYMENTRECONCILIATION_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.PAYMENTRECONCILIATION_QUANTITY_VALUES ADD CONSTRAINT FK_PAYMENTRECONCILIATION_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.PAYMENTRECONCILIATION_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.PAYMENTRECONCILIATION_QUANTITY_VALUES_TENANT                      ON FHIRAPP.PAYMENTRECONCILIATION_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.PAYMENTRECONCILIATION_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.PAYMENTRECONCILIATION_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.CONDITION_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT CONDITION_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.CONDITION_LOGICAL_RESOURCES ADD CONSTRAINT FK_CONDITION_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.CONDITION_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.CONDITION_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.CONDITION_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.CONDITION_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.CONDITION_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT CONDITION_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.CONDITION_RESOURCES_PRF_IN1 ON FHIRAPP.CONDITION_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.CONDITION_RESOURCES_TENANT                      ON FHIRAPP.CONDITION_RESOURCES          FOR ROWS WHERE FHIRAPP.CONDITION_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.CONDITION_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.CONDITION_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_CONDITION_STR_VALUES_RPS ON FHIRAPP.CONDITION_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

CREATE INDEX FHIRAPP.IDX_CONDITION_STR_VALUES_PLR ON FHIRAPP.CONDITION_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_CONDITION_STR_VALUES_RPL ON FHIRAPP.CONDITION_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

CREATE INDEX FHIRAPP.IDX_CONDITION_STR_VALUES_PSR ON FHIRAPP.CONDITION_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.CONDITION_STR_VALUES ADD CONSTRAINT FK_CONDITION_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.CONDITION_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.CONDITION_STR_VALUES ADD CONSTRAINT FK_CONDITION_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.CONDITION_STR_VALUES_TENANT                      ON FHIRAPP.CONDITION_STR_VALUES          FOR ROWS WHERE FHIRAPP.CONDITION_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.CONDITION_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.CONDITION_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_CONDITION_TOKEN_VALUES_PNCSCV ON FHIRAPP.CONDITION_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_CONDITION_TOKEN_VALUES_RPS ON FHIRAPP.CONDITION_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

ALTER TABLE FHIRAPP.CONDITION_TOKEN_VALUES ADD CONSTRAINT FK_CONDITION_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

ALTER TABLE FHIRAPP.CONDITION_TOKEN_VALUES ADD CONSTRAINT FK_CONDITION_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.CONDITION_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.CONDITION_TOKEN_VALUES ADD CONSTRAINT FK_CONDITION_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.CONDITION_TOKEN_VALUES_TENANT                      ON FHIRAPP.CONDITION_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.CONDITION_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.CONDITION_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.CONDITION_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_CONDITION_DATE_VALUES_PESR ON FHIRAPP.CONDITION_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_CONDITION_DATE_VALUES_RPV ON FHIRAPP.CONDITION_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

CREATE INDEX FHIRAPP.IDX_CONDITION_DATE_VALUES_PSER ON FHIRAPP.CONDITION_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_CONDITION_DATE_VALUES_RPSE ON FHIRAPP.CONDITION_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

CREATE INDEX FHIRAPP.IDX_CONDITION_DATE_VALUES_PVR ON FHIRAPP.CONDITION_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.CONDITION_DATE_VALUES ADD CONSTRAINT FK_CONDITION_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.CONDITION_DATE_VALUES ADD CONSTRAINT FK_CONDITION_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.CONDITION_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.CONDITION_DATE_VALUES_TENANT                      ON FHIRAPP.CONDITION_DATE_VALUES          FOR ROWS WHERE FHIRAPP.CONDITION_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.CONDITION_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.CONDITION_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_CONDITION_NUMBER_VALUES_RPS ON FHIRAPP.CONDITION_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

CREATE INDEX FHIRAPP.IDX_CONDITION_NUMBER_VALUES_PNNV ON FHIRAPP.CONDITION_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.CONDITION_NUMBER_VALUES ADD CONSTRAINT FK_CONDITION_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.CONDITION_NUMBER_VALUES ADD CONSTRAINT FK_CONDITION_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.CONDITION_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.CONDITION_NUMBER_VALUES_TENANT                      ON FHIRAPP.CONDITION_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.CONDITION_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.CONDITION_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.CONDITION_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_CONDITION_LATLNG_VALUES_RPLNG ON FHIRAPP.CONDITION_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_CONDITION_LATLNG_VALUES_PNNLV ON FHIRAPP.CONDITION_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_CONDITION_LATLNG_VALUES_PNNHV ON FHIRAPP.CONDITION_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_CONDITION_LATLNG_VALUES_RPLAT ON FHIRAPP.CONDITION_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

ALTER TABLE FHIRAPP.CONDITION_LATLNG_VALUES ADD CONSTRAINT FK_CONDITION_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.CONDITION_LATLNG_VALUES ADD CONSTRAINT FK_CONDITION_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.CONDITION_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.CONDITION_LATLNG_VALUES_TENANT                      ON FHIRAPP.CONDITION_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.CONDITION_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.CONDITION_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.CONDITION_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_CONDITION_QUANTITY_VALUES_RPCLHS ON FHIRAPP.CONDITION_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_CONDITION_QUANTITY_VALUES_PCHLSR ON FHIRAPP.CONDITION_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_CONDITION_QUANTITY_VALUES_RPCHLS ON FHIRAPP.CONDITION_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_CONDITION_QUANTITY_VALUES_RPS ON FHIRAPP.CONDITION_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_CONDITION_QUANTITY_VALUES_PCLHSR ON FHIRAPP.CONDITION_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_CONDITION_QUANTITY_VALUES_PNNV ON FHIRAPP.CONDITION_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

ALTER TABLE FHIRAPP.CONDITION_QUANTITY_VALUES ADD CONSTRAINT FK_CONDITION_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.CONDITION_QUANTITY_VALUES ADD CONSTRAINT FK_CONDITION_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.CONDITION_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.CONDITION_QUANTITY_VALUES_TENANT                      ON FHIRAPP.CONDITION_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.CONDITION_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.CONDITION_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.SPECIMENDEFINITION_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT SPECIMENDEFINITION_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.SPECIMENDEFINITION_LOGICAL_RESOURCES ADD CONSTRAINT FK_SPECIMENDEFINITION_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.SPECIMENDEFINITION_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.SPECIMENDEFINITION_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.SPECIMENDEFINITION_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.SPECIMENDEFINITION_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.SPECIMENDEFINITION_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT SPECIMENDEFINITION_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.SPECIMENDEFINITION_RESOURCES_PRF_IN1 ON FHIRAPP.SPECIMENDEFINITION_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.SPECIMENDEFINITION_RESOURCES_TENANT                      ON FHIRAPP.SPECIMENDEFINITION_RESOURCES          FOR ROWS WHERE FHIRAPP.SPECIMENDEFINITION_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.SPECIMENDEFINITION_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.SPECIMENDEFINITION_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_SPECIMENDEFINITION_STR_VALUES_RPS ON FHIRAPP.SPECIMENDEFINITION_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

CREATE INDEX FHIRAPP.IDX_SPECIMENDEFINITION_STR_VALUES_PLR ON FHIRAPP.SPECIMENDEFINITION_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SPECIMENDEFINITION_STR_VALUES_RPL ON FHIRAPP.SPECIMENDEFINITION_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

CREATE INDEX FHIRAPP.IDX_SPECIMENDEFINITION_STR_VALUES_PSR ON FHIRAPP.SPECIMENDEFINITION_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.SPECIMENDEFINITION_STR_VALUES ADD CONSTRAINT FK_SPECIMENDEFINITION_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.SPECIMENDEFINITION_STR_VALUES ADD CONSTRAINT FK_SPECIMENDEFINITION_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.SPECIMENDEFINITION_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.SPECIMENDEFINITION_STR_VALUES_TENANT                      ON FHIRAPP.SPECIMENDEFINITION_STR_VALUES          FOR ROWS WHERE FHIRAPP.SPECIMENDEFINITION_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.SPECIMENDEFINITION_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.SPECIMENDEFINITION_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_SPECIMENDEFINITION_TOKEN_VALUES_PNCSCV ON FHIRAPP.SPECIMENDEFINITION_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SPECIMENDEFINITION_TOKEN_VALUES_RPS ON FHIRAPP.SPECIMENDEFINITION_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

ALTER TABLE FHIRAPP.SPECIMENDEFINITION_TOKEN_VALUES ADD CONSTRAINT FK_SPECIMENDEFINITION_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.SPECIMENDEFINITION_TOKEN_VALUES ADD CONSTRAINT FK_SPECIMENDEFINITION_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.SPECIMENDEFINITION_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.SPECIMENDEFINITION_TOKEN_VALUES ADD CONSTRAINT FK_SPECIMENDEFINITION_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

CREATE PERMISSION FHIRAPP.SPECIMENDEFINITION_TOKEN_VALUES_TENANT                      ON FHIRAPP.SPECIMENDEFINITION_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.SPECIMENDEFINITION_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.SPECIMENDEFINITION_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.SPECIMENDEFINITION_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_SPECIMENDEFINITION_DATE_VALUES_PESR ON FHIRAPP.SPECIMENDEFINITION_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SPECIMENDEFINITION_DATE_VALUES_RPV ON FHIRAPP.SPECIMENDEFINITION_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

CREATE INDEX FHIRAPP.IDX_SPECIMENDEFINITION_DATE_VALUES_PSER ON FHIRAPP.SPECIMENDEFINITION_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SPECIMENDEFINITION_DATE_VALUES_RPSE ON FHIRAPP.SPECIMENDEFINITION_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

CREATE INDEX FHIRAPP.IDX_SPECIMENDEFINITION_DATE_VALUES_PVR ON FHIRAPP.SPECIMENDEFINITION_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.SPECIMENDEFINITION_DATE_VALUES ADD CONSTRAINT FK_SPECIMENDEFINITION_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.SPECIMENDEFINITION_DATE_VALUES ADD CONSTRAINT FK_SPECIMENDEFINITION_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.SPECIMENDEFINITION_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.SPECIMENDEFINITION_DATE_VALUES_TENANT                      ON FHIRAPP.SPECIMENDEFINITION_DATE_VALUES          FOR ROWS WHERE FHIRAPP.SPECIMENDEFINITION_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.SPECIMENDEFINITION_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.SPECIMENDEFINITION_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_SPECIMENDEFINITION_NUMBER_VALUES_PNNV ON FHIRAPP.SPECIMENDEFINITION_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SPECIMENDEFINITION_NUMBER_VALUES_RPS ON FHIRAPP.SPECIMENDEFINITION_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

ALTER TABLE FHIRAPP.SPECIMENDEFINITION_NUMBER_VALUES ADD CONSTRAINT FK_SPECIMENDEFINITION_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.SPECIMENDEFINITION_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.SPECIMENDEFINITION_NUMBER_VALUES ADD CONSTRAINT FK_SPECIMENDEFINITION_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.SPECIMENDEFINITION_NUMBER_VALUES_TENANT                      ON FHIRAPP.SPECIMENDEFINITION_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.SPECIMENDEFINITION_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.SPECIMENDEFINITION_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.SPECIMENDEFINITION_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_SPECIMENDEFINITION_LATLNG_VALUES_PNNLV ON FHIRAPP.SPECIMENDEFINITION_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SPECIMENDEFINITION_LATLNG_VALUES_RPLNG ON FHIRAPP.SPECIMENDEFINITION_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_SPECIMENDEFINITION_LATLNG_VALUES_PNNHV ON FHIRAPP.SPECIMENDEFINITION_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SPECIMENDEFINITION_LATLNG_VALUES_RPLAT ON FHIRAPP.SPECIMENDEFINITION_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

ALTER TABLE FHIRAPP.SPECIMENDEFINITION_LATLNG_VALUES ADD CONSTRAINT FK_SPECIMENDEFINITION_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.SPECIMENDEFINITION_LATLNG_VALUES ADD CONSTRAINT FK_SPECIMENDEFINITION_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.SPECIMENDEFINITION_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.SPECIMENDEFINITION_LATLNG_VALUES_TENANT                      ON FHIRAPP.SPECIMENDEFINITION_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.SPECIMENDEFINITION_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.SPECIMENDEFINITION_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.SPECIMENDEFINITION_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_SPECIMENDEFINITION_QUANTITY_VALUES_PCHLSR ON FHIRAPP.SPECIMENDEFINITION_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SPECIMENDEFINITION_QUANTITY_VALUES_RPS ON FHIRAPP.SPECIMENDEFINITION_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_SPECIMENDEFINITION_QUANTITY_VALUES_RPCLHS ON FHIRAPP.SPECIMENDEFINITION_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_SPECIMENDEFINITION_QUANTITY_VALUES_RPCHLS ON FHIRAPP.SPECIMENDEFINITION_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_SPECIMENDEFINITION_QUANTITY_VALUES_PCLHSR ON FHIRAPP.SPECIMENDEFINITION_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SPECIMENDEFINITION_QUANTITY_VALUES_PNNV ON FHIRAPP.SPECIMENDEFINITION_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

ALTER TABLE FHIRAPP.SPECIMENDEFINITION_QUANTITY_VALUES ADD CONSTRAINT FK_SPECIMENDEFINITION_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.SPECIMENDEFINITION_QUANTITY_VALUES ADD CONSTRAINT FK_SPECIMENDEFINITION_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.SPECIMENDEFINITION_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.SPECIMENDEFINITION_QUANTITY_VALUES_TENANT                      ON FHIRAPP.SPECIMENDEFINITION_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.SPECIMENDEFINITION_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.SPECIMENDEFINITION_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.COMPOSITION_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT COMPOSITION_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.COMPOSITION_LOGICAL_RESOURCES ADD CONSTRAINT FK_COMPOSITION_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.COMPOSITION_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.COMPOSITION_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.COMPOSITION_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.COMPOSITION_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.COMPOSITION_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT COMPOSITION_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.COMPOSITION_RESOURCES_PRF_IN1 ON FHIRAPP.COMPOSITION_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.COMPOSITION_RESOURCES_TENANT                      ON FHIRAPP.COMPOSITION_RESOURCES          FOR ROWS WHERE FHIRAPP.COMPOSITION_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.COMPOSITION_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.COMPOSITION_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_COMPOSITION_STR_VALUES_RPL ON FHIRAPP.COMPOSITION_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

CREATE INDEX FHIRAPP.IDX_COMPOSITION_STR_VALUES_PSR ON FHIRAPP.COMPOSITION_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_COMPOSITION_STR_VALUES_PLR ON FHIRAPP.COMPOSITION_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_COMPOSITION_STR_VALUES_RPS ON FHIRAPP.COMPOSITION_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

ALTER TABLE FHIRAPP.COMPOSITION_STR_VALUES ADD CONSTRAINT FK_COMPOSITION_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.COMPOSITION_STR_VALUES ADD CONSTRAINT FK_COMPOSITION_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.COMPOSITION_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.COMPOSITION_STR_VALUES_TENANT                      ON FHIRAPP.COMPOSITION_STR_VALUES          FOR ROWS WHERE FHIRAPP.COMPOSITION_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.COMPOSITION_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.COMPOSITION_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_COMPOSITION_TOKEN_VALUES_RPS ON FHIRAPP.COMPOSITION_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

CREATE INDEX FHIRAPP.IDX_COMPOSITION_TOKEN_VALUES_PNCSCV ON FHIRAPP.COMPOSITION_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.COMPOSITION_TOKEN_VALUES ADD CONSTRAINT FK_COMPOSITION_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.COMPOSITION_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.COMPOSITION_TOKEN_VALUES ADD CONSTRAINT FK_COMPOSITION_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.COMPOSITION_TOKEN_VALUES ADD CONSTRAINT FK_COMPOSITION_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

CREATE PERMISSION FHIRAPP.COMPOSITION_TOKEN_VALUES_TENANT                      ON FHIRAPP.COMPOSITION_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.COMPOSITION_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.COMPOSITION_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.COMPOSITION_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_COMPOSITION_DATE_VALUES_PESR ON FHIRAPP.COMPOSITION_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_COMPOSITION_DATE_VALUES_PSER ON FHIRAPP.COMPOSITION_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_COMPOSITION_DATE_VALUES_PVR ON FHIRAPP.COMPOSITION_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_COMPOSITION_DATE_VALUES_RPV ON FHIRAPP.COMPOSITION_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

CREATE INDEX FHIRAPP.IDX_COMPOSITION_DATE_VALUES_RPSE ON FHIRAPP.COMPOSITION_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

ALTER TABLE FHIRAPP.COMPOSITION_DATE_VALUES ADD CONSTRAINT FK_COMPOSITION_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.COMPOSITION_DATE_VALUES ADD CONSTRAINT FK_COMPOSITION_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.COMPOSITION_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.COMPOSITION_DATE_VALUES_TENANT                      ON FHIRAPP.COMPOSITION_DATE_VALUES          FOR ROWS WHERE FHIRAPP.COMPOSITION_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.COMPOSITION_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.COMPOSITION_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_COMPOSITION_NUMBER_VALUES_RPS ON FHIRAPP.COMPOSITION_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

CREATE INDEX FHIRAPP.IDX_COMPOSITION_NUMBER_VALUES_PNNV ON FHIRAPP.COMPOSITION_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.COMPOSITION_NUMBER_VALUES ADD CONSTRAINT FK_COMPOSITION_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.COMPOSITION_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.COMPOSITION_NUMBER_VALUES ADD CONSTRAINT FK_COMPOSITION_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.COMPOSITION_NUMBER_VALUES_TENANT                      ON FHIRAPP.COMPOSITION_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.COMPOSITION_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.COMPOSITION_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.COMPOSITION_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_COMPOSITION_LATLNG_VALUES_PNNLV ON FHIRAPP.COMPOSITION_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_COMPOSITION_LATLNG_VALUES_RPLNG ON FHIRAPP.COMPOSITION_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_COMPOSITION_LATLNG_VALUES_RPLAT ON FHIRAPP.COMPOSITION_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_COMPOSITION_LATLNG_VALUES_PNNHV ON FHIRAPP.COMPOSITION_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.COMPOSITION_LATLNG_VALUES ADD CONSTRAINT FK_COMPOSITION_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.COMPOSITION_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.COMPOSITION_LATLNG_VALUES ADD CONSTRAINT FK_COMPOSITION_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.COMPOSITION_LATLNG_VALUES_TENANT                      ON FHIRAPP.COMPOSITION_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.COMPOSITION_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.COMPOSITION_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.COMPOSITION_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_COMPOSITION_QUANTITY_VALUES_RPCLHS ON FHIRAPP.COMPOSITION_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_COMPOSITION_QUANTITY_VALUES_PCHLSR ON FHIRAPP.COMPOSITION_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_COMPOSITION_QUANTITY_VALUES_RPS ON FHIRAPP.COMPOSITION_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_COMPOSITION_QUANTITY_VALUES_PCLHSR ON FHIRAPP.COMPOSITION_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_COMPOSITION_QUANTITY_VALUES_PNNV ON FHIRAPP.COMPOSITION_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_COMPOSITION_QUANTITY_VALUES_RPCHLS ON FHIRAPP.COMPOSITION_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

ALTER TABLE FHIRAPP.COMPOSITION_QUANTITY_VALUES ADD CONSTRAINT FK_COMPOSITION_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.COMPOSITION_QUANTITY_VALUES ADD CONSTRAINT FK_COMPOSITION_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.COMPOSITION_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.COMPOSITION_QUANTITY_VALUES_TENANT                      ON FHIRAPP.COMPOSITION_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.COMPOSITION_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.COMPOSITION_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.DETECTEDISSUE_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT DETECTEDISSUE_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.DETECTEDISSUE_LOGICAL_RESOURCES ADD CONSTRAINT FK_DETECTEDISSUE_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.DETECTEDISSUE_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.DETECTEDISSUE_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.DETECTEDISSUE_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.DETECTEDISSUE_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.DETECTEDISSUE_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT DETECTEDISSUE_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.DETECTEDISSUE_RESOURCES_PRF_IN1 ON FHIRAPP.DETECTEDISSUE_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.DETECTEDISSUE_RESOURCES_TENANT                      ON FHIRAPP.DETECTEDISSUE_RESOURCES          FOR ROWS WHERE FHIRAPP.DETECTEDISSUE_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.DETECTEDISSUE_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.DETECTEDISSUE_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_DETECTEDISSUE_STR_VALUES_PSR ON FHIRAPP.DETECTEDISSUE_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_DETECTEDISSUE_STR_VALUES_RPL ON FHIRAPP.DETECTEDISSUE_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

CREATE INDEX FHIRAPP.IDX_DETECTEDISSUE_STR_VALUES_RPS ON FHIRAPP.DETECTEDISSUE_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

CREATE INDEX FHIRAPP.IDX_DETECTEDISSUE_STR_VALUES_PLR ON FHIRAPP.DETECTEDISSUE_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.DETECTEDISSUE_STR_VALUES ADD CONSTRAINT FK_DETECTEDISSUE_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.DETECTEDISSUE_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.DETECTEDISSUE_STR_VALUES ADD CONSTRAINT FK_DETECTEDISSUE_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.DETECTEDISSUE_STR_VALUES_TENANT                      ON FHIRAPP.DETECTEDISSUE_STR_VALUES          FOR ROWS WHERE FHIRAPP.DETECTEDISSUE_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.DETECTEDISSUE_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.DETECTEDISSUE_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_DETECTEDISSUE_TOKEN_VALUES_PNCSCV ON FHIRAPP.DETECTEDISSUE_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_DETECTEDISSUE_TOKEN_VALUES_RPS ON FHIRAPP.DETECTEDISSUE_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

ALTER TABLE FHIRAPP.DETECTEDISSUE_TOKEN_VALUES ADD CONSTRAINT FK_DETECTEDISSUE_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

ALTER TABLE FHIRAPP.DETECTEDISSUE_TOKEN_VALUES ADD CONSTRAINT FK_DETECTEDISSUE_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.DETECTEDISSUE_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.DETECTEDISSUE_TOKEN_VALUES ADD CONSTRAINT FK_DETECTEDISSUE_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.DETECTEDISSUE_TOKEN_VALUES_TENANT                      ON FHIRAPP.DETECTEDISSUE_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.DETECTEDISSUE_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.DETECTEDISSUE_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.DETECTEDISSUE_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_DETECTEDISSUE_DATE_VALUES_PSER ON FHIRAPP.DETECTEDISSUE_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_DETECTEDISSUE_DATE_VALUES_RPSE ON FHIRAPP.DETECTEDISSUE_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

CREATE INDEX FHIRAPP.IDX_DETECTEDISSUE_DATE_VALUES_PVR ON FHIRAPP.DETECTEDISSUE_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_DETECTEDISSUE_DATE_VALUES_RPV ON FHIRAPP.DETECTEDISSUE_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

CREATE INDEX FHIRAPP.IDX_DETECTEDISSUE_DATE_VALUES_PESR ON FHIRAPP.DETECTEDISSUE_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.DETECTEDISSUE_DATE_VALUES ADD CONSTRAINT FK_DETECTEDISSUE_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.DETECTEDISSUE_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.DETECTEDISSUE_DATE_VALUES ADD CONSTRAINT FK_DETECTEDISSUE_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.DETECTEDISSUE_DATE_VALUES_TENANT                      ON FHIRAPP.DETECTEDISSUE_DATE_VALUES          FOR ROWS WHERE FHIRAPP.DETECTEDISSUE_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.DETECTEDISSUE_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.DETECTEDISSUE_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_DETECTEDISSUE_NUMBER_VALUES_PNNV ON FHIRAPP.DETECTEDISSUE_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_DETECTEDISSUE_NUMBER_VALUES_RPS ON FHIRAPP.DETECTEDISSUE_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

ALTER TABLE FHIRAPP.DETECTEDISSUE_NUMBER_VALUES ADD CONSTRAINT FK_DETECTEDISSUE_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.DETECTEDISSUE_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.DETECTEDISSUE_NUMBER_VALUES ADD CONSTRAINT FK_DETECTEDISSUE_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.DETECTEDISSUE_NUMBER_VALUES_TENANT                      ON FHIRAPP.DETECTEDISSUE_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.DETECTEDISSUE_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.DETECTEDISSUE_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.DETECTEDISSUE_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_DETECTEDISSUE_LATLNG_VALUES_RPLAT ON FHIRAPP.DETECTEDISSUE_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_DETECTEDISSUE_LATLNG_VALUES_PNNHV ON FHIRAPP.DETECTEDISSUE_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_DETECTEDISSUE_LATLNG_VALUES_PNNLV ON FHIRAPP.DETECTEDISSUE_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_DETECTEDISSUE_LATLNG_VALUES_RPLNG ON FHIRAPP.DETECTEDISSUE_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

ALTER TABLE FHIRAPP.DETECTEDISSUE_LATLNG_VALUES ADD CONSTRAINT FK_DETECTEDISSUE_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.DETECTEDISSUE_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.DETECTEDISSUE_LATLNG_VALUES ADD CONSTRAINT FK_DETECTEDISSUE_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.DETECTEDISSUE_LATLNG_VALUES_TENANT                      ON FHIRAPP.DETECTEDISSUE_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.DETECTEDISSUE_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.DETECTEDISSUE_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.DETECTEDISSUE_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_DETECTEDISSUE_QUANTITY_VALUES_PCHLSR ON FHIRAPP.DETECTEDISSUE_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_DETECTEDISSUE_QUANTITY_VALUES_RPCLHS ON FHIRAPP.DETECTEDISSUE_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_DETECTEDISSUE_QUANTITY_VALUES_RPS ON FHIRAPP.DETECTEDISSUE_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_DETECTEDISSUE_QUANTITY_VALUES_RPCHLS ON FHIRAPP.DETECTEDISSUE_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_DETECTEDISSUE_QUANTITY_VALUES_PCLHSR ON FHIRAPP.DETECTEDISSUE_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_DETECTEDISSUE_QUANTITY_VALUES_PNNV ON FHIRAPP.DETECTEDISSUE_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

ALTER TABLE FHIRAPP.DETECTEDISSUE_QUANTITY_VALUES ADD CONSTRAINT FK_DETECTEDISSUE_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.DETECTEDISSUE_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.DETECTEDISSUE_QUANTITY_VALUES ADD CONSTRAINT FK_DETECTEDISSUE_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.DETECTEDISSUE_QUANTITY_VALUES_TENANT                      ON FHIRAPP.DETECTEDISSUE_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.DETECTEDISSUE_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.DETECTEDISSUE_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.BUNDLE_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT BUNDLE_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.BUNDLE_LOGICAL_RESOURCES ADD CONSTRAINT FK_BUNDLE_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.BUNDLE_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.BUNDLE_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.BUNDLE_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.BUNDLE_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.BUNDLE_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT BUNDLE_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.BUNDLE_RESOURCES_PRF_IN1 ON FHIRAPP.BUNDLE_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.BUNDLE_RESOURCES_TENANT                      ON FHIRAPP.BUNDLE_RESOURCES          FOR ROWS WHERE FHIRAPP.BUNDLE_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.BUNDLE_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.BUNDLE_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_BUNDLE_STR_VALUES_RPL ON FHIRAPP.BUNDLE_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

CREATE INDEX FHIRAPP.IDX_BUNDLE_STR_VALUES_PSR ON FHIRAPP.BUNDLE_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_BUNDLE_STR_VALUES_RPS ON FHIRAPP.BUNDLE_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

CREATE INDEX FHIRAPP.IDX_BUNDLE_STR_VALUES_PLR ON FHIRAPP.BUNDLE_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.BUNDLE_STR_VALUES ADD CONSTRAINT FK_BUNDLE_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.BUNDLE_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.BUNDLE_STR_VALUES ADD CONSTRAINT FK_BUNDLE_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.BUNDLE_STR_VALUES_TENANT                      ON FHIRAPP.BUNDLE_STR_VALUES          FOR ROWS WHERE FHIRAPP.BUNDLE_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.BUNDLE_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.BUNDLE_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_BUNDLE_TOKEN_VALUES_PNCSCV ON FHIRAPP.BUNDLE_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_BUNDLE_TOKEN_VALUES_RPS ON FHIRAPP.BUNDLE_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

ALTER TABLE FHIRAPP.BUNDLE_TOKEN_VALUES ADD CONSTRAINT FK_BUNDLE_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

ALTER TABLE FHIRAPP.BUNDLE_TOKEN_VALUES ADD CONSTRAINT FK_BUNDLE_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.BUNDLE_TOKEN_VALUES ADD CONSTRAINT FK_BUNDLE_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.BUNDLE_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.BUNDLE_TOKEN_VALUES_TENANT                      ON FHIRAPP.BUNDLE_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.BUNDLE_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.BUNDLE_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.BUNDLE_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_BUNDLE_DATE_VALUES_RPSE ON FHIRAPP.BUNDLE_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

CREATE INDEX FHIRAPP.IDX_BUNDLE_DATE_VALUES_PSER ON FHIRAPP.BUNDLE_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_BUNDLE_DATE_VALUES_PVR ON FHIRAPP.BUNDLE_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_BUNDLE_DATE_VALUES_RPV ON FHIRAPP.BUNDLE_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

CREATE INDEX FHIRAPP.IDX_BUNDLE_DATE_VALUES_PESR ON FHIRAPP.BUNDLE_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.BUNDLE_DATE_VALUES ADD CONSTRAINT FK_BUNDLE_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.BUNDLE_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.BUNDLE_DATE_VALUES ADD CONSTRAINT FK_BUNDLE_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.BUNDLE_DATE_VALUES_TENANT                      ON FHIRAPP.BUNDLE_DATE_VALUES          FOR ROWS WHERE FHIRAPP.BUNDLE_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.BUNDLE_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.BUNDLE_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_BUNDLE_NUMBER_VALUES_RPS ON FHIRAPP.BUNDLE_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

CREATE INDEX FHIRAPP.IDX_BUNDLE_NUMBER_VALUES_PNNV ON FHIRAPP.BUNDLE_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.BUNDLE_NUMBER_VALUES ADD CONSTRAINT FK_BUNDLE_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.BUNDLE_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.BUNDLE_NUMBER_VALUES ADD CONSTRAINT FK_BUNDLE_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.BUNDLE_NUMBER_VALUES_TENANT                      ON FHIRAPP.BUNDLE_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.BUNDLE_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.BUNDLE_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.BUNDLE_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_BUNDLE_LATLNG_VALUES_RPLAT ON FHIRAPP.BUNDLE_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_BUNDLE_LATLNG_VALUES_PNNLV ON FHIRAPP.BUNDLE_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_BUNDLE_LATLNG_VALUES_RPLNG ON FHIRAPP.BUNDLE_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_BUNDLE_LATLNG_VALUES_PNNHV ON FHIRAPP.BUNDLE_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.BUNDLE_LATLNG_VALUES ADD CONSTRAINT FK_BUNDLE_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.BUNDLE_LATLNG_VALUES ADD CONSTRAINT FK_BUNDLE_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.BUNDLE_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.BUNDLE_LATLNG_VALUES_TENANT                      ON FHIRAPP.BUNDLE_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.BUNDLE_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.BUNDLE_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.BUNDLE_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_BUNDLE_QUANTITY_VALUES_PCLHSR ON FHIRAPP.BUNDLE_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_BUNDLE_QUANTITY_VALUES_PNNV ON FHIRAPP.BUNDLE_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_BUNDLE_QUANTITY_VALUES_RPS ON FHIRAPP.BUNDLE_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_BUNDLE_QUANTITY_VALUES_RPCLHS ON FHIRAPP.BUNDLE_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_BUNDLE_QUANTITY_VALUES_PCHLSR ON FHIRAPP.BUNDLE_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_BUNDLE_QUANTITY_VALUES_RPCHLS ON FHIRAPP.BUNDLE_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

ALTER TABLE FHIRAPP.BUNDLE_QUANTITY_VALUES ADD CONSTRAINT FK_BUNDLE_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.BUNDLE_QUANTITY_VALUES ADD CONSTRAINT FK_BUNDLE_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.BUNDLE_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.BUNDLE_QUANTITY_VALUES_TENANT                      ON FHIRAPP.BUNDLE_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.BUNDLE_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.BUNDLE_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.COMPARTMENTDEFINITION_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT COMPARTMENTDEFINITION_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.COMPARTMENTDEFINITION_LOGICAL_RESOURCES ADD CONSTRAINT FK_COMPARTMENTDEFINITION_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.COMPARTMENTDEFINITION_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.COMPARTMENTDEFINITION_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.COMPARTMENTDEFINITION_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.COMPARTMENTDEFINITION_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.COMPARTMENTDEFINITION_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT COMPARTMENTDEFINITION_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.COMPARTMENTDEFINITION_RESOURCES_PRF_IN1 ON FHIRAPP.COMPARTMENTDEFINITION_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.COMPARTMENTDEFINITION_RESOURCES_TENANT                      ON FHIRAPP.COMPARTMENTDEFINITION_RESOURCES          FOR ROWS WHERE FHIRAPP.COMPARTMENTDEFINITION_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.COMPARTMENTDEFINITION_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.COMPARTMENTDEFINITION_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_COMPARTMENTDEFINITION_STR_VALUES_PLR ON FHIRAPP.COMPARTMENTDEFINITION_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_COMPARTMENTDEFINITION_STR_VALUES_RPS ON FHIRAPP.COMPARTMENTDEFINITION_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

CREATE INDEX FHIRAPP.IDX_COMPARTMENTDEFINITION_STR_VALUES_PSR ON FHIRAPP.COMPARTMENTDEFINITION_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_COMPARTMENTDEFINITION_STR_VALUES_RPL ON FHIRAPP.COMPARTMENTDEFINITION_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

ALTER TABLE FHIRAPP.COMPARTMENTDEFINITION_STR_VALUES ADD CONSTRAINT FK_COMPARTMENTDEFINITION_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.COMPARTMENTDEFINITION_STR_VALUES ADD CONSTRAINT FK_COMPARTMENTDEFINITION_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.COMPARTMENTDEFINITION_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.COMPARTMENTDEFINITION_STR_VALUES_TENANT                      ON FHIRAPP.COMPARTMENTDEFINITION_STR_VALUES          FOR ROWS WHERE FHIRAPP.COMPARTMENTDEFINITION_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.COMPARTMENTDEFINITION_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.COMPARTMENTDEFINITION_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_COMPARTMENTDEFINITION_TOKEN_VALUES_PNCSCV ON FHIRAPP.COMPARTMENTDEFINITION_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_COMPARTMENTDEFINITION_TOKEN_VALUES_RPS ON FHIRAPP.COMPARTMENTDEFINITION_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

ALTER TABLE FHIRAPP.COMPARTMENTDEFINITION_TOKEN_VALUES ADD CONSTRAINT FK_COMPARTMENTDEFINITION_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.COMPARTMENTDEFINITION_TOKEN_VALUES ADD CONSTRAINT FK_COMPARTMENTDEFINITION_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

ALTER TABLE FHIRAPP.COMPARTMENTDEFINITION_TOKEN_VALUES ADD CONSTRAINT FK_COMPARTMENTDEFINITION_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.COMPARTMENTDEFINITION_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.COMPARTMENTDEFINITION_TOKEN_VALUES_TENANT                      ON FHIRAPP.COMPARTMENTDEFINITION_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.COMPARTMENTDEFINITION_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.COMPARTMENTDEFINITION_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.COMPARTMENTDEFINITION_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_COMPARTMENTDEFINITION_DATE_VALUES_RPV ON FHIRAPP.COMPARTMENTDEFINITION_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

CREATE INDEX FHIRAPP.IDX_COMPARTMENTDEFINITION_DATE_VALUES_PSER ON FHIRAPP.COMPARTMENTDEFINITION_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_COMPARTMENTDEFINITION_DATE_VALUES_RPSE ON FHIRAPP.COMPARTMENTDEFINITION_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

CREATE INDEX FHIRAPP.IDX_COMPARTMENTDEFINITION_DATE_VALUES_PVR ON FHIRAPP.COMPARTMENTDEFINITION_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_COMPARTMENTDEFINITION_DATE_VALUES_PESR ON FHIRAPP.COMPARTMENTDEFINITION_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.COMPARTMENTDEFINITION_DATE_VALUES ADD CONSTRAINT FK_COMPARTMENTDEFINITION_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.COMPARTMENTDEFINITION_DATE_VALUES ADD CONSTRAINT FK_COMPARTMENTDEFINITION_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.COMPARTMENTDEFINITION_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.COMPARTMENTDEFINITION_DATE_VALUES_TENANT                      ON FHIRAPP.COMPARTMENTDEFINITION_DATE_VALUES          FOR ROWS WHERE FHIRAPP.COMPARTMENTDEFINITION_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.COMPARTMENTDEFINITION_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.COMPARTMENTDEFINITION_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_COMPARTMENTDEFINITION_NUMBER_VALUES_PNNV ON FHIRAPP.COMPARTMENTDEFINITION_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_COMPARTMENTDEFINITION_NUMBER_VALUES_RPS ON FHIRAPP.COMPARTMENTDEFINITION_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

ALTER TABLE FHIRAPP.COMPARTMENTDEFINITION_NUMBER_VALUES ADD CONSTRAINT FK_COMPARTMENTDEFINITION_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.COMPARTMENTDEFINITION_NUMBER_VALUES ADD CONSTRAINT FK_COMPARTMENTDEFINITION_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.COMPARTMENTDEFINITION_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.COMPARTMENTDEFINITION_NUMBER_VALUES_TENANT                      ON FHIRAPP.COMPARTMENTDEFINITION_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.COMPARTMENTDEFINITION_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.COMPARTMENTDEFINITION_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.COMPARTMENTDEFINITION_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_COMPARTMENTDEFINITION_LATLNG_VALUES_PNNLV ON FHIRAPP.COMPARTMENTDEFINITION_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_COMPARTMENTDEFINITION_LATLNG_VALUES_RPLNG ON FHIRAPP.COMPARTMENTDEFINITION_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_COMPARTMENTDEFINITION_LATLNG_VALUES_PNNHV ON FHIRAPP.COMPARTMENTDEFINITION_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_COMPARTMENTDEFINITION_LATLNG_VALUES_RPLAT ON FHIRAPP.COMPARTMENTDEFINITION_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

ALTER TABLE FHIRAPP.COMPARTMENTDEFINITION_LATLNG_VALUES ADD CONSTRAINT FK_COMPARTMENTDEFINITION_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.COMPARTMENTDEFINITION_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.COMPARTMENTDEFINITION_LATLNG_VALUES ADD CONSTRAINT FK_COMPARTMENTDEFINITION_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.COMPARTMENTDEFINITION_LATLNG_VALUES_TENANT                      ON FHIRAPP.COMPARTMENTDEFINITION_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.COMPARTMENTDEFINITION_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.COMPARTMENTDEFINITION_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.COMPARTMENTDEFINITION_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_COMPARTMENTDEFINITION_QUANTITY_VALUES_RPCLHS ON FHIRAPP.COMPARTMENTDEFINITION_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_COMPARTMENTDEFINITION_QUANTITY_VALUES_RPS ON FHIRAPP.COMPARTMENTDEFINITION_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_COMPARTMENTDEFINITION_QUANTITY_VALUES_RPCHLS ON FHIRAPP.COMPARTMENTDEFINITION_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_COMPARTMENTDEFINITION_QUANTITY_VALUES_PCLHSR ON FHIRAPP.COMPARTMENTDEFINITION_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_COMPARTMENTDEFINITION_QUANTITY_VALUES_PCHLSR ON FHIRAPP.COMPARTMENTDEFINITION_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_COMPARTMENTDEFINITION_QUANTITY_VALUES_PNNV ON FHIRAPP.COMPARTMENTDEFINITION_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

ALTER TABLE FHIRAPP.COMPARTMENTDEFINITION_QUANTITY_VALUES ADD CONSTRAINT FK_COMPARTMENTDEFINITION_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.COMPARTMENTDEFINITION_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.COMPARTMENTDEFINITION_QUANTITY_VALUES ADD CONSTRAINT FK_COMPARTMENTDEFINITION_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.COMPARTMENTDEFINITION_QUANTITY_VALUES_TENANT                      ON FHIRAPP.COMPARTMENTDEFINITION_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.COMPARTMENTDEFINITION_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.COMPARTMENTDEFINITION_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDICATIONKNOWLEDGE_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT MEDICATIONKNOWLEDGE_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.MEDICATIONKNOWLEDGE_LOGICAL_RESOURCES ADD CONSTRAINT FK_MEDICATIONKNOWLEDGE_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.MEDICATIONKNOWLEDGE_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.MEDICATIONKNOWLEDGE_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.MEDICATIONKNOWLEDGE_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDICATIONKNOWLEDGE_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDICATIONKNOWLEDGE_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT MEDICATIONKNOWLEDGE_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.MEDICATIONKNOWLEDGE_RESOURCES_PRF_IN1 ON FHIRAPP.MEDICATIONKNOWLEDGE_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.MEDICATIONKNOWLEDGE_RESOURCES_TENANT                      ON FHIRAPP.MEDICATIONKNOWLEDGE_RESOURCES          FOR ROWS WHERE FHIRAPP.MEDICATIONKNOWLEDGE_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDICATIONKNOWLEDGE_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDICATIONKNOWLEDGE_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_MEDICATIONKNOWLEDGE_STR_VALUES_RPS ON FHIRAPP.MEDICATIONKNOWLEDGE_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

CREATE INDEX FHIRAPP.IDX_MEDICATIONKNOWLEDGE_STR_VALUES_PLR ON FHIRAPP.MEDICATIONKNOWLEDGE_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEDICATIONKNOWLEDGE_STR_VALUES_RPL ON FHIRAPP.MEDICATIONKNOWLEDGE_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

CREATE INDEX FHIRAPP.IDX_MEDICATIONKNOWLEDGE_STR_VALUES_PSR ON FHIRAPP.MEDICATIONKNOWLEDGE_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.MEDICATIONKNOWLEDGE_STR_VALUES ADD CONSTRAINT FK_MEDICATIONKNOWLEDGE_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.MEDICATIONKNOWLEDGE_STR_VALUES ADD CONSTRAINT FK_MEDICATIONKNOWLEDGE_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.MEDICATIONKNOWLEDGE_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.MEDICATIONKNOWLEDGE_STR_VALUES_TENANT                      ON FHIRAPP.MEDICATIONKNOWLEDGE_STR_VALUES          FOR ROWS WHERE FHIRAPP.MEDICATIONKNOWLEDGE_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDICATIONKNOWLEDGE_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDICATIONKNOWLEDGE_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_MEDICATIONKNOWLEDGE_TOKEN_VALUES_PNCSCV ON FHIRAPP.MEDICATIONKNOWLEDGE_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEDICATIONKNOWLEDGE_TOKEN_VALUES_RPS ON FHIRAPP.MEDICATIONKNOWLEDGE_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

ALTER TABLE FHIRAPP.MEDICATIONKNOWLEDGE_TOKEN_VALUES ADD CONSTRAINT FK_MEDICATIONKNOWLEDGE_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.MEDICATIONKNOWLEDGE_TOKEN_VALUES ADD CONSTRAINT FK_MEDICATIONKNOWLEDGE_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

ALTER TABLE FHIRAPP.MEDICATIONKNOWLEDGE_TOKEN_VALUES ADD CONSTRAINT FK_MEDICATIONKNOWLEDGE_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.MEDICATIONKNOWLEDGE_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.MEDICATIONKNOWLEDGE_TOKEN_VALUES_TENANT                      ON FHIRAPP.MEDICATIONKNOWLEDGE_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.MEDICATIONKNOWLEDGE_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDICATIONKNOWLEDGE_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDICATIONKNOWLEDGE_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_MEDICATIONKNOWLEDGE_DATE_VALUES_PESR ON FHIRAPP.MEDICATIONKNOWLEDGE_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEDICATIONKNOWLEDGE_DATE_VALUES_PVR ON FHIRAPP.MEDICATIONKNOWLEDGE_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEDICATIONKNOWLEDGE_DATE_VALUES_PSER ON FHIRAPP.MEDICATIONKNOWLEDGE_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEDICATIONKNOWLEDGE_DATE_VALUES_RPSE ON FHIRAPP.MEDICATIONKNOWLEDGE_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

CREATE INDEX FHIRAPP.IDX_MEDICATIONKNOWLEDGE_DATE_VALUES_RPV ON FHIRAPP.MEDICATIONKNOWLEDGE_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

ALTER TABLE FHIRAPP.MEDICATIONKNOWLEDGE_DATE_VALUES ADD CONSTRAINT FK_MEDICATIONKNOWLEDGE_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.MEDICATIONKNOWLEDGE_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.MEDICATIONKNOWLEDGE_DATE_VALUES ADD CONSTRAINT FK_MEDICATIONKNOWLEDGE_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.MEDICATIONKNOWLEDGE_DATE_VALUES_TENANT                      ON FHIRAPP.MEDICATIONKNOWLEDGE_DATE_VALUES          FOR ROWS WHERE FHIRAPP.MEDICATIONKNOWLEDGE_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDICATIONKNOWLEDGE_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDICATIONKNOWLEDGE_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_MEDICATIONKNOWLEDGE_NUMBER_VALUES_PNNV ON FHIRAPP.MEDICATIONKNOWLEDGE_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEDICATIONKNOWLEDGE_NUMBER_VALUES_RPS ON FHIRAPP.MEDICATIONKNOWLEDGE_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

ALTER TABLE FHIRAPP.MEDICATIONKNOWLEDGE_NUMBER_VALUES ADD CONSTRAINT FK_MEDICATIONKNOWLEDGE_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.MEDICATIONKNOWLEDGE_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.MEDICATIONKNOWLEDGE_NUMBER_VALUES ADD CONSTRAINT FK_MEDICATIONKNOWLEDGE_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.MEDICATIONKNOWLEDGE_NUMBER_VALUES_TENANT                      ON FHIRAPP.MEDICATIONKNOWLEDGE_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.MEDICATIONKNOWLEDGE_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDICATIONKNOWLEDGE_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDICATIONKNOWLEDGE_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_MEDICATIONKNOWLEDGE_LATLNG_VALUES_PNNHV ON FHIRAPP.MEDICATIONKNOWLEDGE_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEDICATIONKNOWLEDGE_LATLNG_VALUES_RPLNG ON FHIRAPP.MEDICATIONKNOWLEDGE_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_MEDICATIONKNOWLEDGE_LATLNG_VALUES_PNNLV ON FHIRAPP.MEDICATIONKNOWLEDGE_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEDICATIONKNOWLEDGE_LATLNG_VALUES_RPLAT ON FHIRAPP.MEDICATIONKNOWLEDGE_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

ALTER TABLE FHIRAPP.MEDICATIONKNOWLEDGE_LATLNG_VALUES ADD CONSTRAINT FK_MEDICATIONKNOWLEDGE_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.MEDICATIONKNOWLEDGE_LATLNG_VALUES ADD CONSTRAINT FK_MEDICATIONKNOWLEDGE_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.MEDICATIONKNOWLEDGE_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.MEDICATIONKNOWLEDGE_LATLNG_VALUES_TENANT                      ON FHIRAPP.MEDICATIONKNOWLEDGE_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.MEDICATIONKNOWLEDGE_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDICATIONKNOWLEDGE_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDICATIONKNOWLEDGE_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_MEDICATIONKNOWLEDGE_QUANTITY_VALUES_RPS ON FHIRAPP.MEDICATIONKNOWLEDGE_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_MEDICATIONKNOWLEDGE_QUANTITY_VALUES_RPCHLS ON FHIRAPP.MEDICATIONKNOWLEDGE_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_MEDICATIONKNOWLEDGE_QUANTITY_VALUES_PCHLSR ON FHIRAPP.MEDICATIONKNOWLEDGE_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEDICATIONKNOWLEDGE_QUANTITY_VALUES_RPCLHS ON FHIRAPP.MEDICATIONKNOWLEDGE_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_MEDICATIONKNOWLEDGE_QUANTITY_VALUES_PNNV ON FHIRAPP.MEDICATIONKNOWLEDGE_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_MEDICATIONKNOWLEDGE_QUANTITY_VALUES_PCLHSR ON FHIRAPP.MEDICATIONKNOWLEDGE_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.MEDICATIONKNOWLEDGE_QUANTITY_VALUES ADD CONSTRAINT FK_MEDICATIONKNOWLEDGE_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.MEDICATIONKNOWLEDGE_QUANTITY_VALUES ADD CONSTRAINT FK_MEDICATIONKNOWLEDGE_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.MEDICATIONKNOWLEDGE_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.MEDICATIONKNOWLEDGE_QUANTITY_VALUES_TENANT                      ON FHIRAPP.MEDICATIONKNOWLEDGE_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.MEDICATIONKNOWLEDGE_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDICATIONKNOWLEDGE_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDICINALPRODUCTINGREDIENT_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT MEDICINALPRODUCTINGREDIENT_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.MEDICINALPRODUCTINGREDIENT_LOGICAL_RESOURCES ADD CONSTRAINT FK_MEDICINALPRODUCTINGREDIENT_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.MEDICINALPRODUCTINGREDIENT_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.MEDICINALPRODUCTINGREDIENT_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.MEDICINALPRODUCTINGREDIENT_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDICINALPRODUCTINGREDIENT_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDICINALPRODUCTINGREDIENT_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT MEDICINALPRODUCTINGREDIENT_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.MEDICINALPRODUCTINGREDIENT_RESOURCES_PRF_IN1 ON FHIRAPP.MEDICINALPRODUCTINGREDIENT_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.MEDICINALPRODUCTINGREDIENT_RESOURCES_TENANT                      ON FHIRAPP.MEDICINALPRODUCTINGREDIENT_RESOURCES          FOR ROWS WHERE FHIRAPP.MEDICINALPRODUCTINGREDIENT_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDICINALPRODUCTINGREDIENT_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDICINALPRODUCTINGREDIENT_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTINGREDIENT_STR_VALUES_RPS ON FHIRAPP.MEDICINALPRODUCTINGREDIENT_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTINGREDIENT_STR_VALUES_PLR ON FHIRAPP.MEDICINALPRODUCTINGREDIENT_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTINGREDIENT_STR_VALUES_PSR ON FHIRAPP.MEDICINALPRODUCTINGREDIENT_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTINGREDIENT_STR_VALUES_RPL ON FHIRAPP.MEDICINALPRODUCTINGREDIENT_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

ALTER TABLE FHIRAPP.MEDICINALPRODUCTINGREDIENT_STR_VALUES ADD CONSTRAINT FK_MEDICINALPRODUCTINGREDIENT_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.MEDICINALPRODUCTINGREDIENT_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.MEDICINALPRODUCTINGREDIENT_STR_VALUES ADD CONSTRAINT FK_MEDICINALPRODUCTINGREDIENT_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.MEDICINALPRODUCTINGREDIENT_STR_VALUES_TENANT                      ON FHIRAPP.MEDICINALPRODUCTINGREDIENT_STR_VALUES          FOR ROWS WHERE FHIRAPP.MEDICINALPRODUCTINGREDIENT_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDICINALPRODUCTINGREDIENT_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDICINALPRODUCTINGREDIENT_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTINGREDIENT_TOKEN_VALUES_RPS ON FHIRAPP.MEDICINALPRODUCTINGREDIENT_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTINGREDIENT_TOKEN_VALUES_PNCSCV ON FHIRAPP.MEDICINALPRODUCTINGREDIENT_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.MEDICINALPRODUCTINGREDIENT_TOKEN_VALUES ADD CONSTRAINT FK_MEDICINALPRODUCTINGREDIENT_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

ALTER TABLE FHIRAPP.MEDICINALPRODUCTINGREDIENT_TOKEN_VALUES ADD CONSTRAINT FK_MEDICINALPRODUCTINGREDIENT_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.MEDICINALPRODUCTINGREDIENT_TOKEN_VALUES ADD CONSTRAINT FK_MEDICINALPRODUCTINGREDIENT_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.MEDICINALPRODUCTINGREDIENT_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.MEDICINALPRODUCTINGREDIENT_TOKEN_VALUES_TENANT                      ON FHIRAPP.MEDICINALPRODUCTINGREDIENT_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.MEDICINALPRODUCTINGREDIENT_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDICINALPRODUCTINGREDIENT_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDICINALPRODUCTINGREDIENT_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTINGREDIENT_DATE_VALUES_PSER ON FHIRAPP.MEDICINALPRODUCTINGREDIENT_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTINGREDIENT_DATE_VALUES_PVR ON FHIRAPP.MEDICINALPRODUCTINGREDIENT_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTINGREDIENT_DATE_VALUES_PESR ON FHIRAPP.MEDICINALPRODUCTINGREDIENT_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTINGREDIENT_DATE_VALUES_RPV ON FHIRAPP.MEDICINALPRODUCTINGREDIENT_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTINGREDIENT_DATE_VALUES_RPSE ON FHIRAPP.MEDICINALPRODUCTINGREDIENT_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

ALTER TABLE FHIRAPP.MEDICINALPRODUCTINGREDIENT_DATE_VALUES ADD CONSTRAINT FK_MEDICINALPRODUCTINGREDIENT_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.MEDICINALPRODUCTINGREDIENT_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.MEDICINALPRODUCTINGREDIENT_DATE_VALUES ADD CONSTRAINT FK_MEDICINALPRODUCTINGREDIENT_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.MEDICINALPRODUCTINGREDIENT_DATE_VALUES_TENANT                      ON FHIRAPP.MEDICINALPRODUCTINGREDIENT_DATE_VALUES          FOR ROWS WHERE FHIRAPP.MEDICINALPRODUCTINGREDIENT_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDICINALPRODUCTINGREDIENT_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDICINALPRODUCTINGREDIENT_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTINGREDIENT_NUMBER_VALUES_PNNV ON FHIRAPP.MEDICINALPRODUCTINGREDIENT_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTINGREDIENT_NUMBER_VALUES_RPS ON FHIRAPP.MEDICINALPRODUCTINGREDIENT_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

ALTER TABLE FHIRAPP.MEDICINALPRODUCTINGREDIENT_NUMBER_VALUES ADD CONSTRAINT FK_MEDICINALPRODUCTINGREDIENT_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.MEDICINALPRODUCTINGREDIENT_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.MEDICINALPRODUCTINGREDIENT_NUMBER_VALUES ADD CONSTRAINT FK_MEDICINALPRODUCTINGREDIENT_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.MEDICINALPRODUCTINGREDIENT_NUMBER_VALUES_TENANT                      ON FHIRAPP.MEDICINALPRODUCTINGREDIENT_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.MEDICINALPRODUCTINGREDIENT_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDICINALPRODUCTINGREDIENT_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDICINALPRODUCTINGREDIENT_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTINGREDIENT_LATLNG_VALUES_RPLNG ON FHIRAPP.MEDICINALPRODUCTINGREDIENT_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTINGREDIENT_LATLNG_VALUES_PNNHV ON FHIRAPP.MEDICINALPRODUCTINGREDIENT_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTINGREDIENT_LATLNG_VALUES_PNNLV ON FHIRAPP.MEDICINALPRODUCTINGREDIENT_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTINGREDIENT_LATLNG_VALUES_RPLAT ON FHIRAPP.MEDICINALPRODUCTINGREDIENT_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

ALTER TABLE FHIRAPP.MEDICINALPRODUCTINGREDIENT_LATLNG_VALUES ADD CONSTRAINT FK_MEDICINALPRODUCTINGREDIENT_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.MEDICINALPRODUCTINGREDIENT_LATLNG_VALUES ADD CONSTRAINT FK_MEDICINALPRODUCTINGREDIENT_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.MEDICINALPRODUCTINGREDIENT_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.MEDICINALPRODUCTINGREDIENT_LATLNG_VALUES_TENANT                      ON FHIRAPP.MEDICINALPRODUCTINGREDIENT_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.MEDICINALPRODUCTINGREDIENT_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDICINALPRODUCTINGREDIENT_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDICINALPRODUCTINGREDIENT_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTINGREDIENT_QUANTITY_VALUES_PCLHSR ON FHIRAPP.MEDICINALPRODUCTINGREDIENT_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTINGREDIENT_QUANTITY_VALUES_RPCHLS ON FHIRAPP.MEDICINALPRODUCTINGREDIENT_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTINGREDIENT_QUANTITY_VALUES_PNNV ON FHIRAPP.MEDICINALPRODUCTINGREDIENT_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTINGREDIENT_QUANTITY_VALUES_RPCLHS ON FHIRAPP.MEDICINALPRODUCTINGREDIENT_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTINGREDIENT_QUANTITY_VALUES_PCHLSR ON FHIRAPP.MEDICINALPRODUCTINGREDIENT_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTINGREDIENT_QUANTITY_VALUES_RPS ON FHIRAPP.MEDICINALPRODUCTINGREDIENT_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

ALTER TABLE FHIRAPP.MEDICINALPRODUCTINGREDIENT_QUANTITY_VALUES ADD CONSTRAINT FK_MEDICINALPRODUCTINGREDIENT_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.MEDICINALPRODUCTINGREDIENT_QUANTITY_VALUES ADD CONSTRAINT FK_MEDICINALPRODUCTINGREDIENT_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.MEDICINALPRODUCTINGREDIENT_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.MEDICINALPRODUCTINGREDIENT_QUANTITY_VALUES_TENANT                      ON FHIRAPP.MEDICINALPRODUCTINGREDIENT_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.MEDICINALPRODUCTINGREDIENT_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDICINALPRODUCTINGREDIENT_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.PATIENT_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT PATIENT_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.PATIENT_LOGICAL_RESOURCES ADD CONSTRAINT FK_PATIENT_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.PATIENT_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.PATIENT_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.PATIENT_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.PATIENT_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.PATIENT_CURRENT_REFS(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, CURRENT_PROBLEMS_LIST VARCHAR(255 OCTETS), CURRENT_MEDICATIONS_LIST VARCHAR(255 OCTETS), CURRENT_ALLERGIES_LIST VARCHAR(255 OCTETS), CURRENT_DRUG_ALLERGIES_LIST VARCHAR(255 OCTETS), CONSTRAINT PK_PATIENT_CURRENT_REFS PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.PATIENT_CURRENT_REFS ADD CONSTRAINT FK_PATIENT_CURRENT_REFS_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.PATIENT_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.PATIENT_CURRENT_REFS_TENANT                      ON FHIRAPP.PATIENT_CURRENT_REFS          FOR ROWS WHERE FHIRAPP.PATIENT_CURRENT_REFS.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.PATIENT_CURRENT_REFS ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.PATIENT_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT PATIENT_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.PATIENT_RESOURCES_PRF_IN1 ON FHIRAPP.PATIENT_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.PATIENT_RESOURCES_TENANT                      ON FHIRAPP.PATIENT_RESOURCES          FOR ROWS WHERE FHIRAPP.PATIENT_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.PATIENT_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.PATIENT_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_PATIENT_STR_VALUES_RPL ON FHIRAPP.PATIENT_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

CREATE INDEX FHIRAPP.IDX_PATIENT_STR_VALUES_PSR ON FHIRAPP.PATIENT_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_PATIENT_STR_VALUES_PLR ON FHIRAPP.PATIENT_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_PATIENT_STR_VALUES_RPS ON FHIRAPP.PATIENT_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

ALTER TABLE FHIRAPP.PATIENT_STR_VALUES ADD CONSTRAINT FK_PATIENT_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.PATIENT_STR_VALUES ADD CONSTRAINT FK_PATIENT_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.PATIENT_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.PATIENT_STR_VALUES_TENANT                      ON FHIRAPP.PATIENT_STR_VALUES          FOR ROWS WHERE FHIRAPP.PATIENT_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.PATIENT_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.PATIENT_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_PATIENT_TOKEN_VALUES_RPS ON FHIRAPP.PATIENT_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

CREATE INDEX FHIRAPP.IDX_PATIENT_TOKEN_VALUES_PNCSCV ON FHIRAPP.PATIENT_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.PATIENT_TOKEN_VALUES ADD CONSTRAINT FK_PATIENT_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

ALTER TABLE FHIRAPP.PATIENT_TOKEN_VALUES ADD CONSTRAINT FK_PATIENT_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.PATIENT_TOKEN_VALUES ADD CONSTRAINT FK_PATIENT_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.PATIENT_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.PATIENT_TOKEN_VALUES_TENANT                      ON FHIRAPP.PATIENT_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.PATIENT_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.PATIENT_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.PATIENT_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_PATIENT_DATE_VALUES_PESR ON FHIRAPP.PATIENT_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_PATIENT_DATE_VALUES_RPV ON FHIRAPP.PATIENT_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

CREATE INDEX FHIRAPP.IDX_PATIENT_DATE_VALUES_PSER ON FHIRAPP.PATIENT_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_PATIENT_DATE_VALUES_RPSE ON FHIRAPP.PATIENT_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

CREATE INDEX FHIRAPP.IDX_PATIENT_DATE_VALUES_PVR ON FHIRAPP.PATIENT_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.PATIENT_DATE_VALUES ADD CONSTRAINT FK_PATIENT_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.PATIENT_DATE_VALUES ADD CONSTRAINT FK_PATIENT_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.PATIENT_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.PATIENT_DATE_VALUES_TENANT                      ON FHIRAPP.PATIENT_DATE_VALUES          FOR ROWS WHERE FHIRAPP.PATIENT_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.PATIENT_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.PATIENT_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_PATIENT_NUMBER_VALUES_RPS ON FHIRAPP.PATIENT_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

CREATE INDEX FHIRAPP.IDX_PATIENT_NUMBER_VALUES_PNNV ON FHIRAPP.PATIENT_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.PATIENT_NUMBER_VALUES ADD CONSTRAINT FK_PATIENT_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.PATIENT_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.PATIENT_NUMBER_VALUES ADD CONSTRAINT FK_PATIENT_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.PATIENT_NUMBER_VALUES_TENANT                      ON FHIRAPP.PATIENT_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.PATIENT_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.PATIENT_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.PATIENT_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_PATIENT_LATLNG_VALUES_PNNHV ON FHIRAPP.PATIENT_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_PATIENT_LATLNG_VALUES_PNNLV ON FHIRAPP.PATIENT_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_PATIENT_LATLNG_VALUES_RPLAT ON FHIRAPP.PATIENT_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_PATIENT_LATLNG_VALUES_RPLNG ON FHIRAPP.PATIENT_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

ALTER TABLE FHIRAPP.PATIENT_LATLNG_VALUES ADD CONSTRAINT FK_PATIENT_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.PATIENT_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.PATIENT_LATLNG_VALUES ADD CONSTRAINT FK_PATIENT_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.PATIENT_LATLNG_VALUES_TENANT                      ON FHIRAPP.PATIENT_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.PATIENT_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.PATIENT_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.PATIENT_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_PATIENT_QUANTITY_VALUES_PCHLSR ON FHIRAPP.PATIENT_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_PATIENT_QUANTITY_VALUES_PCLHSR ON FHIRAPP.PATIENT_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_PATIENT_QUANTITY_VALUES_RPCHLS ON FHIRAPP.PATIENT_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_PATIENT_QUANTITY_VALUES_PNNV ON FHIRAPP.PATIENT_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_PATIENT_QUANTITY_VALUES_RPS ON FHIRAPP.PATIENT_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_PATIENT_QUANTITY_VALUES_RPCLHS ON FHIRAPP.PATIENT_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

ALTER TABLE FHIRAPP.PATIENT_QUANTITY_VALUES ADD CONSTRAINT FK_PATIENT_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.PATIENT_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.PATIENT_QUANTITY_VALUES ADD CONSTRAINT FK_PATIENT_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.PATIENT_QUANTITY_VALUES_TENANT                      ON FHIRAPP.PATIENT_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.PATIENT_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.PATIENT_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.COVERAGE_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT COVERAGE_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.COVERAGE_LOGICAL_RESOURCES ADD CONSTRAINT FK_COVERAGE_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.COVERAGE_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.COVERAGE_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.COVERAGE_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.COVERAGE_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.COVERAGE_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT COVERAGE_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.COVERAGE_RESOURCES_PRF_IN1 ON FHIRAPP.COVERAGE_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.COVERAGE_RESOURCES_TENANT                      ON FHIRAPP.COVERAGE_RESOURCES          FOR ROWS WHERE FHIRAPP.COVERAGE_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.COVERAGE_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.COVERAGE_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_COVERAGE_STR_VALUES_PLR ON FHIRAPP.COVERAGE_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_COVERAGE_STR_VALUES_RPS ON FHIRAPP.COVERAGE_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

CREATE INDEX FHIRAPP.IDX_COVERAGE_STR_VALUES_RPL ON FHIRAPP.COVERAGE_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

CREATE INDEX FHIRAPP.IDX_COVERAGE_STR_VALUES_PSR ON FHIRAPP.COVERAGE_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.COVERAGE_STR_VALUES ADD CONSTRAINT FK_COVERAGE_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.COVERAGE_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.COVERAGE_STR_VALUES ADD CONSTRAINT FK_COVERAGE_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.COVERAGE_STR_VALUES_TENANT                      ON FHIRAPP.COVERAGE_STR_VALUES          FOR ROWS WHERE FHIRAPP.COVERAGE_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.COVERAGE_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.COVERAGE_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_COVERAGE_TOKEN_VALUES_PNCSCV ON FHIRAPP.COVERAGE_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_COVERAGE_TOKEN_VALUES_RPS ON FHIRAPP.COVERAGE_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

ALTER TABLE FHIRAPP.COVERAGE_TOKEN_VALUES ADD CONSTRAINT FK_COVERAGE_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.COVERAGE_TOKEN_VALUES ADD CONSTRAINT FK_COVERAGE_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

ALTER TABLE FHIRAPP.COVERAGE_TOKEN_VALUES ADD CONSTRAINT FK_COVERAGE_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.COVERAGE_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.COVERAGE_TOKEN_VALUES_TENANT                      ON FHIRAPP.COVERAGE_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.COVERAGE_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.COVERAGE_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.COVERAGE_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_COVERAGE_DATE_VALUES_RPSE ON FHIRAPP.COVERAGE_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

CREATE INDEX FHIRAPP.IDX_COVERAGE_DATE_VALUES_RPV ON FHIRAPP.COVERAGE_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

CREATE INDEX FHIRAPP.IDX_COVERAGE_DATE_VALUES_PESR ON FHIRAPP.COVERAGE_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_COVERAGE_DATE_VALUES_PVR ON FHIRAPP.COVERAGE_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_COVERAGE_DATE_VALUES_PSER ON FHIRAPP.COVERAGE_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.COVERAGE_DATE_VALUES ADD CONSTRAINT FK_COVERAGE_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.COVERAGE_DATE_VALUES ADD CONSTRAINT FK_COVERAGE_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.COVERAGE_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.COVERAGE_DATE_VALUES_TENANT                      ON FHIRAPP.COVERAGE_DATE_VALUES          FOR ROWS WHERE FHIRAPP.COVERAGE_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.COVERAGE_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.COVERAGE_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_COVERAGE_NUMBER_VALUES_PNNV ON FHIRAPP.COVERAGE_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_COVERAGE_NUMBER_VALUES_RPS ON FHIRAPP.COVERAGE_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

ALTER TABLE FHIRAPP.COVERAGE_NUMBER_VALUES ADD CONSTRAINT FK_COVERAGE_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.COVERAGE_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.COVERAGE_NUMBER_VALUES ADD CONSTRAINT FK_COVERAGE_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.COVERAGE_NUMBER_VALUES_TENANT                      ON FHIRAPP.COVERAGE_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.COVERAGE_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.COVERAGE_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.COVERAGE_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_COVERAGE_LATLNG_VALUES_RPLNG ON FHIRAPP.COVERAGE_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_COVERAGE_LATLNG_VALUES_PNNLV ON FHIRAPP.COVERAGE_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_COVERAGE_LATLNG_VALUES_PNNHV ON FHIRAPP.COVERAGE_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_COVERAGE_LATLNG_VALUES_RPLAT ON FHIRAPP.COVERAGE_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

ALTER TABLE FHIRAPP.COVERAGE_LATLNG_VALUES ADD CONSTRAINT FK_COVERAGE_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.COVERAGE_LATLNG_VALUES ADD CONSTRAINT FK_COVERAGE_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.COVERAGE_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.COVERAGE_LATLNG_VALUES_TENANT                      ON FHIRAPP.COVERAGE_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.COVERAGE_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.COVERAGE_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.COVERAGE_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_COVERAGE_QUANTITY_VALUES_PNNV ON FHIRAPP.COVERAGE_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_COVERAGE_QUANTITY_VALUES_PCLHSR ON FHIRAPP.COVERAGE_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_COVERAGE_QUANTITY_VALUES_RPCHLS ON FHIRAPP.COVERAGE_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_COVERAGE_QUANTITY_VALUES_PCHLSR ON FHIRAPP.COVERAGE_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_COVERAGE_QUANTITY_VALUES_RPCLHS ON FHIRAPP.COVERAGE_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_COVERAGE_QUANTITY_VALUES_RPS ON FHIRAPP.COVERAGE_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

ALTER TABLE FHIRAPP.COVERAGE_QUANTITY_VALUES ADD CONSTRAINT FK_COVERAGE_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.COVERAGE_QUANTITY_VALUES ADD CONSTRAINT FK_COVERAGE_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.COVERAGE_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.COVERAGE_QUANTITY_VALUES_TENANT                      ON FHIRAPP.COVERAGE_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.COVERAGE_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.COVERAGE_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.QUESTIONNAIRERESPONSE_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT QUESTIONNAIRERESPONSE_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.QUESTIONNAIRERESPONSE_LOGICAL_RESOURCES ADD CONSTRAINT FK_QUESTIONNAIRERESPONSE_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.QUESTIONNAIRERESPONSE_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.QUESTIONNAIRERESPONSE_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.QUESTIONNAIRERESPONSE_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.QUESTIONNAIRERESPONSE_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.QUESTIONNAIRERESPONSE_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT QUESTIONNAIRERESPONSE_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.QUESTIONNAIRERESPONSE_RESOURCES_PRF_IN1 ON FHIRAPP.QUESTIONNAIRERESPONSE_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.QUESTIONNAIRERESPONSE_RESOURCES_TENANT                      ON FHIRAPP.QUESTIONNAIRERESPONSE_RESOURCES          FOR ROWS WHERE FHIRAPP.QUESTIONNAIRERESPONSE_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.QUESTIONNAIRERESPONSE_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.QUESTIONNAIRERESPONSE_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_QUESTIONNAIRERESPONSE_STR_VALUES_PSR ON FHIRAPP.QUESTIONNAIRERESPONSE_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_QUESTIONNAIRERESPONSE_STR_VALUES_RPL ON FHIRAPP.QUESTIONNAIRERESPONSE_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

CREATE INDEX FHIRAPP.IDX_QUESTIONNAIRERESPONSE_STR_VALUES_RPS ON FHIRAPP.QUESTIONNAIRERESPONSE_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

CREATE INDEX FHIRAPP.IDX_QUESTIONNAIRERESPONSE_STR_VALUES_PLR ON FHIRAPP.QUESTIONNAIRERESPONSE_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.QUESTIONNAIRERESPONSE_STR_VALUES ADD CONSTRAINT FK_QUESTIONNAIRERESPONSE_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.QUESTIONNAIRERESPONSE_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.QUESTIONNAIRERESPONSE_STR_VALUES ADD CONSTRAINT FK_QUESTIONNAIRERESPONSE_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.QUESTIONNAIRERESPONSE_STR_VALUES_TENANT                      ON FHIRAPP.QUESTIONNAIRERESPONSE_STR_VALUES          FOR ROWS WHERE FHIRAPP.QUESTIONNAIRERESPONSE_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.QUESTIONNAIRERESPONSE_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.QUESTIONNAIRERESPONSE_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_QUESTIONNAIRERESPONSE_TOKEN_VALUES_PNCSCV ON FHIRAPP.QUESTIONNAIRERESPONSE_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_QUESTIONNAIRERESPONSE_TOKEN_VALUES_RPS ON FHIRAPP.QUESTIONNAIRERESPONSE_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

ALTER TABLE FHIRAPP.QUESTIONNAIRERESPONSE_TOKEN_VALUES ADD CONSTRAINT FK_QUESTIONNAIRERESPONSE_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

ALTER TABLE FHIRAPP.QUESTIONNAIRERESPONSE_TOKEN_VALUES ADD CONSTRAINT FK_QUESTIONNAIRERESPONSE_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.QUESTIONNAIRERESPONSE_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.QUESTIONNAIRERESPONSE_TOKEN_VALUES ADD CONSTRAINT FK_QUESTIONNAIRERESPONSE_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.QUESTIONNAIRERESPONSE_TOKEN_VALUES_TENANT                      ON FHIRAPP.QUESTIONNAIRERESPONSE_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.QUESTIONNAIRERESPONSE_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.QUESTIONNAIRERESPONSE_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.QUESTIONNAIRERESPONSE_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_QUESTIONNAIRERESPONSE_DATE_VALUES_PESR ON FHIRAPP.QUESTIONNAIRERESPONSE_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_QUESTIONNAIRERESPONSE_DATE_VALUES_PVR ON FHIRAPP.QUESTIONNAIRERESPONSE_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_QUESTIONNAIRERESPONSE_DATE_VALUES_RPSE ON FHIRAPP.QUESTIONNAIRERESPONSE_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

CREATE INDEX FHIRAPP.IDX_QUESTIONNAIRERESPONSE_DATE_VALUES_PSER ON FHIRAPP.QUESTIONNAIRERESPONSE_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_QUESTIONNAIRERESPONSE_DATE_VALUES_RPV ON FHIRAPP.QUESTIONNAIRERESPONSE_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

ALTER TABLE FHIRAPP.QUESTIONNAIRERESPONSE_DATE_VALUES ADD CONSTRAINT FK_QUESTIONNAIRERESPONSE_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.QUESTIONNAIRERESPONSE_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.QUESTIONNAIRERESPONSE_DATE_VALUES ADD CONSTRAINT FK_QUESTIONNAIRERESPONSE_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.QUESTIONNAIRERESPONSE_DATE_VALUES_TENANT                      ON FHIRAPP.QUESTIONNAIRERESPONSE_DATE_VALUES          FOR ROWS WHERE FHIRAPP.QUESTIONNAIRERESPONSE_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.QUESTIONNAIRERESPONSE_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.QUESTIONNAIRERESPONSE_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_QUESTIONNAIRERESPONSE_NUMBER_VALUES_PNNV ON FHIRAPP.QUESTIONNAIRERESPONSE_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_QUESTIONNAIRERESPONSE_NUMBER_VALUES_RPS ON FHIRAPP.QUESTIONNAIRERESPONSE_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

ALTER TABLE FHIRAPP.QUESTIONNAIRERESPONSE_NUMBER_VALUES ADD CONSTRAINT FK_QUESTIONNAIRERESPONSE_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.QUESTIONNAIRERESPONSE_NUMBER_VALUES ADD CONSTRAINT FK_QUESTIONNAIRERESPONSE_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.QUESTIONNAIRERESPONSE_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.QUESTIONNAIRERESPONSE_NUMBER_VALUES_TENANT                      ON FHIRAPP.QUESTIONNAIRERESPONSE_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.QUESTIONNAIRERESPONSE_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.QUESTIONNAIRERESPONSE_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.QUESTIONNAIRERESPONSE_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_QUESTIONNAIRERESPONSE_LATLNG_VALUES_RPLNG ON FHIRAPP.QUESTIONNAIRERESPONSE_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_QUESTIONNAIRERESPONSE_LATLNG_VALUES_PNNLV ON FHIRAPP.QUESTIONNAIRERESPONSE_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_QUESTIONNAIRERESPONSE_LATLNG_VALUES_PNNHV ON FHIRAPP.QUESTIONNAIRERESPONSE_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_QUESTIONNAIRERESPONSE_LATLNG_VALUES_RPLAT ON FHIRAPP.QUESTIONNAIRERESPONSE_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

ALTER TABLE FHIRAPP.QUESTIONNAIRERESPONSE_LATLNG_VALUES ADD CONSTRAINT FK_QUESTIONNAIRERESPONSE_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.QUESTIONNAIRERESPONSE_LATLNG_VALUES ADD CONSTRAINT FK_QUESTIONNAIRERESPONSE_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.QUESTIONNAIRERESPONSE_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.QUESTIONNAIRERESPONSE_LATLNG_VALUES_TENANT                      ON FHIRAPP.QUESTIONNAIRERESPONSE_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.QUESTIONNAIRERESPONSE_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.QUESTIONNAIRERESPONSE_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.QUESTIONNAIRERESPONSE_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_QUESTIONNAIRERESPONSE_QUANTITY_VALUES_PCHLSR ON FHIRAPP.QUESTIONNAIRERESPONSE_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_QUESTIONNAIRERESPONSE_QUANTITY_VALUES_RPS ON FHIRAPP.QUESTIONNAIRERESPONSE_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_QUESTIONNAIRERESPONSE_QUANTITY_VALUES_PCLHSR ON FHIRAPP.QUESTIONNAIRERESPONSE_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_QUESTIONNAIRERESPONSE_QUANTITY_VALUES_RPCLHS ON FHIRAPP.QUESTIONNAIRERESPONSE_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_QUESTIONNAIRERESPONSE_QUANTITY_VALUES_PNNV ON FHIRAPP.QUESTIONNAIRERESPONSE_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_QUESTIONNAIRERESPONSE_QUANTITY_VALUES_RPCHLS ON FHIRAPP.QUESTIONNAIRERESPONSE_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

ALTER TABLE FHIRAPP.QUESTIONNAIRERESPONSE_QUANTITY_VALUES ADD CONSTRAINT FK_QUESTIONNAIRERESPONSE_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.QUESTIONNAIRERESPONSE_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.QUESTIONNAIRERESPONSE_QUANTITY_VALUES ADD CONSTRAINT FK_QUESTIONNAIRERESPONSE_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.QUESTIONNAIRERESPONSE_QUANTITY_VALUES_TENANT                      ON FHIRAPP.QUESTIONNAIRERESPONSE_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.QUESTIONNAIRERESPONSE_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.QUESTIONNAIRERESPONSE_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.COVERAGEELIGIBILITYREQUEST_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT COVERAGEELIGIBILITYREQUEST_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.COVERAGEELIGIBILITYREQUEST_LOGICAL_RESOURCES ADD CONSTRAINT FK_COVERAGEELIGIBILITYREQUEST_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.COVERAGEELIGIBILITYREQUEST_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.COVERAGEELIGIBILITYREQUEST_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.COVERAGEELIGIBILITYREQUEST_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.COVERAGEELIGIBILITYREQUEST_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.COVERAGEELIGIBILITYREQUEST_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT COVERAGEELIGIBILITYREQUEST_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.COVERAGEELIGIBILITYREQUEST_RESOURCES_PRF_IN1 ON FHIRAPP.COVERAGEELIGIBILITYREQUEST_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.COVERAGEELIGIBILITYREQUEST_RESOURCES_TENANT                      ON FHIRAPP.COVERAGEELIGIBILITYREQUEST_RESOURCES          FOR ROWS WHERE FHIRAPP.COVERAGEELIGIBILITYREQUEST_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.COVERAGEELIGIBILITYREQUEST_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.COVERAGEELIGIBILITYREQUEST_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_COVERAGEELIGIBILITYREQUEST_STR_VALUES_PSR ON FHIRAPP.COVERAGEELIGIBILITYREQUEST_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_COVERAGEELIGIBILITYREQUEST_STR_VALUES_RPL ON FHIRAPP.COVERAGEELIGIBILITYREQUEST_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

CREATE INDEX FHIRAPP.IDX_COVERAGEELIGIBILITYREQUEST_STR_VALUES_PLR ON FHIRAPP.COVERAGEELIGIBILITYREQUEST_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_COVERAGEELIGIBILITYREQUEST_STR_VALUES_RPS ON FHIRAPP.COVERAGEELIGIBILITYREQUEST_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

ALTER TABLE FHIRAPP.COVERAGEELIGIBILITYREQUEST_STR_VALUES ADD CONSTRAINT FK_COVERAGEELIGIBILITYREQUEST_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.COVERAGEELIGIBILITYREQUEST_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.COVERAGEELIGIBILITYREQUEST_STR_VALUES ADD CONSTRAINT FK_COVERAGEELIGIBILITYREQUEST_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.COVERAGEELIGIBILITYREQUEST_STR_VALUES_TENANT                      ON FHIRAPP.COVERAGEELIGIBILITYREQUEST_STR_VALUES          FOR ROWS WHERE FHIRAPP.COVERAGEELIGIBILITYREQUEST_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.COVERAGEELIGIBILITYREQUEST_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.COVERAGEELIGIBILITYREQUEST_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_COVERAGEELIGIBILITYREQUEST_TOKEN_VALUES_PNCSCV ON FHIRAPP.COVERAGEELIGIBILITYREQUEST_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_COVERAGEELIGIBILITYREQUEST_TOKEN_VALUES_RPS ON FHIRAPP.COVERAGEELIGIBILITYREQUEST_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

ALTER TABLE FHIRAPP.COVERAGEELIGIBILITYREQUEST_TOKEN_VALUES ADD CONSTRAINT FK_COVERAGEELIGIBILITYREQUEST_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

ALTER TABLE FHIRAPP.COVERAGEELIGIBILITYREQUEST_TOKEN_VALUES ADD CONSTRAINT FK_COVERAGEELIGIBILITYREQUEST_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.COVERAGEELIGIBILITYREQUEST_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.COVERAGEELIGIBILITYREQUEST_TOKEN_VALUES ADD CONSTRAINT FK_COVERAGEELIGIBILITYREQUEST_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.COVERAGEELIGIBILITYREQUEST_TOKEN_VALUES_TENANT                      ON FHIRAPP.COVERAGEELIGIBILITYREQUEST_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.COVERAGEELIGIBILITYREQUEST_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.COVERAGEELIGIBILITYREQUEST_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.COVERAGEELIGIBILITYREQUEST_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_COVERAGEELIGIBILITYREQUEST_DATE_VALUES_PESR ON FHIRAPP.COVERAGEELIGIBILITYREQUEST_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_COVERAGEELIGIBILITYREQUEST_DATE_VALUES_RPSE ON FHIRAPP.COVERAGEELIGIBILITYREQUEST_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

CREATE INDEX FHIRAPP.IDX_COVERAGEELIGIBILITYREQUEST_DATE_VALUES_PVR ON FHIRAPP.COVERAGEELIGIBILITYREQUEST_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_COVERAGEELIGIBILITYREQUEST_DATE_VALUES_PSER ON FHIRAPP.COVERAGEELIGIBILITYREQUEST_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_COVERAGEELIGIBILITYREQUEST_DATE_VALUES_RPV ON FHIRAPP.COVERAGEELIGIBILITYREQUEST_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

ALTER TABLE FHIRAPP.COVERAGEELIGIBILITYREQUEST_DATE_VALUES ADD CONSTRAINT FK_COVERAGEELIGIBILITYREQUEST_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.COVERAGEELIGIBILITYREQUEST_DATE_VALUES ADD CONSTRAINT FK_COVERAGEELIGIBILITYREQUEST_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.COVERAGEELIGIBILITYREQUEST_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.COVERAGEELIGIBILITYREQUEST_DATE_VALUES_TENANT                      ON FHIRAPP.COVERAGEELIGIBILITYREQUEST_DATE_VALUES          FOR ROWS WHERE FHIRAPP.COVERAGEELIGIBILITYREQUEST_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.COVERAGEELIGIBILITYREQUEST_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.COVERAGEELIGIBILITYREQUEST_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_COVERAGEELIGIBILITYREQUEST_NUMBER_VALUES_RPS ON FHIRAPP.COVERAGEELIGIBILITYREQUEST_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

CREATE INDEX FHIRAPP.IDX_COVERAGEELIGIBILITYREQUEST_NUMBER_VALUES_PNNV ON FHIRAPP.COVERAGEELIGIBILITYREQUEST_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.COVERAGEELIGIBILITYREQUEST_NUMBER_VALUES ADD CONSTRAINT FK_COVERAGEELIGIBILITYREQUEST_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.COVERAGEELIGIBILITYREQUEST_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.COVERAGEELIGIBILITYREQUEST_NUMBER_VALUES ADD CONSTRAINT FK_COVERAGEELIGIBILITYREQUEST_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.COVERAGEELIGIBILITYREQUEST_NUMBER_VALUES_TENANT                      ON FHIRAPP.COVERAGEELIGIBILITYREQUEST_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.COVERAGEELIGIBILITYREQUEST_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.COVERAGEELIGIBILITYREQUEST_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.COVERAGEELIGIBILITYREQUEST_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_COVERAGEELIGIBILITYREQUEST_LATLNG_VALUES_PNNHV ON FHIRAPP.COVERAGEELIGIBILITYREQUEST_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_COVERAGEELIGIBILITYREQUEST_LATLNG_VALUES_RPLNG ON FHIRAPP.COVERAGEELIGIBILITYREQUEST_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_COVERAGEELIGIBILITYREQUEST_LATLNG_VALUES_PNNLV ON FHIRAPP.COVERAGEELIGIBILITYREQUEST_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_COVERAGEELIGIBILITYREQUEST_LATLNG_VALUES_RPLAT ON FHIRAPP.COVERAGEELIGIBILITYREQUEST_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

ALTER TABLE FHIRAPP.COVERAGEELIGIBILITYREQUEST_LATLNG_VALUES ADD CONSTRAINT FK_COVERAGEELIGIBILITYREQUEST_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.COVERAGEELIGIBILITYREQUEST_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.COVERAGEELIGIBILITYREQUEST_LATLNG_VALUES ADD CONSTRAINT FK_COVERAGEELIGIBILITYREQUEST_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.COVERAGEELIGIBILITYREQUEST_LATLNG_VALUES_TENANT                      ON FHIRAPP.COVERAGEELIGIBILITYREQUEST_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.COVERAGEELIGIBILITYREQUEST_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.COVERAGEELIGIBILITYREQUEST_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.COVERAGEELIGIBILITYREQUEST_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_COVERAGEELIGIBILITYREQUEST_QUANTITY_VALUES_RPCLHS ON FHIRAPP.COVERAGEELIGIBILITYREQUEST_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_COVERAGEELIGIBILITYREQUEST_QUANTITY_VALUES_PNNV ON FHIRAPP.COVERAGEELIGIBILITYREQUEST_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_COVERAGEELIGIBILITYREQUEST_QUANTITY_VALUES_PCLHSR ON FHIRAPP.COVERAGEELIGIBILITYREQUEST_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_COVERAGEELIGIBILITYREQUEST_QUANTITY_VALUES_RPCHLS ON FHIRAPP.COVERAGEELIGIBILITYREQUEST_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_COVERAGEELIGIBILITYREQUEST_QUANTITY_VALUES_PCHLSR ON FHIRAPP.COVERAGEELIGIBILITYREQUEST_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_COVERAGEELIGIBILITYREQUEST_QUANTITY_VALUES_RPS ON FHIRAPP.COVERAGEELIGIBILITYREQUEST_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

ALTER TABLE FHIRAPP.COVERAGEELIGIBILITYREQUEST_QUANTITY_VALUES ADD CONSTRAINT FK_COVERAGEELIGIBILITYREQUEST_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.COVERAGEELIGIBILITYREQUEST_QUANTITY_VALUES ADD CONSTRAINT FK_COVERAGEELIGIBILITYREQUEST_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.COVERAGEELIGIBILITYREQUEST_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.COVERAGEELIGIBILITYREQUEST_QUANTITY_VALUES_TENANT                      ON FHIRAPP.COVERAGEELIGIBILITYREQUEST_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.COVERAGEELIGIBILITYREQUEST_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.COVERAGEELIGIBILITYREQUEST_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.NAMINGSYSTEM_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT NAMINGSYSTEM_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.NAMINGSYSTEM_LOGICAL_RESOURCES ADD CONSTRAINT FK_NAMINGSYSTEM_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.NAMINGSYSTEM_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.NAMINGSYSTEM_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.NAMINGSYSTEM_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.NAMINGSYSTEM_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.NAMINGSYSTEM_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT NAMINGSYSTEM_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.NAMINGSYSTEM_RESOURCES_PRF_IN1 ON FHIRAPP.NAMINGSYSTEM_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.NAMINGSYSTEM_RESOURCES_TENANT                      ON FHIRAPP.NAMINGSYSTEM_RESOURCES          FOR ROWS WHERE FHIRAPP.NAMINGSYSTEM_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.NAMINGSYSTEM_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.NAMINGSYSTEM_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_NAMINGSYSTEM_STR_VALUES_PLR ON FHIRAPP.NAMINGSYSTEM_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_NAMINGSYSTEM_STR_VALUES_RPS ON FHIRAPP.NAMINGSYSTEM_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

CREATE INDEX FHIRAPP.IDX_NAMINGSYSTEM_STR_VALUES_PSR ON FHIRAPP.NAMINGSYSTEM_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_NAMINGSYSTEM_STR_VALUES_RPL ON FHIRAPP.NAMINGSYSTEM_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

ALTER TABLE FHIRAPP.NAMINGSYSTEM_STR_VALUES ADD CONSTRAINT FK_NAMINGSYSTEM_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.NAMINGSYSTEM_STR_VALUES ADD CONSTRAINT FK_NAMINGSYSTEM_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.NAMINGSYSTEM_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.NAMINGSYSTEM_STR_VALUES_TENANT                      ON FHIRAPP.NAMINGSYSTEM_STR_VALUES          FOR ROWS WHERE FHIRAPP.NAMINGSYSTEM_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.NAMINGSYSTEM_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.NAMINGSYSTEM_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_NAMINGSYSTEM_TOKEN_VALUES_RPS ON FHIRAPP.NAMINGSYSTEM_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

CREATE INDEX FHIRAPP.IDX_NAMINGSYSTEM_TOKEN_VALUES_PNCSCV ON FHIRAPP.NAMINGSYSTEM_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.NAMINGSYSTEM_TOKEN_VALUES ADD CONSTRAINT FK_NAMINGSYSTEM_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.NAMINGSYSTEM_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.NAMINGSYSTEM_TOKEN_VALUES ADD CONSTRAINT FK_NAMINGSYSTEM_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.NAMINGSYSTEM_TOKEN_VALUES ADD CONSTRAINT FK_NAMINGSYSTEM_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

CREATE PERMISSION FHIRAPP.NAMINGSYSTEM_TOKEN_VALUES_TENANT                      ON FHIRAPP.NAMINGSYSTEM_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.NAMINGSYSTEM_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.NAMINGSYSTEM_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.NAMINGSYSTEM_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_NAMINGSYSTEM_DATE_VALUES_PVR ON FHIRAPP.NAMINGSYSTEM_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_NAMINGSYSTEM_DATE_VALUES_RPV ON FHIRAPP.NAMINGSYSTEM_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

CREATE INDEX FHIRAPP.IDX_NAMINGSYSTEM_DATE_VALUES_PESR ON FHIRAPP.NAMINGSYSTEM_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_NAMINGSYSTEM_DATE_VALUES_PSER ON FHIRAPP.NAMINGSYSTEM_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_NAMINGSYSTEM_DATE_VALUES_RPSE ON FHIRAPP.NAMINGSYSTEM_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

ALTER TABLE FHIRAPP.NAMINGSYSTEM_DATE_VALUES ADD CONSTRAINT FK_NAMINGSYSTEM_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.NAMINGSYSTEM_DATE_VALUES ADD CONSTRAINT FK_NAMINGSYSTEM_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.NAMINGSYSTEM_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.NAMINGSYSTEM_DATE_VALUES_TENANT                      ON FHIRAPP.NAMINGSYSTEM_DATE_VALUES          FOR ROWS WHERE FHIRAPP.NAMINGSYSTEM_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.NAMINGSYSTEM_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.NAMINGSYSTEM_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_NAMINGSYSTEM_NUMBER_VALUES_PNNV ON FHIRAPP.NAMINGSYSTEM_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_NAMINGSYSTEM_NUMBER_VALUES_RPS ON FHIRAPP.NAMINGSYSTEM_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

ALTER TABLE FHIRAPP.NAMINGSYSTEM_NUMBER_VALUES ADD CONSTRAINT FK_NAMINGSYSTEM_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.NAMINGSYSTEM_NUMBER_VALUES ADD CONSTRAINT FK_NAMINGSYSTEM_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.NAMINGSYSTEM_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.NAMINGSYSTEM_NUMBER_VALUES_TENANT                      ON FHIRAPP.NAMINGSYSTEM_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.NAMINGSYSTEM_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.NAMINGSYSTEM_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.NAMINGSYSTEM_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_NAMINGSYSTEM_LATLNG_VALUES_PNNHV ON FHIRAPP.NAMINGSYSTEM_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_NAMINGSYSTEM_LATLNG_VALUES_PNNLV ON FHIRAPP.NAMINGSYSTEM_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_NAMINGSYSTEM_LATLNG_VALUES_RPLAT ON FHIRAPP.NAMINGSYSTEM_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_NAMINGSYSTEM_LATLNG_VALUES_RPLNG ON FHIRAPP.NAMINGSYSTEM_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

ALTER TABLE FHIRAPP.NAMINGSYSTEM_LATLNG_VALUES ADD CONSTRAINT FK_NAMINGSYSTEM_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.NAMINGSYSTEM_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.NAMINGSYSTEM_LATLNG_VALUES ADD CONSTRAINT FK_NAMINGSYSTEM_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.NAMINGSYSTEM_LATLNG_VALUES_TENANT                      ON FHIRAPP.NAMINGSYSTEM_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.NAMINGSYSTEM_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.NAMINGSYSTEM_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.NAMINGSYSTEM_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_NAMINGSYSTEM_QUANTITY_VALUES_RPS ON FHIRAPP.NAMINGSYSTEM_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_NAMINGSYSTEM_QUANTITY_VALUES_RPCHLS ON FHIRAPP.NAMINGSYSTEM_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_NAMINGSYSTEM_QUANTITY_VALUES_PCLHSR ON FHIRAPP.NAMINGSYSTEM_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_NAMINGSYSTEM_QUANTITY_VALUES_RPCLHS ON FHIRAPP.NAMINGSYSTEM_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_NAMINGSYSTEM_QUANTITY_VALUES_PNNV ON FHIRAPP.NAMINGSYSTEM_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_NAMINGSYSTEM_QUANTITY_VALUES_PCHLSR ON FHIRAPP.NAMINGSYSTEM_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.NAMINGSYSTEM_QUANTITY_VALUES ADD CONSTRAINT FK_NAMINGSYSTEM_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.NAMINGSYSTEM_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.NAMINGSYSTEM_QUANTITY_VALUES ADD CONSTRAINT FK_NAMINGSYSTEM_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.NAMINGSYSTEM_QUANTITY_VALUES_TENANT                      ON FHIRAPP.NAMINGSYSTEM_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.NAMINGSYSTEM_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.NAMINGSYSTEM_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDICINALPRODUCTUNDESIRABLEEFFECT_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT MEDICINALPRODUCTUNDESIRABLEEFFECT_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.MEDICINALPRODUCTUNDESIRABLEEFFECT_LOGICAL_RESOURCES ADD CONSTRAINT FK_MEDICINALPRODUCTUNDESIRABLEEFFECT_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.MEDICINALPRODUCTUNDESIRABLEEFFECT_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.MEDICINALPRODUCTUNDESIRABLEEFFECT_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.MEDICINALPRODUCTUNDESIRABLEEFFECT_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDICINALPRODUCTUNDESIRABLEEFFECT_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDICINALPRODUCTUNDESIRABLEEFFECT_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT MEDICINALPRODUCTUNDESIRABLEEFFECT_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.MEDICINALPRODUCTUNDESIRABLEEFFECT_RESOURCES_PRF_IN1 ON FHIRAPP.MEDICINALPRODUCTUNDESIRABLEEFFECT_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.MEDICINALPRODUCTUNDESIRABLEEFFECT_RESOURCES_TENANT                      ON FHIRAPP.MEDICINALPRODUCTUNDESIRABLEEFFECT_RESOURCES          FOR ROWS WHERE FHIRAPP.MEDICINALPRODUCTUNDESIRABLEEFFECT_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDICINALPRODUCTUNDESIRABLEEFFECT_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDICINALPRODUCTUNDESIRABLEEFFECT_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTUNDESIRABLEEFFECT_STR_VALUES_RPS ON FHIRAPP.MEDICINALPRODUCTUNDESIRABLEEFFECT_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTUNDESIRABLEEFFECT_STR_VALUES_PLR ON FHIRAPP.MEDICINALPRODUCTUNDESIRABLEEFFECT_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTUNDESIRABLEEFFECT_STR_VALUES_RPL ON FHIRAPP.MEDICINALPRODUCTUNDESIRABLEEFFECT_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTUNDESIRABLEEFFECT_STR_VALUES_PSR ON FHIRAPP.MEDICINALPRODUCTUNDESIRABLEEFFECT_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.MEDICINALPRODUCTUNDESIRABLEEFFECT_STR_VALUES ADD CONSTRAINT FK_MEDICINALPRODUCTUNDESIRABLEEFFECT_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.MEDICINALPRODUCTUNDESIRABLEEFFECT_STR_VALUES ADD CONSTRAINT FK_MEDICINALPRODUCTUNDESIRABLEEFFECT_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.MEDICINALPRODUCTUNDESIRABLEEFFECT_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.MEDICINALPRODUCTUNDESIRABLEEFFECT_STR_VALUES_TENANT                      ON FHIRAPP.MEDICINALPRODUCTUNDESIRABLEEFFECT_STR_VALUES          FOR ROWS WHERE FHIRAPP.MEDICINALPRODUCTUNDESIRABLEEFFECT_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDICINALPRODUCTUNDESIRABLEEFFECT_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDICINALPRODUCTUNDESIRABLEEFFECT_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTUNDESIRABLEEFFECT_TOKEN_VALUES_RPS ON FHIRAPP.MEDICINALPRODUCTUNDESIRABLEEFFECT_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTUNDESIRABLEEFFECT_TOKEN_VALUES_PNCSCV ON FHIRAPP.MEDICINALPRODUCTUNDESIRABLEEFFECT_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.MEDICINALPRODUCTUNDESIRABLEEFFECT_TOKEN_VALUES ADD CONSTRAINT FK_MEDICINALPRODUCTUNDESIRABLEEFFECT_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

ALTER TABLE FHIRAPP.MEDICINALPRODUCTUNDESIRABLEEFFECT_TOKEN_VALUES ADD CONSTRAINT FK_MEDICINALPRODUCTUNDESIRABLEEFFECT_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.MEDICINALPRODUCTUNDESIRABLEEFFECT_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.MEDICINALPRODUCTUNDESIRABLEEFFECT_TOKEN_VALUES ADD CONSTRAINT FK_MEDICINALPRODUCTUNDESIRABLEEFFECT_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.MEDICINALPRODUCTUNDESIRABLEEFFECT_TOKEN_VALUES_TENANT                      ON FHIRAPP.MEDICINALPRODUCTUNDESIRABLEEFFECT_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.MEDICINALPRODUCTUNDESIRABLEEFFECT_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDICINALPRODUCTUNDESIRABLEEFFECT_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDICINALPRODUCTUNDESIRABLEEFFECT_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTUNDESIRABLEEFFECT_DATE_VALUES_RPV ON FHIRAPP.MEDICINALPRODUCTUNDESIRABLEEFFECT_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTUNDESIRABLEEFFECT_DATE_VALUES_PVR ON FHIRAPP.MEDICINALPRODUCTUNDESIRABLEEFFECT_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTUNDESIRABLEEFFECT_DATE_VALUES_PESR ON FHIRAPP.MEDICINALPRODUCTUNDESIRABLEEFFECT_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTUNDESIRABLEEFFECT_DATE_VALUES_RPSE ON FHIRAPP.MEDICINALPRODUCTUNDESIRABLEEFFECT_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTUNDESIRABLEEFFECT_DATE_VALUES_PSER ON FHIRAPP.MEDICINALPRODUCTUNDESIRABLEEFFECT_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.MEDICINALPRODUCTUNDESIRABLEEFFECT_DATE_VALUES ADD CONSTRAINT FK_MEDICINALPRODUCTUNDESIRABLEEFFECT_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.MEDICINALPRODUCTUNDESIRABLEEFFECT_DATE_VALUES ADD CONSTRAINT FK_MEDICINALPRODUCTUNDESIRABLEEFFECT_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.MEDICINALPRODUCTUNDESIRABLEEFFECT_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.MEDICINALPRODUCTUNDESIRABLEEFFECT_DATE_VALUES_TENANT                      ON FHIRAPP.MEDICINALPRODUCTUNDESIRABLEEFFECT_DATE_VALUES          FOR ROWS WHERE FHIRAPP.MEDICINALPRODUCTUNDESIRABLEEFFECT_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDICINALPRODUCTUNDESIRABLEEFFECT_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDICINALPRODUCTUNDESIRABLEEFFECT_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTUNDESIRABLEEFFECT_NUMBER_VALUES_PNNV ON FHIRAPP.MEDICINALPRODUCTUNDESIRABLEEFFECT_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTUNDESIRABLEEFFECT_NUMBER_VALUES_RPS ON FHIRAPP.MEDICINALPRODUCTUNDESIRABLEEFFECT_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

ALTER TABLE FHIRAPP.MEDICINALPRODUCTUNDESIRABLEEFFECT_NUMBER_VALUES ADD CONSTRAINT FK_MEDICINALPRODUCTUNDESIRABLEEFFECT_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.MEDICINALPRODUCTUNDESIRABLEEFFECT_NUMBER_VALUES ADD CONSTRAINT FK_MEDICINALPRODUCTUNDESIRABLEEFFECT_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.MEDICINALPRODUCTUNDESIRABLEEFFECT_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.MEDICINALPRODUCTUNDESIRABLEEFFECT_NUMBER_VALUES_TENANT                      ON FHIRAPP.MEDICINALPRODUCTUNDESIRABLEEFFECT_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.MEDICINALPRODUCTUNDESIRABLEEFFECT_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDICINALPRODUCTUNDESIRABLEEFFECT_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDICINALPRODUCTUNDESIRABLEEFFECT_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTUNDESIRABLEEFFECT_LATLNG_VALUES_PNNHV ON FHIRAPP.MEDICINALPRODUCTUNDESIRABLEEFFECT_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTUNDESIRABLEEFFECT_LATLNG_VALUES_PNNLV ON FHIRAPP.MEDICINALPRODUCTUNDESIRABLEEFFECT_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTUNDESIRABLEEFFECT_LATLNG_VALUES_RPLAT ON FHIRAPP.MEDICINALPRODUCTUNDESIRABLEEFFECT_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTUNDESIRABLEEFFECT_LATLNG_VALUES_RPLNG ON FHIRAPP.MEDICINALPRODUCTUNDESIRABLEEFFECT_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

ALTER TABLE FHIRAPP.MEDICINALPRODUCTUNDESIRABLEEFFECT_LATLNG_VALUES ADD CONSTRAINT FK_MEDICINALPRODUCTUNDESIRABLEEFFECT_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.MEDICINALPRODUCTUNDESIRABLEEFFECT_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.MEDICINALPRODUCTUNDESIRABLEEFFECT_LATLNG_VALUES ADD CONSTRAINT FK_MEDICINALPRODUCTUNDESIRABLEEFFECT_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.MEDICINALPRODUCTUNDESIRABLEEFFECT_LATLNG_VALUES_TENANT                      ON FHIRAPP.MEDICINALPRODUCTUNDESIRABLEEFFECT_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.MEDICINALPRODUCTUNDESIRABLEEFFECT_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDICINALPRODUCTUNDESIRABLEEFFECT_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDICINALPRODUCTUNDESIRABLEEFFECT_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTUNDESIRABLEEFFECT_QUANTITY_VALUES_RPS ON FHIRAPP.MEDICINALPRODUCTUNDESIRABLEEFFECT_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTUNDESIRABLEEFFECT_QUANTITY_VALUES_PCHLSR ON FHIRAPP.MEDICINALPRODUCTUNDESIRABLEEFFECT_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTUNDESIRABLEEFFECT_QUANTITY_VALUES_PCLHSR ON FHIRAPP.MEDICINALPRODUCTUNDESIRABLEEFFECT_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTUNDESIRABLEEFFECT_QUANTITY_VALUES_RPCLHS ON FHIRAPP.MEDICINALPRODUCTUNDESIRABLEEFFECT_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTUNDESIRABLEEFFECT_QUANTITY_VALUES_PNNV ON FHIRAPP.MEDICINALPRODUCTUNDESIRABLEEFFECT_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTUNDESIRABLEEFFECT_QUANTITY_VALUES_RPCHLS ON FHIRAPP.MEDICINALPRODUCTUNDESIRABLEEFFECT_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

ALTER TABLE FHIRAPP.MEDICINALPRODUCTUNDESIRABLEEFFECT_QUANTITY_VALUES ADD CONSTRAINT FK_MEDICINALPRODUCTUNDESIRABLEEFFECT_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.MEDICINALPRODUCTUNDESIRABLEEFFECT_QUANTITY_VALUES ADD CONSTRAINT FK_MEDICINALPRODUCTUNDESIRABLEEFFECT_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.MEDICINALPRODUCTUNDESIRABLEEFFECT_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.MEDICINALPRODUCTUNDESIRABLEEFFECT_QUANTITY_VALUES_TENANT                      ON FHIRAPP.MEDICINALPRODUCTUNDESIRABLEEFFECT_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.MEDICINALPRODUCTUNDESIRABLEEFFECT_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDICINALPRODUCTUNDESIRABLEEFFECT_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.EXAMPLESCENARIO_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT EXAMPLESCENARIO_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.EXAMPLESCENARIO_LOGICAL_RESOURCES ADD CONSTRAINT FK_EXAMPLESCENARIO_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.EXAMPLESCENARIO_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.EXAMPLESCENARIO_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.EXAMPLESCENARIO_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.EXAMPLESCENARIO_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.EXAMPLESCENARIO_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT EXAMPLESCENARIO_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.EXAMPLESCENARIO_RESOURCES_PRF_IN1 ON FHIRAPP.EXAMPLESCENARIO_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.EXAMPLESCENARIO_RESOURCES_TENANT                      ON FHIRAPP.EXAMPLESCENARIO_RESOURCES          FOR ROWS WHERE FHIRAPP.EXAMPLESCENARIO_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.EXAMPLESCENARIO_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.EXAMPLESCENARIO_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_EXAMPLESCENARIO_STR_VALUES_RPL ON FHIRAPP.EXAMPLESCENARIO_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

CREATE INDEX FHIRAPP.IDX_EXAMPLESCENARIO_STR_VALUES_PSR ON FHIRAPP.EXAMPLESCENARIO_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_EXAMPLESCENARIO_STR_VALUES_PLR ON FHIRAPP.EXAMPLESCENARIO_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_EXAMPLESCENARIO_STR_VALUES_RPS ON FHIRAPP.EXAMPLESCENARIO_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

ALTER TABLE FHIRAPP.EXAMPLESCENARIO_STR_VALUES ADD CONSTRAINT FK_EXAMPLESCENARIO_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.EXAMPLESCENARIO_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.EXAMPLESCENARIO_STR_VALUES ADD CONSTRAINT FK_EXAMPLESCENARIO_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.EXAMPLESCENARIO_STR_VALUES_TENANT                      ON FHIRAPP.EXAMPLESCENARIO_STR_VALUES          FOR ROWS WHERE FHIRAPP.EXAMPLESCENARIO_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.EXAMPLESCENARIO_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.EXAMPLESCENARIO_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_EXAMPLESCENARIO_TOKEN_VALUES_PNCSCV ON FHIRAPP.EXAMPLESCENARIO_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_EXAMPLESCENARIO_TOKEN_VALUES_RPS ON FHIRAPP.EXAMPLESCENARIO_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

ALTER TABLE FHIRAPP.EXAMPLESCENARIO_TOKEN_VALUES ADD CONSTRAINT FK_EXAMPLESCENARIO_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.EXAMPLESCENARIO_TOKEN_VALUES ADD CONSTRAINT FK_EXAMPLESCENARIO_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.EXAMPLESCENARIO_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.EXAMPLESCENARIO_TOKEN_VALUES ADD CONSTRAINT FK_EXAMPLESCENARIO_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

CREATE PERMISSION FHIRAPP.EXAMPLESCENARIO_TOKEN_VALUES_TENANT                      ON FHIRAPP.EXAMPLESCENARIO_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.EXAMPLESCENARIO_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.EXAMPLESCENARIO_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.EXAMPLESCENARIO_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_EXAMPLESCENARIO_DATE_VALUES_PESR ON FHIRAPP.EXAMPLESCENARIO_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_EXAMPLESCENARIO_DATE_VALUES_PSER ON FHIRAPP.EXAMPLESCENARIO_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_EXAMPLESCENARIO_DATE_VALUES_PVR ON FHIRAPP.EXAMPLESCENARIO_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_EXAMPLESCENARIO_DATE_VALUES_RPV ON FHIRAPP.EXAMPLESCENARIO_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

CREATE INDEX FHIRAPP.IDX_EXAMPLESCENARIO_DATE_VALUES_RPSE ON FHIRAPP.EXAMPLESCENARIO_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

ALTER TABLE FHIRAPP.EXAMPLESCENARIO_DATE_VALUES ADD CONSTRAINT FK_EXAMPLESCENARIO_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.EXAMPLESCENARIO_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.EXAMPLESCENARIO_DATE_VALUES ADD CONSTRAINT FK_EXAMPLESCENARIO_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.EXAMPLESCENARIO_DATE_VALUES_TENANT                      ON FHIRAPP.EXAMPLESCENARIO_DATE_VALUES          FOR ROWS WHERE FHIRAPP.EXAMPLESCENARIO_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.EXAMPLESCENARIO_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.EXAMPLESCENARIO_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_EXAMPLESCENARIO_NUMBER_VALUES_PNNV ON FHIRAPP.EXAMPLESCENARIO_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_EXAMPLESCENARIO_NUMBER_VALUES_RPS ON FHIRAPP.EXAMPLESCENARIO_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

ALTER TABLE FHIRAPP.EXAMPLESCENARIO_NUMBER_VALUES ADD CONSTRAINT FK_EXAMPLESCENARIO_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.EXAMPLESCENARIO_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.EXAMPLESCENARIO_NUMBER_VALUES ADD CONSTRAINT FK_EXAMPLESCENARIO_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.EXAMPLESCENARIO_NUMBER_VALUES_TENANT                      ON FHIRAPP.EXAMPLESCENARIO_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.EXAMPLESCENARIO_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.EXAMPLESCENARIO_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.EXAMPLESCENARIO_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_EXAMPLESCENARIO_LATLNG_VALUES_RPLAT ON FHIRAPP.EXAMPLESCENARIO_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_EXAMPLESCENARIO_LATLNG_VALUES_PNNLV ON FHIRAPP.EXAMPLESCENARIO_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_EXAMPLESCENARIO_LATLNG_VALUES_PNNHV ON FHIRAPP.EXAMPLESCENARIO_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_EXAMPLESCENARIO_LATLNG_VALUES_RPLNG ON FHIRAPP.EXAMPLESCENARIO_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

ALTER TABLE FHIRAPP.EXAMPLESCENARIO_LATLNG_VALUES ADD CONSTRAINT FK_EXAMPLESCENARIO_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.EXAMPLESCENARIO_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.EXAMPLESCENARIO_LATLNG_VALUES ADD CONSTRAINT FK_EXAMPLESCENARIO_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.EXAMPLESCENARIO_LATLNG_VALUES_TENANT                      ON FHIRAPP.EXAMPLESCENARIO_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.EXAMPLESCENARIO_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.EXAMPLESCENARIO_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.EXAMPLESCENARIO_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_EXAMPLESCENARIO_QUANTITY_VALUES_PCHLSR ON FHIRAPP.EXAMPLESCENARIO_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_EXAMPLESCENARIO_QUANTITY_VALUES_RPCLHS ON FHIRAPP.EXAMPLESCENARIO_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_EXAMPLESCENARIO_QUANTITY_VALUES_PNNV ON FHIRAPP.EXAMPLESCENARIO_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_EXAMPLESCENARIO_QUANTITY_VALUES_PCLHSR ON FHIRAPP.EXAMPLESCENARIO_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_EXAMPLESCENARIO_QUANTITY_VALUES_RPCHLS ON FHIRAPP.EXAMPLESCENARIO_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_EXAMPLESCENARIO_QUANTITY_VALUES_RPS ON FHIRAPP.EXAMPLESCENARIO_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

ALTER TABLE FHIRAPP.EXAMPLESCENARIO_QUANTITY_VALUES ADD CONSTRAINT FK_EXAMPLESCENARIO_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.EXAMPLESCENARIO_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.EXAMPLESCENARIO_QUANTITY_VALUES ADD CONSTRAINT FK_EXAMPLESCENARIO_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.EXAMPLESCENARIO_QUANTITY_VALUES_TENANT                      ON FHIRAPP.EXAMPLESCENARIO_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.EXAMPLESCENARIO_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.EXAMPLESCENARIO_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.SCHEDULE_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT SCHEDULE_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.SCHEDULE_LOGICAL_RESOURCES ADD CONSTRAINT FK_SCHEDULE_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.SCHEDULE_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.SCHEDULE_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.SCHEDULE_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.SCHEDULE_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.SCHEDULE_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT SCHEDULE_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.SCHEDULE_RESOURCES_PRF_IN1 ON FHIRAPP.SCHEDULE_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.SCHEDULE_RESOURCES_TENANT                      ON FHIRAPP.SCHEDULE_RESOURCES          FOR ROWS WHERE FHIRAPP.SCHEDULE_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.SCHEDULE_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.SCHEDULE_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_SCHEDULE_STR_VALUES_PLR ON FHIRAPP.SCHEDULE_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SCHEDULE_STR_VALUES_RPS ON FHIRAPP.SCHEDULE_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

CREATE INDEX FHIRAPP.IDX_SCHEDULE_STR_VALUES_PSR ON FHIRAPP.SCHEDULE_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SCHEDULE_STR_VALUES_RPL ON FHIRAPP.SCHEDULE_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

ALTER TABLE FHIRAPP.SCHEDULE_STR_VALUES ADD CONSTRAINT FK_SCHEDULE_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.SCHEDULE_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.SCHEDULE_STR_VALUES ADD CONSTRAINT FK_SCHEDULE_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.SCHEDULE_STR_VALUES_TENANT                      ON FHIRAPP.SCHEDULE_STR_VALUES          FOR ROWS WHERE FHIRAPP.SCHEDULE_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.SCHEDULE_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.SCHEDULE_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_SCHEDULE_TOKEN_VALUES_RPS ON FHIRAPP.SCHEDULE_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

CREATE INDEX FHIRAPP.IDX_SCHEDULE_TOKEN_VALUES_PNCSCV ON FHIRAPP.SCHEDULE_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.SCHEDULE_TOKEN_VALUES ADD CONSTRAINT FK_SCHEDULE_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.SCHEDULE_TOKEN_VALUES ADD CONSTRAINT FK_SCHEDULE_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.SCHEDULE_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.SCHEDULE_TOKEN_VALUES ADD CONSTRAINT FK_SCHEDULE_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

CREATE PERMISSION FHIRAPP.SCHEDULE_TOKEN_VALUES_TENANT                      ON FHIRAPP.SCHEDULE_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.SCHEDULE_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.SCHEDULE_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.SCHEDULE_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_SCHEDULE_DATE_VALUES_PVR ON FHIRAPP.SCHEDULE_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SCHEDULE_DATE_VALUES_PESR ON FHIRAPP.SCHEDULE_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SCHEDULE_DATE_VALUES_PSER ON FHIRAPP.SCHEDULE_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SCHEDULE_DATE_VALUES_RPSE ON FHIRAPP.SCHEDULE_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

CREATE INDEX FHIRAPP.IDX_SCHEDULE_DATE_VALUES_RPV ON FHIRAPP.SCHEDULE_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

ALTER TABLE FHIRAPP.SCHEDULE_DATE_VALUES ADD CONSTRAINT FK_SCHEDULE_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.SCHEDULE_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.SCHEDULE_DATE_VALUES ADD CONSTRAINT FK_SCHEDULE_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.SCHEDULE_DATE_VALUES_TENANT                      ON FHIRAPP.SCHEDULE_DATE_VALUES          FOR ROWS WHERE FHIRAPP.SCHEDULE_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.SCHEDULE_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.SCHEDULE_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_SCHEDULE_NUMBER_VALUES_RPS ON FHIRAPP.SCHEDULE_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

CREATE INDEX FHIRAPP.IDX_SCHEDULE_NUMBER_VALUES_PNNV ON FHIRAPP.SCHEDULE_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.SCHEDULE_NUMBER_VALUES ADD CONSTRAINT FK_SCHEDULE_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.SCHEDULE_NUMBER_VALUES ADD CONSTRAINT FK_SCHEDULE_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.SCHEDULE_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.SCHEDULE_NUMBER_VALUES_TENANT                      ON FHIRAPP.SCHEDULE_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.SCHEDULE_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.SCHEDULE_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.SCHEDULE_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_SCHEDULE_LATLNG_VALUES_PNNLV ON FHIRAPP.SCHEDULE_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SCHEDULE_LATLNG_VALUES_RPLNG ON FHIRAPP.SCHEDULE_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_SCHEDULE_LATLNG_VALUES_PNNHV ON FHIRAPP.SCHEDULE_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SCHEDULE_LATLNG_VALUES_RPLAT ON FHIRAPP.SCHEDULE_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

ALTER TABLE FHIRAPP.SCHEDULE_LATLNG_VALUES ADD CONSTRAINT FK_SCHEDULE_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.SCHEDULE_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.SCHEDULE_LATLNG_VALUES ADD CONSTRAINT FK_SCHEDULE_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.SCHEDULE_LATLNG_VALUES_TENANT                      ON FHIRAPP.SCHEDULE_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.SCHEDULE_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.SCHEDULE_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.SCHEDULE_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_SCHEDULE_QUANTITY_VALUES_RPS ON FHIRAPP.SCHEDULE_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_SCHEDULE_QUANTITY_VALUES_RPCHLS ON FHIRAPP.SCHEDULE_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_SCHEDULE_QUANTITY_VALUES_PCHLSR ON FHIRAPP.SCHEDULE_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SCHEDULE_QUANTITY_VALUES_PCLHSR ON FHIRAPP.SCHEDULE_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SCHEDULE_QUANTITY_VALUES_RPCLHS ON FHIRAPP.SCHEDULE_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_SCHEDULE_QUANTITY_VALUES_PNNV ON FHIRAPP.SCHEDULE_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

ALTER TABLE FHIRAPP.SCHEDULE_QUANTITY_VALUES ADD CONSTRAINT FK_SCHEDULE_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.SCHEDULE_QUANTITY_VALUES ADD CONSTRAINT FK_SCHEDULE_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.SCHEDULE_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.SCHEDULE_QUANTITY_VALUES_TENANT                      ON FHIRAPP.SCHEDULE_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.SCHEDULE_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.SCHEDULE_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.SUPPLYDELIVERY_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT SUPPLYDELIVERY_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.SUPPLYDELIVERY_LOGICAL_RESOURCES ADD CONSTRAINT FK_SUPPLYDELIVERY_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.SUPPLYDELIVERY_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.SUPPLYDELIVERY_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.SUPPLYDELIVERY_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.SUPPLYDELIVERY_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.SUPPLYDELIVERY_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT SUPPLYDELIVERY_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.SUPPLYDELIVERY_RESOURCES_PRF_IN1 ON FHIRAPP.SUPPLYDELIVERY_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.SUPPLYDELIVERY_RESOURCES_TENANT                      ON FHIRAPP.SUPPLYDELIVERY_RESOURCES          FOR ROWS WHERE FHIRAPP.SUPPLYDELIVERY_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.SUPPLYDELIVERY_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.SUPPLYDELIVERY_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_SUPPLYDELIVERY_STR_VALUES_PSR ON FHIRAPP.SUPPLYDELIVERY_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SUPPLYDELIVERY_STR_VALUES_RPL ON FHIRAPP.SUPPLYDELIVERY_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

CREATE INDEX FHIRAPP.IDX_SUPPLYDELIVERY_STR_VALUES_RPS ON FHIRAPP.SUPPLYDELIVERY_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

CREATE INDEX FHIRAPP.IDX_SUPPLYDELIVERY_STR_VALUES_PLR ON FHIRAPP.SUPPLYDELIVERY_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.SUPPLYDELIVERY_STR_VALUES ADD CONSTRAINT FK_SUPPLYDELIVERY_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.SUPPLYDELIVERY_STR_VALUES ADD CONSTRAINT FK_SUPPLYDELIVERY_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.SUPPLYDELIVERY_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.SUPPLYDELIVERY_STR_VALUES_TENANT                      ON FHIRAPP.SUPPLYDELIVERY_STR_VALUES          FOR ROWS WHERE FHIRAPP.SUPPLYDELIVERY_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.SUPPLYDELIVERY_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.SUPPLYDELIVERY_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_SUPPLYDELIVERY_TOKEN_VALUES_PNCSCV ON FHIRAPP.SUPPLYDELIVERY_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SUPPLYDELIVERY_TOKEN_VALUES_RPS ON FHIRAPP.SUPPLYDELIVERY_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

ALTER TABLE FHIRAPP.SUPPLYDELIVERY_TOKEN_VALUES ADD CONSTRAINT FK_SUPPLYDELIVERY_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.SUPPLYDELIVERY_TOKEN_VALUES ADD CONSTRAINT FK_SUPPLYDELIVERY_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

ALTER TABLE FHIRAPP.SUPPLYDELIVERY_TOKEN_VALUES ADD CONSTRAINT FK_SUPPLYDELIVERY_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.SUPPLYDELIVERY_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.SUPPLYDELIVERY_TOKEN_VALUES_TENANT                      ON FHIRAPP.SUPPLYDELIVERY_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.SUPPLYDELIVERY_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.SUPPLYDELIVERY_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.SUPPLYDELIVERY_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_SUPPLYDELIVERY_DATE_VALUES_PVR ON FHIRAPP.SUPPLYDELIVERY_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SUPPLYDELIVERY_DATE_VALUES_RPV ON FHIRAPP.SUPPLYDELIVERY_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

CREATE INDEX FHIRAPP.IDX_SUPPLYDELIVERY_DATE_VALUES_PESR ON FHIRAPP.SUPPLYDELIVERY_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SUPPLYDELIVERY_DATE_VALUES_PSER ON FHIRAPP.SUPPLYDELIVERY_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SUPPLYDELIVERY_DATE_VALUES_RPSE ON FHIRAPP.SUPPLYDELIVERY_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

ALTER TABLE FHIRAPP.SUPPLYDELIVERY_DATE_VALUES ADD CONSTRAINT FK_SUPPLYDELIVERY_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.SUPPLYDELIVERY_DATE_VALUES ADD CONSTRAINT FK_SUPPLYDELIVERY_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.SUPPLYDELIVERY_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.SUPPLYDELIVERY_DATE_VALUES_TENANT                      ON FHIRAPP.SUPPLYDELIVERY_DATE_VALUES          FOR ROWS WHERE FHIRAPP.SUPPLYDELIVERY_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.SUPPLYDELIVERY_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.SUPPLYDELIVERY_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_SUPPLYDELIVERY_NUMBER_VALUES_PNNV ON FHIRAPP.SUPPLYDELIVERY_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SUPPLYDELIVERY_NUMBER_VALUES_RPS ON FHIRAPP.SUPPLYDELIVERY_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

ALTER TABLE FHIRAPP.SUPPLYDELIVERY_NUMBER_VALUES ADD CONSTRAINT FK_SUPPLYDELIVERY_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.SUPPLYDELIVERY_NUMBER_VALUES ADD CONSTRAINT FK_SUPPLYDELIVERY_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.SUPPLYDELIVERY_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.SUPPLYDELIVERY_NUMBER_VALUES_TENANT                      ON FHIRAPP.SUPPLYDELIVERY_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.SUPPLYDELIVERY_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.SUPPLYDELIVERY_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.SUPPLYDELIVERY_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_SUPPLYDELIVERY_LATLNG_VALUES_PNNHV ON FHIRAPP.SUPPLYDELIVERY_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SUPPLYDELIVERY_LATLNG_VALUES_RPLNG ON FHIRAPP.SUPPLYDELIVERY_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_SUPPLYDELIVERY_LATLNG_VALUES_RPLAT ON FHIRAPP.SUPPLYDELIVERY_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_SUPPLYDELIVERY_LATLNG_VALUES_PNNLV ON FHIRAPP.SUPPLYDELIVERY_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.SUPPLYDELIVERY_LATLNG_VALUES ADD CONSTRAINT FK_SUPPLYDELIVERY_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.SUPPLYDELIVERY_LATLNG_VALUES ADD CONSTRAINT FK_SUPPLYDELIVERY_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.SUPPLYDELIVERY_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.SUPPLYDELIVERY_LATLNG_VALUES_TENANT                      ON FHIRAPP.SUPPLYDELIVERY_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.SUPPLYDELIVERY_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.SUPPLYDELIVERY_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.SUPPLYDELIVERY_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_SUPPLYDELIVERY_QUANTITY_VALUES_RPS ON FHIRAPP.SUPPLYDELIVERY_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_SUPPLYDELIVERY_QUANTITY_VALUES_PCHLSR ON FHIRAPP.SUPPLYDELIVERY_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SUPPLYDELIVERY_QUANTITY_VALUES_RPCLHS ON FHIRAPP.SUPPLYDELIVERY_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_SUPPLYDELIVERY_QUANTITY_VALUES_PCLHSR ON FHIRAPP.SUPPLYDELIVERY_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_SUPPLYDELIVERY_QUANTITY_VALUES_RPCHLS ON FHIRAPP.SUPPLYDELIVERY_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_SUPPLYDELIVERY_QUANTITY_VALUES_PNNV ON FHIRAPP.SUPPLYDELIVERY_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

ALTER TABLE FHIRAPP.SUPPLYDELIVERY_QUANTITY_VALUES ADD CONSTRAINT FK_SUPPLYDELIVERY_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.SUPPLYDELIVERY_QUANTITY_VALUES ADD CONSTRAINT FK_SUPPLYDELIVERY_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.SUPPLYDELIVERY_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.SUPPLYDELIVERY_QUANTITY_VALUES_TENANT                      ON FHIRAPP.SUPPLYDELIVERY_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.SUPPLYDELIVERY_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.SUPPLYDELIVERY_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.CLINICALIMPRESSION_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT CLINICALIMPRESSION_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.CLINICALIMPRESSION_LOGICAL_RESOURCES ADD CONSTRAINT FK_CLINICALIMPRESSION_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.CLINICALIMPRESSION_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.CLINICALIMPRESSION_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.CLINICALIMPRESSION_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.CLINICALIMPRESSION_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.CLINICALIMPRESSION_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT CLINICALIMPRESSION_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.CLINICALIMPRESSION_RESOURCES_PRF_IN1 ON FHIRAPP.CLINICALIMPRESSION_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.CLINICALIMPRESSION_RESOURCES_TENANT                      ON FHIRAPP.CLINICALIMPRESSION_RESOURCES          FOR ROWS WHERE FHIRAPP.CLINICALIMPRESSION_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.CLINICALIMPRESSION_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.CLINICALIMPRESSION_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_CLINICALIMPRESSION_STR_VALUES_RPS ON FHIRAPP.CLINICALIMPRESSION_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

CREATE INDEX FHIRAPP.IDX_CLINICALIMPRESSION_STR_VALUES_PSR ON FHIRAPP.CLINICALIMPRESSION_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_CLINICALIMPRESSION_STR_VALUES_RPL ON FHIRAPP.CLINICALIMPRESSION_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

CREATE INDEX FHIRAPP.IDX_CLINICALIMPRESSION_STR_VALUES_PLR ON FHIRAPP.CLINICALIMPRESSION_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.CLINICALIMPRESSION_STR_VALUES ADD CONSTRAINT FK_CLINICALIMPRESSION_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.CLINICALIMPRESSION_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.CLINICALIMPRESSION_STR_VALUES ADD CONSTRAINT FK_CLINICALIMPRESSION_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.CLINICALIMPRESSION_STR_VALUES_TENANT                      ON FHIRAPP.CLINICALIMPRESSION_STR_VALUES          FOR ROWS WHERE FHIRAPP.CLINICALIMPRESSION_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.CLINICALIMPRESSION_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.CLINICALIMPRESSION_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_CLINICALIMPRESSION_TOKEN_VALUES_PNCSCV ON FHIRAPP.CLINICALIMPRESSION_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_CLINICALIMPRESSION_TOKEN_VALUES_RPS ON FHIRAPP.CLINICALIMPRESSION_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

ALTER TABLE FHIRAPP.CLINICALIMPRESSION_TOKEN_VALUES ADD CONSTRAINT FK_CLINICALIMPRESSION_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.CLINICALIMPRESSION_TOKEN_VALUES ADD CONSTRAINT FK_CLINICALIMPRESSION_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

ALTER TABLE FHIRAPP.CLINICALIMPRESSION_TOKEN_VALUES ADD CONSTRAINT FK_CLINICALIMPRESSION_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.CLINICALIMPRESSION_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.CLINICALIMPRESSION_TOKEN_VALUES_TENANT                      ON FHIRAPP.CLINICALIMPRESSION_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.CLINICALIMPRESSION_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.CLINICALIMPRESSION_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.CLINICALIMPRESSION_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_CLINICALIMPRESSION_DATE_VALUES_RPSE ON FHIRAPP.CLINICALIMPRESSION_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

CREATE INDEX FHIRAPP.IDX_CLINICALIMPRESSION_DATE_VALUES_PSER ON FHIRAPP.CLINICALIMPRESSION_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_CLINICALIMPRESSION_DATE_VALUES_PVR ON FHIRAPP.CLINICALIMPRESSION_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_CLINICALIMPRESSION_DATE_VALUES_PESR ON FHIRAPP.CLINICALIMPRESSION_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_CLINICALIMPRESSION_DATE_VALUES_RPV ON FHIRAPP.CLINICALIMPRESSION_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

ALTER TABLE FHIRAPP.CLINICALIMPRESSION_DATE_VALUES ADD CONSTRAINT FK_CLINICALIMPRESSION_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.CLINICALIMPRESSION_DATE_VALUES ADD CONSTRAINT FK_CLINICALIMPRESSION_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.CLINICALIMPRESSION_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.CLINICALIMPRESSION_DATE_VALUES_TENANT                      ON FHIRAPP.CLINICALIMPRESSION_DATE_VALUES          FOR ROWS WHERE FHIRAPP.CLINICALIMPRESSION_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.CLINICALIMPRESSION_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.CLINICALIMPRESSION_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_CLINICALIMPRESSION_NUMBER_VALUES_PNNV ON FHIRAPP.CLINICALIMPRESSION_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_CLINICALIMPRESSION_NUMBER_VALUES_RPS ON FHIRAPP.CLINICALIMPRESSION_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

ALTER TABLE FHIRAPP.CLINICALIMPRESSION_NUMBER_VALUES ADD CONSTRAINT FK_CLINICALIMPRESSION_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.CLINICALIMPRESSION_NUMBER_VALUES ADD CONSTRAINT FK_CLINICALIMPRESSION_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.CLINICALIMPRESSION_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.CLINICALIMPRESSION_NUMBER_VALUES_TENANT                      ON FHIRAPP.CLINICALIMPRESSION_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.CLINICALIMPRESSION_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.CLINICALIMPRESSION_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.CLINICALIMPRESSION_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_CLINICALIMPRESSION_LATLNG_VALUES_PNNHV ON FHIRAPP.CLINICALIMPRESSION_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_CLINICALIMPRESSION_LATLNG_VALUES_RPLAT ON FHIRAPP.CLINICALIMPRESSION_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_CLINICALIMPRESSION_LATLNG_VALUES_RPLNG ON FHIRAPP.CLINICALIMPRESSION_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_CLINICALIMPRESSION_LATLNG_VALUES_PNNLV ON FHIRAPP.CLINICALIMPRESSION_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.CLINICALIMPRESSION_LATLNG_VALUES ADD CONSTRAINT FK_CLINICALIMPRESSION_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.CLINICALIMPRESSION_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.CLINICALIMPRESSION_LATLNG_VALUES ADD CONSTRAINT FK_CLINICALIMPRESSION_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.CLINICALIMPRESSION_LATLNG_VALUES_TENANT                      ON FHIRAPP.CLINICALIMPRESSION_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.CLINICALIMPRESSION_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.CLINICALIMPRESSION_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.CLINICALIMPRESSION_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_CLINICALIMPRESSION_QUANTITY_VALUES_PCLHSR ON FHIRAPP.CLINICALIMPRESSION_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_CLINICALIMPRESSION_QUANTITY_VALUES_RPCHLS ON FHIRAPP.CLINICALIMPRESSION_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_CLINICALIMPRESSION_QUANTITY_VALUES_RPS ON FHIRAPP.CLINICALIMPRESSION_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_CLINICALIMPRESSION_QUANTITY_VALUES_PCHLSR ON FHIRAPP.CLINICALIMPRESSION_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_CLINICALIMPRESSION_QUANTITY_VALUES_PNNV ON FHIRAPP.CLINICALIMPRESSION_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_CLINICALIMPRESSION_QUANTITY_VALUES_RPCLHS ON FHIRAPP.CLINICALIMPRESSION_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

ALTER TABLE FHIRAPP.CLINICALIMPRESSION_QUANTITY_VALUES ADD CONSTRAINT FK_CLINICALIMPRESSION_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.CLINICALIMPRESSION_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.CLINICALIMPRESSION_QUANTITY_VALUES ADD CONSTRAINT FK_CLINICALIMPRESSION_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.CLINICALIMPRESSION_QUANTITY_VALUES_TENANT                      ON FHIRAPP.CLINICALIMPRESSION_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.CLINICALIMPRESSION_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.CLINICALIMPRESSION_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.DEVICEDEFINITION_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT DEVICEDEFINITION_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.DEVICEDEFINITION_LOGICAL_RESOURCES ADD CONSTRAINT FK_DEVICEDEFINITION_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.DEVICEDEFINITION_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.DEVICEDEFINITION_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.DEVICEDEFINITION_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.DEVICEDEFINITION_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.DEVICEDEFINITION_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT DEVICEDEFINITION_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.DEVICEDEFINITION_RESOURCES_PRF_IN1 ON FHIRAPP.DEVICEDEFINITION_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.DEVICEDEFINITION_RESOURCES_TENANT                      ON FHIRAPP.DEVICEDEFINITION_RESOURCES          FOR ROWS WHERE FHIRAPP.DEVICEDEFINITION_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.DEVICEDEFINITION_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.DEVICEDEFINITION_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_DEVICEDEFINITION_STR_VALUES_RPS ON FHIRAPP.DEVICEDEFINITION_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

CREATE INDEX FHIRAPP.IDX_DEVICEDEFINITION_STR_VALUES_PLR ON FHIRAPP.DEVICEDEFINITION_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_DEVICEDEFINITION_STR_VALUES_RPL ON FHIRAPP.DEVICEDEFINITION_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

CREATE INDEX FHIRAPP.IDX_DEVICEDEFINITION_STR_VALUES_PSR ON FHIRAPP.DEVICEDEFINITION_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.DEVICEDEFINITION_STR_VALUES ADD CONSTRAINT FK_DEVICEDEFINITION_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.DEVICEDEFINITION_STR_VALUES ADD CONSTRAINT FK_DEVICEDEFINITION_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.DEVICEDEFINITION_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.DEVICEDEFINITION_STR_VALUES_TENANT                      ON FHIRAPP.DEVICEDEFINITION_STR_VALUES          FOR ROWS WHERE FHIRAPP.DEVICEDEFINITION_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.DEVICEDEFINITION_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.DEVICEDEFINITION_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_DEVICEDEFINITION_TOKEN_VALUES_PNCSCV ON FHIRAPP.DEVICEDEFINITION_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_DEVICEDEFINITION_TOKEN_VALUES_RPS ON FHIRAPP.DEVICEDEFINITION_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

ALTER TABLE FHIRAPP.DEVICEDEFINITION_TOKEN_VALUES ADD CONSTRAINT FK_DEVICEDEFINITION_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.DEVICEDEFINITION_TOKEN_VALUES ADD CONSTRAINT FK_DEVICEDEFINITION_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

ALTER TABLE FHIRAPP.DEVICEDEFINITION_TOKEN_VALUES ADD CONSTRAINT FK_DEVICEDEFINITION_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.DEVICEDEFINITION_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.DEVICEDEFINITION_TOKEN_VALUES_TENANT                      ON FHIRAPP.DEVICEDEFINITION_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.DEVICEDEFINITION_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.DEVICEDEFINITION_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.DEVICEDEFINITION_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_DEVICEDEFINITION_DATE_VALUES_PSER ON FHIRAPP.DEVICEDEFINITION_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_DEVICEDEFINITION_DATE_VALUES_RPV ON FHIRAPP.DEVICEDEFINITION_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

CREATE INDEX FHIRAPP.IDX_DEVICEDEFINITION_DATE_VALUES_RPSE ON FHIRAPP.DEVICEDEFINITION_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

CREATE INDEX FHIRAPP.IDX_DEVICEDEFINITION_DATE_VALUES_PESR ON FHIRAPP.DEVICEDEFINITION_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_DEVICEDEFINITION_DATE_VALUES_PVR ON FHIRAPP.DEVICEDEFINITION_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.DEVICEDEFINITION_DATE_VALUES ADD CONSTRAINT FK_DEVICEDEFINITION_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.DEVICEDEFINITION_DATE_VALUES ADD CONSTRAINT FK_DEVICEDEFINITION_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.DEVICEDEFINITION_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.DEVICEDEFINITION_DATE_VALUES_TENANT                      ON FHIRAPP.DEVICEDEFINITION_DATE_VALUES          FOR ROWS WHERE FHIRAPP.DEVICEDEFINITION_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.DEVICEDEFINITION_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.DEVICEDEFINITION_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_DEVICEDEFINITION_NUMBER_VALUES_PNNV ON FHIRAPP.DEVICEDEFINITION_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_DEVICEDEFINITION_NUMBER_VALUES_RPS ON FHIRAPP.DEVICEDEFINITION_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

ALTER TABLE FHIRAPP.DEVICEDEFINITION_NUMBER_VALUES ADD CONSTRAINT FK_DEVICEDEFINITION_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.DEVICEDEFINITION_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.DEVICEDEFINITION_NUMBER_VALUES ADD CONSTRAINT FK_DEVICEDEFINITION_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.DEVICEDEFINITION_NUMBER_VALUES_TENANT                      ON FHIRAPP.DEVICEDEFINITION_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.DEVICEDEFINITION_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.DEVICEDEFINITION_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.DEVICEDEFINITION_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_DEVICEDEFINITION_LATLNG_VALUES_PNNLV ON FHIRAPP.DEVICEDEFINITION_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_DEVICEDEFINITION_LATLNG_VALUES_RPLNG ON FHIRAPP.DEVICEDEFINITION_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_DEVICEDEFINITION_LATLNG_VALUES_RPLAT ON FHIRAPP.DEVICEDEFINITION_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_DEVICEDEFINITION_LATLNG_VALUES_PNNHV ON FHIRAPP.DEVICEDEFINITION_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.DEVICEDEFINITION_LATLNG_VALUES ADD CONSTRAINT FK_DEVICEDEFINITION_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.DEVICEDEFINITION_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.DEVICEDEFINITION_LATLNG_VALUES ADD CONSTRAINT FK_DEVICEDEFINITION_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.DEVICEDEFINITION_LATLNG_VALUES_TENANT                      ON FHIRAPP.DEVICEDEFINITION_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.DEVICEDEFINITION_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.DEVICEDEFINITION_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.DEVICEDEFINITION_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_DEVICEDEFINITION_QUANTITY_VALUES_RPS ON FHIRAPP.DEVICEDEFINITION_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_DEVICEDEFINITION_QUANTITY_VALUES_RPCLHS ON FHIRAPP.DEVICEDEFINITION_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_DEVICEDEFINITION_QUANTITY_VALUES_PCLHSR ON FHIRAPP.DEVICEDEFINITION_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_DEVICEDEFINITION_QUANTITY_VALUES_PCHLSR ON FHIRAPP.DEVICEDEFINITION_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_DEVICEDEFINITION_QUANTITY_VALUES_RPCHLS ON FHIRAPP.DEVICEDEFINITION_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_DEVICEDEFINITION_QUANTITY_VALUES_PNNV ON FHIRAPP.DEVICEDEFINITION_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

ALTER TABLE FHIRAPP.DEVICEDEFINITION_QUANTITY_VALUES ADD CONSTRAINT FK_DEVICEDEFINITION_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.DEVICEDEFINITION_QUANTITY_VALUES ADD CONSTRAINT FK_DEVICEDEFINITION_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.DEVICEDEFINITION_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.DEVICEDEFINITION_QUANTITY_VALUES_TENANT                      ON FHIRAPP.DEVICEDEFINITION_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.DEVICEDEFINITION_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.DEVICEDEFINITION_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.PLANDEFINITION_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT PLANDEFINITION_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.PLANDEFINITION_LOGICAL_RESOURCES ADD CONSTRAINT FK_PLANDEFINITION_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.PLANDEFINITION_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.PLANDEFINITION_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.PLANDEFINITION_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.PLANDEFINITION_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.PLANDEFINITION_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT PLANDEFINITION_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.PLANDEFINITION_RESOURCES_PRF_IN1 ON FHIRAPP.PLANDEFINITION_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.PLANDEFINITION_RESOURCES_TENANT                      ON FHIRAPP.PLANDEFINITION_RESOURCES          FOR ROWS WHERE FHIRAPP.PLANDEFINITION_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.PLANDEFINITION_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.PLANDEFINITION_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_PLANDEFINITION_STR_VALUES_PLR ON FHIRAPP.PLANDEFINITION_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_PLANDEFINITION_STR_VALUES_RPS ON FHIRAPP.PLANDEFINITION_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

CREATE INDEX FHIRAPP.IDX_PLANDEFINITION_STR_VALUES_PSR ON FHIRAPP.PLANDEFINITION_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_PLANDEFINITION_STR_VALUES_RPL ON FHIRAPP.PLANDEFINITION_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

ALTER TABLE FHIRAPP.PLANDEFINITION_STR_VALUES ADD CONSTRAINT FK_PLANDEFINITION_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.PLANDEFINITION_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.PLANDEFINITION_STR_VALUES ADD CONSTRAINT FK_PLANDEFINITION_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.PLANDEFINITION_STR_VALUES_TENANT                      ON FHIRAPP.PLANDEFINITION_STR_VALUES          FOR ROWS WHERE FHIRAPP.PLANDEFINITION_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.PLANDEFINITION_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.PLANDEFINITION_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_PLANDEFINITION_TOKEN_VALUES_PNCSCV ON FHIRAPP.PLANDEFINITION_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_PLANDEFINITION_TOKEN_VALUES_RPS ON FHIRAPP.PLANDEFINITION_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

ALTER TABLE FHIRAPP.PLANDEFINITION_TOKEN_VALUES ADD CONSTRAINT FK_PLANDEFINITION_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

ALTER TABLE FHIRAPP.PLANDEFINITION_TOKEN_VALUES ADD CONSTRAINT FK_PLANDEFINITION_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.PLANDEFINITION_TOKEN_VALUES ADD CONSTRAINT FK_PLANDEFINITION_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.PLANDEFINITION_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.PLANDEFINITION_TOKEN_VALUES_TENANT                      ON FHIRAPP.PLANDEFINITION_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.PLANDEFINITION_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.PLANDEFINITION_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.PLANDEFINITION_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_PLANDEFINITION_DATE_VALUES_RPV ON FHIRAPP.PLANDEFINITION_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

CREATE INDEX FHIRAPP.IDX_PLANDEFINITION_DATE_VALUES_PSER ON FHIRAPP.PLANDEFINITION_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_PLANDEFINITION_DATE_VALUES_PVR ON FHIRAPP.PLANDEFINITION_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_PLANDEFINITION_DATE_VALUES_RPSE ON FHIRAPP.PLANDEFINITION_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

CREATE INDEX FHIRAPP.IDX_PLANDEFINITION_DATE_VALUES_PESR ON FHIRAPP.PLANDEFINITION_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.PLANDEFINITION_DATE_VALUES ADD CONSTRAINT FK_PLANDEFINITION_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.PLANDEFINITION_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.PLANDEFINITION_DATE_VALUES ADD CONSTRAINT FK_PLANDEFINITION_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.PLANDEFINITION_DATE_VALUES_TENANT                      ON FHIRAPP.PLANDEFINITION_DATE_VALUES          FOR ROWS WHERE FHIRAPP.PLANDEFINITION_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.PLANDEFINITION_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.PLANDEFINITION_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_PLANDEFINITION_NUMBER_VALUES_PNNV ON FHIRAPP.PLANDEFINITION_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_PLANDEFINITION_NUMBER_VALUES_RPS ON FHIRAPP.PLANDEFINITION_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

ALTER TABLE FHIRAPP.PLANDEFINITION_NUMBER_VALUES ADD CONSTRAINT FK_PLANDEFINITION_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.PLANDEFINITION_NUMBER_VALUES ADD CONSTRAINT FK_PLANDEFINITION_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.PLANDEFINITION_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.PLANDEFINITION_NUMBER_VALUES_TENANT                      ON FHIRAPP.PLANDEFINITION_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.PLANDEFINITION_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.PLANDEFINITION_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.PLANDEFINITION_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_PLANDEFINITION_LATLNG_VALUES_PNNHV ON FHIRAPP.PLANDEFINITION_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_PLANDEFINITION_LATLNG_VALUES_RPLAT ON FHIRAPP.PLANDEFINITION_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_PLANDEFINITION_LATLNG_VALUES_PNNLV ON FHIRAPP.PLANDEFINITION_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_PLANDEFINITION_LATLNG_VALUES_RPLNG ON FHIRAPP.PLANDEFINITION_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

ALTER TABLE FHIRAPP.PLANDEFINITION_LATLNG_VALUES ADD CONSTRAINT FK_PLANDEFINITION_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.PLANDEFINITION_LATLNG_VALUES ADD CONSTRAINT FK_PLANDEFINITION_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.PLANDEFINITION_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.PLANDEFINITION_LATLNG_VALUES_TENANT                      ON FHIRAPP.PLANDEFINITION_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.PLANDEFINITION_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.PLANDEFINITION_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.PLANDEFINITION_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_PLANDEFINITION_QUANTITY_VALUES_PCLHSR ON FHIRAPP.PLANDEFINITION_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_PLANDEFINITION_QUANTITY_VALUES_RPCHLS ON FHIRAPP.PLANDEFINITION_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_PLANDEFINITION_QUANTITY_VALUES_RPS ON FHIRAPP.PLANDEFINITION_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_PLANDEFINITION_QUANTITY_VALUES_PCHLSR ON FHIRAPP.PLANDEFINITION_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_PLANDEFINITION_QUANTITY_VALUES_RPCLHS ON FHIRAPP.PLANDEFINITION_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_PLANDEFINITION_QUANTITY_VALUES_PNNV ON FHIRAPP.PLANDEFINITION_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

ALTER TABLE FHIRAPP.PLANDEFINITION_QUANTITY_VALUES ADD CONSTRAINT FK_PLANDEFINITION_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.PLANDEFINITION_QUANTITY_VALUES ADD CONSTRAINT FK_PLANDEFINITION_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.PLANDEFINITION_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.PLANDEFINITION_QUANTITY_VALUES_TENANT                      ON FHIRAPP.PLANDEFINITION_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.PLANDEFINITION_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.PLANDEFINITION_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDICINALPRODUCTAUTHORIZATION_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT MEDICINALPRODUCTAUTHORIZATION_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.MEDICINALPRODUCTAUTHORIZATION_LOGICAL_RESOURCES ADD CONSTRAINT FK_MEDICINALPRODUCTAUTHORIZATION_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.MEDICINALPRODUCTAUTHORIZATION_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.MEDICINALPRODUCTAUTHORIZATION_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.MEDICINALPRODUCTAUTHORIZATION_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDICINALPRODUCTAUTHORIZATION_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDICINALPRODUCTAUTHORIZATION_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT MEDICINALPRODUCTAUTHORIZATION_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.MEDICINALPRODUCTAUTHORIZATION_RESOURCES_PRF_IN1 ON FHIRAPP.MEDICINALPRODUCTAUTHORIZATION_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.MEDICINALPRODUCTAUTHORIZATION_RESOURCES_TENANT                      ON FHIRAPP.MEDICINALPRODUCTAUTHORIZATION_RESOURCES          FOR ROWS WHERE FHIRAPP.MEDICINALPRODUCTAUTHORIZATION_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDICINALPRODUCTAUTHORIZATION_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDICINALPRODUCTAUTHORIZATION_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTAUTHORIZATION_STR_VALUES_PLR ON FHIRAPP.MEDICINALPRODUCTAUTHORIZATION_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTAUTHORIZATION_STR_VALUES_PSR ON FHIRAPP.MEDICINALPRODUCTAUTHORIZATION_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTAUTHORIZATION_STR_VALUES_RPL ON FHIRAPP.MEDICINALPRODUCTAUTHORIZATION_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTAUTHORIZATION_STR_VALUES_RPS ON FHIRAPP.MEDICINALPRODUCTAUTHORIZATION_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

ALTER TABLE FHIRAPP.MEDICINALPRODUCTAUTHORIZATION_STR_VALUES ADD CONSTRAINT FK_MEDICINALPRODUCTAUTHORIZATION_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.MEDICINALPRODUCTAUTHORIZATION_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.MEDICINALPRODUCTAUTHORIZATION_STR_VALUES ADD CONSTRAINT FK_MEDICINALPRODUCTAUTHORIZATION_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.MEDICINALPRODUCTAUTHORIZATION_STR_VALUES_TENANT                      ON FHIRAPP.MEDICINALPRODUCTAUTHORIZATION_STR_VALUES          FOR ROWS WHERE FHIRAPP.MEDICINALPRODUCTAUTHORIZATION_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDICINALPRODUCTAUTHORIZATION_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDICINALPRODUCTAUTHORIZATION_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTAUTHORIZATION_TOKEN_VALUES_PNCSCV ON FHIRAPP.MEDICINALPRODUCTAUTHORIZATION_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTAUTHORIZATION_TOKEN_VALUES_RPS ON FHIRAPP.MEDICINALPRODUCTAUTHORIZATION_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

ALTER TABLE FHIRAPP.MEDICINALPRODUCTAUTHORIZATION_TOKEN_VALUES ADD CONSTRAINT FK_MEDICINALPRODUCTAUTHORIZATION_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

ALTER TABLE FHIRAPP.MEDICINALPRODUCTAUTHORIZATION_TOKEN_VALUES ADD CONSTRAINT FK_MEDICINALPRODUCTAUTHORIZATION_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.MEDICINALPRODUCTAUTHORIZATION_TOKEN_VALUES ADD CONSTRAINT FK_MEDICINALPRODUCTAUTHORIZATION_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.MEDICINALPRODUCTAUTHORIZATION_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.MEDICINALPRODUCTAUTHORIZATION_TOKEN_VALUES_TENANT                      ON FHIRAPP.MEDICINALPRODUCTAUTHORIZATION_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.MEDICINALPRODUCTAUTHORIZATION_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDICINALPRODUCTAUTHORIZATION_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDICINALPRODUCTAUTHORIZATION_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTAUTHORIZATION_DATE_VALUES_PVR ON FHIRAPP.MEDICINALPRODUCTAUTHORIZATION_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTAUTHORIZATION_DATE_VALUES_RPSE ON FHIRAPP.MEDICINALPRODUCTAUTHORIZATION_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTAUTHORIZATION_DATE_VALUES_PSER ON FHIRAPP.MEDICINALPRODUCTAUTHORIZATION_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTAUTHORIZATION_DATE_VALUES_RPV ON FHIRAPP.MEDICINALPRODUCTAUTHORIZATION_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTAUTHORIZATION_DATE_VALUES_PESR ON FHIRAPP.MEDICINALPRODUCTAUTHORIZATION_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.MEDICINALPRODUCTAUTHORIZATION_DATE_VALUES ADD CONSTRAINT FK_MEDICINALPRODUCTAUTHORIZATION_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.MEDICINALPRODUCTAUTHORIZATION_DATE_VALUES ADD CONSTRAINT FK_MEDICINALPRODUCTAUTHORIZATION_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.MEDICINALPRODUCTAUTHORIZATION_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.MEDICINALPRODUCTAUTHORIZATION_DATE_VALUES_TENANT                      ON FHIRAPP.MEDICINALPRODUCTAUTHORIZATION_DATE_VALUES          FOR ROWS WHERE FHIRAPP.MEDICINALPRODUCTAUTHORIZATION_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDICINALPRODUCTAUTHORIZATION_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDICINALPRODUCTAUTHORIZATION_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTAUTHORIZATION_NUMBER_VALUES_RPS ON FHIRAPP.MEDICINALPRODUCTAUTHORIZATION_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTAUTHORIZATION_NUMBER_VALUES_PNNV ON FHIRAPP.MEDICINALPRODUCTAUTHORIZATION_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.MEDICINALPRODUCTAUTHORIZATION_NUMBER_VALUES ADD CONSTRAINT FK_MEDICINALPRODUCTAUTHORIZATION_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.MEDICINALPRODUCTAUTHORIZATION_NUMBER_VALUES ADD CONSTRAINT FK_MEDICINALPRODUCTAUTHORIZATION_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.MEDICINALPRODUCTAUTHORIZATION_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.MEDICINALPRODUCTAUTHORIZATION_NUMBER_VALUES_TENANT                      ON FHIRAPP.MEDICINALPRODUCTAUTHORIZATION_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.MEDICINALPRODUCTAUTHORIZATION_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDICINALPRODUCTAUTHORIZATION_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDICINALPRODUCTAUTHORIZATION_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTAUTHORIZATION_LATLNG_VALUES_PNNLV ON FHIRAPP.MEDICINALPRODUCTAUTHORIZATION_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTAUTHORIZATION_LATLNG_VALUES_RPLNG ON FHIRAPP.MEDICINALPRODUCTAUTHORIZATION_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTAUTHORIZATION_LATLNG_VALUES_RPLAT ON FHIRAPP.MEDICINALPRODUCTAUTHORIZATION_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTAUTHORIZATION_LATLNG_VALUES_PNNHV ON FHIRAPP.MEDICINALPRODUCTAUTHORIZATION_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.MEDICINALPRODUCTAUTHORIZATION_LATLNG_VALUES ADD CONSTRAINT FK_MEDICINALPRODUCTAUTHORIZATION_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.MEDICINALPRODUCTAUTHORIZATION_LATLNG_VALUES ADD CONSTRAINT FK_MEDICINALPRODUCTAUTHORIZATION_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.MEDICINALPRODUCTAUTHORIZATION_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.MEDICINALPRODUCTAUTHORIZATION_LATLNG_VALUES_TENANT                      ON FHIRAPP.MEDICINALPRODUCTAUTHORIZATION_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.MEDICINALPRODUCTAUTHORIZATION_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDICINALPRODUCTAUTHORIZATION_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.MEDICINALPRODUCTAUTHORIZATION_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTAUTHORIZATION_QUANTITY_VALUES_RPCLHS ON FHIRAPP.MEDICINALPRODUCTAUTHORIZATION_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTAUTHORIZATION_QUANTITY_VALUES_PNNV ON FHIRAPP.MEDICINALPRODUCTAUTHORIZATION_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTAUTHORIZATION_QUANTITY_VALUES_PCLHSR ON FHIRAPP.MEDICINALPRODUCTAUTHORIZATION_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTAUTHORIZATION_QUANTITY_VALUES_RPCHLS ON FHIRAPP.MEDICINALPRODUCTAUTHORIZATION_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTAUTHORIZATION_QUANTITY_VALUES_RPS ON FHIRAPP.MEDICINALPRODUCTAUTHORIZATION_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_MEDICINALPRODUCTAUTHORIZATION_QUANTITY_VALUES_PCHLSR ON FHIRAPP.MEDICINALPRODUCTAUTHORIZATION_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.MEDICINALPRODUCTAUTHORIZATION_QUANTITY_VALUES ADD CONSTRAINT FK_MEDICINALPRODUCTAUTHORIZATION_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.MEDICINALPRODUCTAUTHORIZATION_QUANTITY_VALUES ADD CONSTRAINT FK_MEDICINALPRODUCTAUTHORIZATION_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.MEDICINALPRODUCTAUTHORIZATION_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.MEDICINALPRODUCTAUTHORIZATION_QUANTITY_VALUES_TENANT                      ON FHIRAPP.MEDICINALPRODUCTAUTHORIZATION_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.MEDICINALPRODUCTAUTHORIZATION_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.MEDICINALPRODUCTAUTHORIZATION_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.CLAIM_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT CLAIM_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.CLAIM_LOGICAL_RESOURCES ADD CONSTRAINT FK_CLAIM_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.CLAIM_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.CLAIM_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.CLAIM_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.CLAIM_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.CLAIM_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT CLAIM_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.CLAIM_RESOURCES_PRF_IN1 ON FHIRAPP.CLAIM_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.CLAIM_RESOURCES_TENANT                      ON FHIRAPP.CLAIM_RESOURCES          FOR ROWS WHERE FHIRAPP.CLAIM_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.CLAIM_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.CLAIM_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_CLAIM_STR_VALUES_RPL ON FHIRAPP.CLAIM_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

CREATE INDEX FHIRAPP.IDX_CLAIM_STR_VALUES_PSR ON FHIRAPP.CLAIM_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_CLAIM_STR_VALUES_RPS ON FHIRAPP.CLAIM_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

CREATE INDEX FHIRAPP.IDX_CLAIM_STR_VALUES_PLR ON FHIRAPP.CLAIM_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.CLAIM_STR_VALUES ADD CONSTRAINT FK_CLAIM_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.CLAIM_STR_VALUES ADD CONSTRAINT FK_CLAIM_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.CLAIM_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.CLAIM_STR_VALUES_TENANT                      ON FHIRAPP.CLAIM_STR_VALUES          FOR ROWS WHERE FHIRAPP.CLAIM_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.CLAIM_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.CLAIM_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_CLAIM_TOKEN_VALUES_PNCSCV ON FHIRAPP.CLAIM_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_CLAIM_TOKEN_VALUES_RPS ON FHIRAPP.CLAIM_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

ALTER TABLE FHIRAPP.CLAIM_TOKEN_VALUES ADD CONSTRAINT FK_CLAIM_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.CLAIM_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.CLAIM_TOKEN_VALUES ADD CONSTRAINT FK_CLAIM_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.CLAIM_TOKEN_VALUES ADD CONSTRAINT FK_CLAIM_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

CREATE PERMISSION FHIRAPP.CLAIM_TOKEN_VALUES_TENANT                      ON FHIRAPP.CLAIM_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.CLAIM_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.CLAIM_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.CLAIM_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_CLAIM_DATE_VALUES_PESR ON FHIRAPP.CLAIM_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_CLAIM_DATE_VALUES_PSER ON FHIRAPP.CLAIM_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_CLAIM_DATE_VALUES_RPV ON FHIRAPP.CLAIM_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

CREATE INDEX FHIRAPP.IDX_CLAIM_DATE_VALUES_RPSE ON FHIRAPP.CLAIM_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

CREATE INDEX FHIRAPP.IDX_CLAIM_DATE_VALUES_PVR ON FHIRAPP.CLAIM_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.CLAIM_DATE_VALUES ADD CONSTRAINT FK_CLAIM_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.CLAIM_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.CLAIM_DATE_VALUES ADD CONSTRAINT FK_CLAIM_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.CLAIM_DATE_VALUES_TENANT                      ON FHIRAPP.CLAIM_DATE_VALUES          FOR ROWS WHERE FHIRAPP.CLAIM_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.CLAIM_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.CLAIM_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_CLAIM_NUMBER_VALUES_RPS ON FHIRAPP.CLAIM_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

CREATE INDEX FHIRAPP.IDX_CLAIM_NUMBER_VALUES_PNNV ON FHIRAPP.CLAIM_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.CLAIM_NUMBER_VALUES ADD CONSTRAINT FK_CLAIM_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.CLAIM_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.CLAIM_NUMBER_VALUES ADD CONSTRAINT FK_CLAIM_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.CLAIM_NUMBER_VALUES_TENANT                      ON FHIRAPP.CLAIM_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.CLAIM_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.CLAIM_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.CLAIM_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_CLAIM_LATLNG_VALUES_PNNLV ON FHIRAPP.CLAIM_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_CLAIM_LATLNG_VALUES_RPLNG ON FHIRAPP.CLAIM_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_CLAIM_LATLNG_VALUES_PNNHV ON FHIRAPP.CLAIM_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_CLAIM_LATLNG_VALUES_RPLAT ON FHIRAPP.CLAIM_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

ALTER TABLE FHIRAPP.CLAIM_LATLNG_VALUES ADD CONSTRAINT FK_CLAIM_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.CLAIM_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.CLAIM_LATLNG_VALUES ADD CONSTRAINT FK_CLAIM_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.CLAIM_LATLNG_VALUES_TENANT                      ON FHIRAPP.CLAIM_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.CLAIM_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.CLAIM_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.CLAIM_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_CLAIM_QUANTITY_VALUES_PCLHSR ON FHIRAPP.CLAIM_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_CLAIM_QUANTITY_VALUES_RPCHLS ON FHIRAPP.CLAIM_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_CLAIM_QUANTITY_VALUES_RPS ON FHIRAPP.CLAIM_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_CLAIM_QUANTITY_VALUES_PNNV ON FHIRAPP.CLAIM_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_CLAIM_QUANTITY_VALUES_PCHLSR ON FHIRAPP.CLAIM_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_CLAIM_QUANTITY_VALUES_RPCLHS ON FHIRAPP.CLAIM_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

ALTER TABLE FHIRAPP.CLAIM_QUANTITY_VALUES ADD CONSTRAINT FK_CLAIM_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.CLAIM_QUANTITY_VALUES ADD CONSTRAINT FK_CLAIM_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.CLAIM_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.CLAIM_QUANTITY_VALUES_TENANT                      ON FHIRAPP.CLAIM_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.CLAIM_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.CLAIM_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.LOCATION_LOGICAL_RESOURCES(MT_ID INT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, LOGICAL_ID VARCHAR(255 OCTETS) NOT NULL, CURRENT_RESOURCE_ID BIGINT, CONSTRAINT LOCATION_LOGICAL_RESOURCES_PK PRIMARY KEY (MT_ID, LOGICAL_RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

ALTER TABLE FHIRAPP.LOCATION_LOGICAL_RESOURCES ADD CONSTRAINT FK_LOCATION_LOGICAL_RESOURCES_LRID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.LOCATION_LOGICAL_RESOURCES_TENANT                      ON FHIRAPP.LOCATION_LOGICAL_RESOURCES          FOR ROWS WHERE FHIRAPP.LOCATION_LOGICAL_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.LOCATION_LOGICAL_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.LOCATION_RESOURCES(MT_ID INT NOT NULL, RESOURCE_ID BIGINT NOT NULL, LOGICAL_RESOURCE_ID BIGINT NOT NULL, VERSION_ID INT NOT NULL, LAST_UPDATED TIMESTAMP NOT NULL, IS_DELETED CHAR(1) NOT NULL, DATA BLOB(2147483647) INLINE LENGTH 10240, TX_CORRELATION_ID VARCHAR(36 OCTETS), CHANGED_BY VARCHAR(64 OCTETS), CORRELATION_TOKEN VARCHAR(36 OCTETS), REASON VARCHAR(255 OCTETS), SERVICE_ID VARCHAR(32 OCTETS), CONSTRAINT LOCATION_RESOURCES_PK PRIMARY KEY (MT_ID, RESOURCE_ID)) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE UNIQUE INDEX FHIRAPP.LOCATION_RESOURCES_PRF_IN1 ON FHIRAPP.LOCATION_RESOURCES(MT_ID,RESOURCE_ID) INCLUDE (LOGICAL_RESOURCE_ID,VERSION_ID,IS_DELETED);

CREATE PERMISSION FHIRAPP.LOCATION_RESOURCES_TENANT                      ON FHIRAPP.LOCATION_RESOURCES          FOR ROWS WHERE FHIRAPP.LOCATION_RESOURCES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.LOCATION_RESOURCES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.LOCATION_STR_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, STR_VALUE VARCHAR(1024 OCTETS), STR_VALUE_LCASE VARCHAR(1024 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_LOCATION_STR_VALUES_RPS ON FHIRAPP.LOCATION_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE);

CREATE INDEX FHIRAPP.IDX_LOCATION_STR_VALUES_PLR ON FHIRAPP.LOCATION_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_LOCATION_STR_VALUES_PSR ON FHIRAPP.LOCATION_STR_VALUES(MT_ID,PARAMETER_NAME_ID,STR_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_LOCATION_STR_VALUES_RPL ON FHIRAPP.LOCATION_STR_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,STR_VALUE_LCASE);

ALTER TABLE FHIRAPP.LOCATION_STR_VALUES ADD CONSTRAINT FK_LOCATION_STR_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOCATION_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.LOCATION_STR_VALUES ADD CONSTRAINT FK_LOCATION_STR_VALUES_PNID FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

CREATE PERMISSION FHIRAPP.LOCATION_STR_VALUES_TENANT                      ON FHIRAPP.LOCATION_STR_VALUES          FOR ROWS WHERE FHIRAPP.LOCATION_STR_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.LOCATION_STR_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.LOCATION_TOKEN_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE_SYSTEM_ID INT NOT NULL, TOKEN_VALUE VARCHAR(511 OCTETS), LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_LOCATION_TOKEN_VALUES_PNCSCV ON FHIRAPP.LOCATION_TOKEN_VALUES(MT_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_LOCATION_TOKEN_VALUES_RPS ON FHIRAPP.LOCATION_TOKEN_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE_SYSTEM_ID,TOKEN_VALUE);

ALTER TABLE FHIRAPP.LOCATION_TOKEN_VALUES ADD CONSTRAINT FK_LOCATION_TOKEN_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOCATION_LOGICAL_RESOURCES;

ALTER TABLE FHIRAPP.LOCATION_TOKEN_VALUES ADD CONSTRAINT FK_LOCATION_TOKEN_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.LOCATION_TOKEN_VALUES ADD CONSTRAINT FK_LOCATION_TOKEN_VALUES_CS FOREIGN KEY(MT_ID,CODE_SYSTEM_ID) REFERENCES FHIRAPP.CODE_SYSTEMS;

CREATE PERMISSION FHIRAPP.LOCATION_TOKEN_VALUES_TENANT                      ON FHIRAPP.LOCATION_TOKEN_VALUES          FOR ROWS WHERE FHIRAPP.LOCATION_TOKEN_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.LOCATION_TOKEN_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.LOCATION_DATE_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, DATE_VALUE TIMESTAMP, DATE_START TIMESTAMP, DATE_END TIMESTAMP, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_LOCATION_DATE_VALUES_RPV ON FHIRAPP.LOCATION_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_VALUE);

CREATE INDEX FHIRAPP.IDX_LOCATION_DATE_VALUES_PSER ON FHIRAPP.LOCATION_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_START,DATE_END,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_LOCATION_DATE_VALUES_RPSE ON FHIRAPP.LOCATION_DATE_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,DATE_START,DATE_END);

CREATE INDEX FHIRAPP.IDX_LOCATION_DATE_VALUES_PVR ON FHIRAPP.LOCATION_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_LOCATION_DATE_VALUES_PESR ON FHIRAPP.LOCATION_DATE_VALUES(MT_ID,PARAMETER_NAME_ID,DATE_END,DATE_START,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.LOCATION_DATE_VALUES ADD CONSTRAINT FK_LOCATION_DATE_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.LOCATION_DATE_VALUES ADD CONSTRAINT FK_LOCATION_DATE_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOCATION_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.LOCATION_DATE_VALUES_TENANT                      ON FHIRAPP.LOCATION_DATE_VALUES          FOR ROWS WHERE FHIRAPP.LOCATION_DATE_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.LOCATION_DATE_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.LOCATION_NUMBER_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, NUMBER_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_LOCATION_NUMBER_VALUES_RPS ON FHIRAPP.LOCATION_NUMBER_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,NUMBER_VALUE);

CREATE INDEX FHIRAPP.IDX_LOCATION_NUMBER_VALUES_PNNV ON FHIRAPP.LOCATION_NUMBER_VALUES(MT_ID,PARAMETER_NAME_ID,NUMBER_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.LOCATION_NUMBER_VALUES ADD CONSTRAINT FK_LOCATION_NUMBER_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.LOCATION_NUMBER_VALUES ADD CONSTRAINT FK_LOCATION_NUMBER_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOCATION_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.LOCATION_NUMBER_VALUES_TENANT                      ON FHIRAPP.LOCATION_NUMBER_VALUES          FOR ROWS WHERE FHIRAPP.LOCATION_NUMBER_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.LOCATION_NUMBER_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.LOCATION_LATLNG_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, LATITUDE_VALUE DOUBLE, LONGITUDE_VALUE DOUBLE, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_LOCATION_LATLNG_VALUES_PNNLV ON FHIRAPP.LOCATION_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LATITUDE_VALUE,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_LOCATION_LATLNG_VALUES_RPLNG ON FHIRAPP.LOCATION_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_LOCATION_LATLNG_VALUES_RPLAT ON FHIRAPP.LOCATION_LATLNG_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,LATITUDE_VALUE);

CREATE INDEX FHIRAPP.IDX_LOCATION_LATLNG_VALUES_PNNHV ON FHIRAPP.LOCATION_LATLNG_VALUES(MT_ID,PARAMETER_NAME_ID,LONGITUDE_VALUE,LOGICAL_RESOURCE_ID);

ALTER TABLE FHIRAPP.LOCATION_LATLNG_VALUES ADD CONSTRAINT FK_LOCATION_LATLNG_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.LOCATION_LATLNG_VALUES ADD CONSTRAINT FK_LOCATION_LATLNG_VALUES_RID FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOCATION_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.LOCATION_LATLNG_VALUES_TENANT                      ON FHIRAPP.LOCATION_LATLNG_VALUES          FOR ROWS WHERE FHIRAPP.LOCATION_LATLNG_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.LOCATION_LATLNG_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE TABLE FHIRAPP.LOCATION_QUANTITY_VALUES(MT_ID INT NOT NULL, PARAMETER_NAME_ID INT NOT NULL, CODE VARCHAR(255 OCTETS) NOT NULL, QUANTITY_VALUE DOUBLE, QUANTITY_VALUE_LOW DOUBLE, QUANTITY_VALUE_HIGH DOUBLE, CODE_SYSTEM_ID INT, LOGICAL_RESOURCE_ID BIGINT NOT NULL) IN FHIR_TS PARTITION BY RANGE (MT_ID) (STARTING 0 INCLUSIVE    ENDING 0 INCLUSIVE );

CREATE INDEX FHIRAPP.IDX_LOCATION_QUANTITY_VALUES_PCHLSR ON FHIRAPP.LOCATION_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_LOCATION_QUANTITY_VALUES_RPS ON FHIRAPP.LOCATION_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_LOCATION_QUANTITY_VALUES_PCLHSR ON FHIRAPP.LOCATION_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID,LOGICAL_RESOURCE_ID);

CREATE INDEX FHIRAPP.IDX_LOCATION_QUANTITY_VALUES_RPCLHS ON FHIRAPP.LOCATION_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_LOW,QUANTITY_VALUE_HIGH,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_LOCATION_QUANTITY_VALUES_PNNV ON FHIRAPP.LOCATION_QUANTITY_VALUES(MT_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE,LOGICAL_RESOURCE_ID,CODE_SYSTEM_ID);

CREATE INDEX FHIRAPP.IDX_LOCATION_QUANTITY_VALUES_RPCHLS ON FHIRAPP.LOCATION_QUANTITY_VALUES(MT_ID,LOGICAL_RESOURCE_ID,PARAMETER_NAME_ID,CODE,QUANTITY_VALUE_HIGH,QUANTITY_VALUE_LOW,CODE_SYSTEM_ID);

ALTER TABLE FHIRAPP.LOCATION_QUANTITY_VALUES ADD CONSTRAINT FK_LOCATION_QUANTITY_VALUES_PN FOREIGN KEY(MT_ID,PARAMETER_NAME_ID) REFERENCES FHIRAPP.PARAMETER_NAMES;

ALTER TABLE FHIRAPP.LOCATION_QUANTITY_VALUES ADD CONSTRAINT FK_LOCATION_QUANTITY_VALUES_R FOREIGN KEY(MT_ID,LOGICAL_RESOURCE_ID) REFERENCES FHIRAPP.LOCATION_LOGICAL_RESOURCES;

CREATE PERMISSION FHIRAPP.LOCATION_QUANTITY_VALUES_TENANT                      ON FHIRAPP.LOCATION_QUANTITY_VALUES          FOR ROWS WHERE FHIRAPP.LOCATION_QUANTITY_VALUES.MT_ID = FHIRADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;

ALTER TABLE FHIRAPP.LOCATION_QUANTITY_VALUES ACTIVATE ROW ACCESS CONTROL;

CREATE OR REPLACE TYPE FHIRAPP.t_str_values AS ROW (PARAMETER_NAME_ID BIGINT,STR_VALUE VARCHAR(511 OCTETS),STR_VALUE_LCASE VARCHAR(511 OCTETS));

CREATE OR REPLACE TYPE FHIRAPP.t_str_values_arr AS FHIRAPP.t_str_values ARRAY[256];

CREATE OR REPLACE TYPE FHIRAPP.t_token_values AS ROW (PARAMETER_NAME_ID BIGINT,CODE_SYSTEM_ID INT,TOKEN_VALUE VARCHAR(255 OCTETS));

CREATE OR REPLACE TYPE FHIRAPP.t_token_values_arr AS FHIRAPP.t_token_values ARRAY[256];

CREATE OR REPLACE TYPE FHIRAPP.t_date_values AS ROW (PARAMETER_NAME_ID BIGINT,DATE_VALUE TIMESTAMP,DATE_START TIMESTAMP,DATE_END TIMESTAMP);

CREATE OR REPLACE TYPE FHIRAPP.t_date_values_arr AS FHIRAPP.t_date_values ARRAY[256];

CREATE OR REPLACE TYPE FHIRAPP.t_latlng_values AS ROW (PARAMETER_NAME_ID BIGINT,LATITUDE_VALUE DOUBLE,LONGITUDE_VALUE DOUBLE);

CREATE OR REPLACE TYPE FHIRAPP.t_latlng_values_arr AS FHIRAPP.t_latlng_values ARRAY[256];

CREATE OR REPLACE TYPE FHIRAPP.t_quantity_values AS ROW (PARAMETER_NAME_ID BIGINT,CODE VARCHAR(255 OCTETS),QUANTITY_VALUE DOUBLE,QUANTITY_VALUE_LOW DOUBLE,QUANTITY_VALUE_HIGH DOUBLE,CODE_SYSTEM_ID INT);

CREATE OR REPLACE TYPE FHIRAPP.t_quantity_values_arr AS FHIRAPP.t_quantity_values ARRAY[256];

CREATE OR REPLACE TYPE FHIRAPP.t_number_values AS ROW (PARAMETER_NAME_ID BIGINT,NUMBER_VALUE DOUBLE);

CREATE OR REPLACE TYPE FHIRAPP.t_number_values_arr AS FHIRAPP.t_number_values ARRAY[256];

GRANT USAGE ON SEQUENCE FHIRADMIN.TENANT_SEQUENCE TO FHIRUSER;

GRANT READ ON VARIABLE FHIRADMIN.SV_TENANT_ID TO FHIRUSER;

GRANT EXECUTE ON PROCEDURE FHIRADMIN.SET_TENANT TO FHIRUSER;

GRANT USAGE ON SEQUENCE FHIRAPP.FHIR_SEQUENCE TO FHIRUSER;

GRANT USAGE ON SEQUENCE FHIRAPP.FHIR_REF_SEQUENCE TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.PARAMETER_NAMES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.CODE_SYSTEMS TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.RESOURCE_TYPES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.APPOINTMENT_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.APPOINTMENT_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.APPOINTMENT_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.APPOINTMENT_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.APPOINTMENT_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.APPOINTMENT_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.APPOINTMENT_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.APPOINTMENT_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.ACCOUNT_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.ACCOUNT_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.ACCOUNT_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.ACCOUNT_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.ACCOUNT_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.ACCOUNT_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.ACCOUNT_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.ACCOUNT_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.DOMAINRESOURCE_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.DOMAINRESOURCE_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.DOMAINRESOURCE_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.DOMAINRESOURCE_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.DOMAINRESOURCE_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.DOMAINRESOURCE_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.DOMAINRESOURCE_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.DOMAINRESOURCE_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.INVOICE_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.INVOICE_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.INVOICE_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.INVOICE_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.INVOICE_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.INVOICE_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.INVOICE_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.INVOICE_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.CATALOGENTRY_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.CATALOGENTRY_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.CATALOGENTRY_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.CATALOGENTRY_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.CATALOGENTRY_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.CATALOGENTRY_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.CATALOGENTRY_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.CATALOGENTRY_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.EVENTDEFINITION_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.EVENTDEFINITION_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.EVENTDEFINITION_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.EVENTDEFINITION_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.EVENTDEFINITION_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.EVENTDEFINITION_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.EVENTDEFINITION_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.EVENTDEFINITION_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.DOCUMENTMANIFEST_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.DOCUMENTMANIFEST_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.DOCUMENTMANIFEST_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.DOCUMENTMANIFEST_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.DOCUMENTMANIFEST_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.DOCUMENTMANIFEST_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.DOCUMENTMANIFEST_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.DOCUMENTMANIFEST_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MESSAGEDEFINITION_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MESSAGEDEFINITION_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MESSAGEDEFINITION_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MESSAGEDEFINITION_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MESSAGEDEFINITION_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MESSAGEDEFINITION_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MESSAGEDEFINITION_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MESSAGEDEFINITION_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.GOAL_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.GOAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.GOAL_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.GOAL_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.GOAL_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.GOAL_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.GOAL_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.GOAL_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDICINALPRODUCTPACKAGED_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDICINALPRODUCTPACKAGED_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDICINALPRODUCTPACKAGED_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDICINALPRODUCTPACKAGED_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDICINALPRODUCTPACKAGED_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDICINALPRODUCTPACKAGED_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDICINALPRODUCTPACKAGED_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDICINALPRODUCTPACKAGED_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.ENDPOINT_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.ENDPOINT_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.ENDPOINT_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.ENDPOINT_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.ENDPOINT_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.ENDPOINT_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.ENDPOINT_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.ENDPOINT_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.ENROLLMENTREQUEST_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.ENROLLMENTREQUEST_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.ENROLLMENTREQUEST_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.ENROLLMENTREQUEST_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.ENROLLMENTREQUEST_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.ENROLLMENTREQUEST_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.ENROLLMENTREQUEST_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.ENROLLMENTREQUEST_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.CONSENT_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.CONSENT_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.CONSENT_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.CONSENT_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.CONSENT_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.CONSENT_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.CONSENT_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.CONSENT_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.CAPABILITYSTATEMENT_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.CAPABILITYSTATEMENT_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.CAPABILITYSTATEMENT_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.CAPABILITYSTATEMENT_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.CAPABILITYSTATEMENT_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.CAPABILITYSTATEMENT_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.CAPABILITYSTATEMENT_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.CAPABILITYSTATEMENT_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEASURE_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEASURE_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEASURE_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEASURE_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEASURE_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEASURE_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEASURE_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEASURE_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDICATION_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDICATION_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDICATION_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDICATION_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDICATION_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDICATION_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDICATION_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDICATION_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.RESEARCHSUBJECT_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.RESEARCHSUBJECT_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.RESEARCHSUBJECT_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.RESEARCHSUBJECT_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.RESEARCHSUBJECT_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.RESEARCHSUBJECT_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.RESEARCHSUBJECT_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.RESEARCHSUBJECT_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.SUBSCRIPTION_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.SUBSCRIPTION_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.SUBSCRIPTION_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.SUBSCRIPTION_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.SUBSCRIPTION_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.SUBSCRIPTION_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.SUBSCRIPTION_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.SUBSCRIPTION_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.DOCUMENTREFERENCE_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.DOCUMENTREFERENCE_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.DOCUMENTREFERENCE_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.DOCUMENTREFERENCE_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.DOCUMENTREFERENCE_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.DOCUMENTREFERENCE_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.DOCUMENTREFERENCE_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.DOCUMENTREFERENCE_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.GRAPHDEFINITION_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.GRAPHDEFINITION_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.GRAPHDEFINITION_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.GRAPHDEFINITION_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.GRAPHDEFINITION_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.GRAPHDEFINITION_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.GRAPHDEFINITION_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.GRAPHDEFINITION_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.PARAMETERS_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.PARAMETERS_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.PARAMETERS_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.PARAMETERS_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.PARAMETERS_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.PARAMETERS_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.PARAMETERS_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.PARAMETERS_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.COVERAGEELIGIBILITYRESPONSE_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.COVERAGEELIGIBILITYRESPONSE_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.COVERAGEELIGIBILITYRESPONSE_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.COVERAGEELIGIBILITYRESPONSE_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.COVERAGEELIGIBILITYRESPONSE_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.COVERAGEELIGIBILITYRESPONSE_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.COVERAGEELIGIBILITYRESPONSE_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.COVERAGEELIGIBILITYRESPONSE_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEASUREREPORT_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEASUREREPORT_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEASUREREPORT_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEASUREREPORT_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEASUREREPORT_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEASUREREPORT_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEASUREREPORT_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEASUREREPORT_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.PRACTITIONERROLE_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.PRACTITIONERROLE_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.PRACTITIONERROLE_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.PRACTITIONERROLE_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.PRACTITIONERROLE_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.PRACTITIONERROLE_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.PRACTITIONERROLE_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.PRACTITIONERROLE_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.SUBSTANCEREFERENCEINFORMATION_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.SUBSTANCEREFERENCEINFORMATION_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.SUBSTANCEREFERENCEINFORMATION_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.SUBSTANCEREFERENCEINFORMATION_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.SUBSTANCEREFERENCEINFORMATION_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.SUBSTANCEREFERENCEINFORMATION_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.SUBSTANCEREFERENCEINFORMATION_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.SUBSTANCEREFERENCEINFORMATION_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.RELATEDPERSON_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.RELATEDPERSON_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.RELATEDPERSON_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.RELATEDPERSON_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.RELATEDPERSON_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.RELATEDPERSON_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.RELATEDPERSON_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.RELATEDPERSON_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.SERVICEREQUEST_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.SERVICEREQUEST_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.SERVICEREQUEST_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.SERVICEREQUEST_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.SERVICEREQUEST_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.SERVICEREQUEST_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.SERVICEREQUEST_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.SERVICEREQUEST_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.SUPPLYREQUEST_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.SUPPLYREQUEST_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.SUPPLYREQUEST_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.SUPPLYREQUEST_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.SUPPLYREQUEST_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.SUPPLYREQUEST_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.SUPPLYREQUEST_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.SUPPLYREQUEST_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.PRACTITIONER_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.PRACTITIONER_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.PRACTITIONER_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.PRACTITIONER_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.PRACTITIONER_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.PRACTITIONER_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.PRACTITIONER_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.PRACTITIONER_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.VERIFICATIONRESULT_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.VERIFICATIONRESULT_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.VERIFICATIONRESULT_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.VERIFICATIONRESULT_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.VERIFICATIONRESULT_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.VERIFICATIONRESULT_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.VERIFICATIONRESULT_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.VERIFICATIONRESULT_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.SUBSTANCEPROTEIN_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.SUBSTANCEPROTEIN_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.SUBSTANCEPROTEIN_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.SUBSTANCEPROTEIN_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.SUBSTANCEPROTEIN_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.SUBSTANCEPROTEIN_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.SUBSTANCEPROTEIN_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.SUBSTANCEPROTEIN_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.BODYSTRUCTURE_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.BODYSTRUCTURE_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.BODYSTRUCTURE_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.BODYSTRUCTURE_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.BODYSTRUCTURE_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.BODYSTRUCTURE_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.BODYSTRUCTURE_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.BODYSTRUCTURE_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.SLOT_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.SLOT_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.SLOT_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.SLOT_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.SLOT_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.SLOT_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.SLOT_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.SLOT_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.CONTRACT_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.CONTRACT_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.CONTRACT_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.CONTRACT_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.CONTRACT_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.CONTRACT_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.CONTRACT_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.CONTRACT_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.PERSON_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.PERSON_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.PERSON_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.PERSON_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.PERSON_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.PERSON_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.PERSON_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.PERSON_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.RISKASSESSMENT_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.RISKASSESSMENT_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.RISKASSESSMENT_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.RISKASSESSMENT_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.RISKASSESSMENT_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.RISKASSESSMENT_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.RISKASSESSMENT_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.RISKASSESSMENT_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.GROUP_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.GROUP_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.GROUP_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.GROUP_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.GROUP_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.GROUP_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.GROUP_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.GROUP_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.PAYMENTNOTICE_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.PAYMENTNOTICE_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.PAYMENTNOTICE_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.PAYMENTNOTICE_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.PAYMENTNOTICE_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.PAYMENTNOTICE_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.PAYMENTNOTICE_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.PAYMENTNOTICE_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.RESEARCHDEFINITION_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.RESEARCHDEFINITION_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.RESEARCHDEFINITION_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.RESEARCHDEFINITION_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.RESEARCHDEFINITION_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.RESEARCHDEFINITION_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.RESEARCHDEFINITION_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.RESEARCHDEFINITION_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDICINALPRODUCTMANUFACTURED_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDICINALPRODUCTMANUFACTURED_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDICINALPRODUCTMANUFACTURED_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDICINALPRODUCTMANUFACTURED_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDICINALPRODUCTMANUFACTURED_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDICINALPRODUCTMANUFACTURED_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDICINALPRODUCTMANUFACTURED_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDICINALPRODUCTMANUFACTURED_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.ORGANIZATION_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.ORGANIZATION_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.ORGANIZATION_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.ORGANIZATION_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.ORGANIZATION_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.ORGANIZATION_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.ORGANIZATION_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.ORGANIZATION_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.CARETEAM_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.CARETEAM_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.CARETEAM_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.CARETEAM_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.CARETEAM_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.CARETEAM_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.CARETEAM_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.CARETEAM_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.IMPLEMENTATIONGUIDE_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.IMPLEMENTATIONGUIDE_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.IMPLEMENTATIONGUIDE_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.IMPLEMENTATIONGUIDE_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.IMPLEMENTATIONGUIDE_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.IMPLEMENTATIONGUIDE_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.IMPLEMENTATIONGUIDE_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.IMPLEMENTATIONGUIDE_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.IMAGINGSTUDY_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.IMAGINGSTUDY_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.IMAGINGSTUDY_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.IMAGINGSTUDY_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.IMAGINGSTUDY_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.IMAGINGSTUDY_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.IMAGINGSTUDY_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.IMAGINGSTUDY_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.FAMILYMEMBERHISTORY_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.FAMILYMEMBERHISTORY_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.FAMILYMEMBERHISTORY_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.FAMILYMEMBERHISTORY_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.FAMILYMEMBERHISTORY_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.FAMILYMEMBERHISTORY_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.FAMILYMEMBERHISTORY_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.FAMILYMEMBERHISTORY_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.CHARGEITEM_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.CHARGEITEM_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.CHARGEITEM_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.CHARGEITEM_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.CHARGEITEM_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.CHARGEITEM_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.CHARGEITEM_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.CHARGEITEM_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.RESEARCHELEMENTDEFINITION_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.RESEARCHELEMENTDEFINITION_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.RESEARCHELEMENTDEFINITION_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.RESEARCHELEMENTDEFINITION_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.RESEARCHELEMENTDEFINITION_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.RESEARCHELEMENTDEFINITION_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.RESEARCHELEMENTDEFINITION_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.RESEARCHELEMENTDEFINITION_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.OBSERVATIONDEFINITION_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.OBSERVATIONDEFINITION_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.OBSERVATIONDEFINITION_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.OBSERVATIONDEFINITION_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.OBSERVATIONDEFINITION_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.OBSERVATIONDEFINITION_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.OBSERVATIONDEFINITION_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.OBSERVATIONDEFINITION_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.ENCOUNTER_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.ENCOUNTER_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.ENCOUNTER_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.ENCOUNTER_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.ENCOUNTER_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.ENCOUNTER_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.ENCOUNTER_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.ENCOUNTER_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.SUBSTANCE_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.SUBSTANCE_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.SUBSTANCE_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.SUBSTANCE_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.SUBSTANCE_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.SUBSTANCE_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.SUBSTANCE_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.SUBSTANCE_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.SUBSTANCESPECIFICATION_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.SUBSTANCESPECIFICATION_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.SUBSTANCESPECIFICATION_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.SUBSTANCESPECIFICATION_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.SUBSTANCESPECIFICATION_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.SUBSTANCESPECIFICATION_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.SUBSTANCESPECIFICATION_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.SUBSTANCESPECIFICATION_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.SEARCHPARAMETER_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.SEARCHPARAMETER_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.SEARCHPARAMETER_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.SEARCHPARAMETER_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.SEARCHPARAMETER_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.SEARCHPARAMETER_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.SEARCHPARAMETER_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.SEARCHPARAMETER_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.ACTIVITYDEFINITION_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.ACTIVITYDEFINITION_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.ACTIVITYDEFINITION_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.ACTIVITYDEFINITION_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.ACTIVITYDEFINITION_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.ACTIVITYDEFINITION_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.ACTIVITYDEFINITION_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.ACTIVITYDEFINITION_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.COMMUNICATION_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.COMMUNICATION_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.COMMUNICATION_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.COMMUNICATION_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.COMMUNICATION_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.COMMUNICATION_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.COMMUNICATION_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.COMMUNICATION_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.INSURANCEPLAN_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.INSURANCEPLAN_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.INSURANCEPLAN_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.INSURANCEPLAN_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.INSURANCEPLAN_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.INSURANCEPLAN_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.INSURANCEPLAN_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.INSURANCEPLAN_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.LINKAGE_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.LINKAGE_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.LINKAGE_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.LINKAGE_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.LINKAGE_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.LINKAGE_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.LINKAGE_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.LINKAGE_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.SUBSTANCESOURCEMATERIAL_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.SUBSTANCESOURCEMATERIAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.SUBSTANCESOURCEMATERIAL_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.SUBSTANCESOURCEMATERIAL_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.SUBSTANCESOURCEMATERIAL_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.SUBSTANCESOURCEMATERIAL_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.SUBSTANCESOURCEMATERIAL_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.SUBSTANCESOURCEMATERIAL_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.IMMUNIZATIONEVALUATION_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.IMMUNIZATIONEVALUATION_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.IMMUNIZATIONEVALUATION_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.IMMUNIZATIONEVALUATION_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.IMMUNIZATIONEVALUATION_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.IMMUNIZATIONEVALUATION_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.IMMUNIZATIONEVALUATION_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.IMMUNIZATIONEVALUATION_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.DEVICEUSESTATEMENT_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.DEVICEUSESTATEMENT_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.DEVICEUSESTATEMENT_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.DEVICEUSESTATEMENT_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.DEVICEUSESTATEMENT_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.DEVICEUSESTATEMENT_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.DEVICEUSESTATEMENT_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.DEVICEUSESTATEMENT_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.REQUESTGROUP_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.REQUESTGROUP_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.REQUESTGROUP_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.REQUESTGROUP_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.REQUESTGROUP_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.REQUESTGROUP_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.REQUESTGROUP_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.REQUESTGROUP_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.DEVICEREQUEST_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.DEVICEREQUEST_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.DEVICEREQUEST_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.DEVICEREQUEST_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.DEVICEREQUEST_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.DEVICEREQUEST_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.DEVICEREQUEST_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.DEVICEREQUEST_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MESSAGEHEADER_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MESSAGEHEADER_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MESSAGEHEADER_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MESSAGEHEADER_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MESSAGEHEADER_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MESSAGEHEADER_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MESSAGEHEADER_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MESSAGEHEADER_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.IMMUNIZATIONRECOMMENDATION_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.IMMUNIZATIONRECOMMENDATION_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.IMMUNIZATIONRECOMMENDATION_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.IMMUNIZATIONRECOMMENDATION_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.IMMUNIZATIONRECOMMENDATION_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.IMMUNIZATIONRECOMMENDATION_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.IMMUNIZATIONRECOMMENDATION_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.IMMUNIZATIONRECOMMENDATION_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.PROVENANCE_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.PROVENANCE_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.PROVENANCE_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.PROVENANCE_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.PROVENANCE_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.PROVENANCE_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.PROVENANCE_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.PROVENANCE_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.TASK_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.TASK_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.TASK_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.TASK_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.TASK_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.TASK_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.TASK_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.TASK_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.QUESTIONNAIRE_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.QUESTIONNAIRE_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.QUESTIONNAIRE_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.QUESTIONNAIRE_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.QUESTIONNAIRE_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.QUESTIONNAIRE_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.QUESTIONNAIRE_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.QUESTIONNAIRE_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.EXPLANATIONOFBENEFIT_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.EXPLANATIONOFBENEFIT_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.EXPLANATIONOFBENEFIT_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.EXPLANATIONOFBENEFIT_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.EXPLANATIONOFBENEFIT_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.EXPLANATIONOFBENEFIT_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.EXPLANATIONOFBENEFIT_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.EXPLANATIONOFBENEFIT_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDICINALPRODUCTPHARMACEUTICAL_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDICINALPRODUCTPHARMACEUTICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDICINALPRODUCTPHARMACEUTICAL_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDICINALPRODUCTPHARMACEUTICAL_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDICINALPRODUCTPHARMACEUTICAL_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDICINALPRODUCTPHARMACEUTICAL_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDICINALPRODUCTPHARMACEUTICAL_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDICINALPRODUCTPHARMACEUTICAL_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.RESEARCHSTUDY_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.RESEARCHSTUDY_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.RESEARCHSTUDY_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.RESEARCHSTUDY_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.RESEARCHSTUDY_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.RESEARCHSTUDY_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.RESEARCHSTUDY_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.RESEARCHSTUDY_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.SPECIMEN_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.SPECIMEN_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.SPECIMEN_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.SPECIMEN_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.SPECIMEN_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.SPECIMEN_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.SPECIMEN_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.SPECIMEN_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.ALLERGYINTOLERANCE_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.ALLERGYINTOLERANCE_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.ALLERGYINTOLERANCE_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.ALLERGYINTOLERANCE_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.ALLERGYINTOLERANCE_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.ALLERGYINTOLERANCE_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.ALLERGYINTOLERANCE_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.ALLERGYINTOLERANCE_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.CAREPLAN_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.CAREPLAN_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.CAREPLAN_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.CAREPLAN_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.CAREPLAN_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.CAREPLAN_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.CAREPLAN_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.CAREPLAN_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.STRUCTUREDEFINITION_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.STRUCTUREDEFINITION_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.STRUCTUREDEFINITION_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.STRUCTUREDEFINITION_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.STRUCTUREDEFINITION_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.STRUCTUREDEFINITION_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.STRUCTUREDEFINITION_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.STRUCTUREDEFINITION_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.CHARGEITEMDEFINITION_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.CHARGEITEMDEFINITION_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.CHARGEITEMDEFINITION_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.CHARGEITEMDEFINITION_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.CHARGEITEMDEFINITION_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.CHARGEITEMDEFINITION_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.CHARGEITEMDEFINITION_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.CHARGEITEMDEFINITION_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.EPISODEOFCARE_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.EPISODEOFCARE_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.EPISODEOFCARE_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.EPISODEOFCARE_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.EPISODEOFCARE_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.EPISODEOFCARE_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.EPISODEOFCARE_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.EPISODEOFCARE_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.OPERATIONOUTCOME_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.OPERATIONOUTCOME_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.OPERATIONOUTCOME_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.OPERATIONOUTCOME_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.OPERATIONOUTCOME_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.OPERATIONOUTCOME_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.OPERATIONOUTCOME_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.OPERATIONOUTCOME_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.PROCEDURE_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.PROCEDURE_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.PROCEDURE_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.PROCEDURE_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.PROCEDURE_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.PROCEDURE_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.PROCEDURE_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.PROCEDURE_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.LIST_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.LIST_LOGICAL_RESOURCE_ITEMS TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.LIST_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.LIST_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.LIST_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.LIST_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.LIST_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.LIST_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.LIST_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.CONCEPTMAP_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.CONCEPTMAP_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.CONCEPTMAP_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.CONCEPTMAP_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.CONCEPTMAP_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.CONCEPTMAP_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.CONCEPTMAP_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.CONCEPTMAP_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.OPERATIONDEFINITION_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.OPERATIONDEFINITION_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.OPERATIONDEFINITION_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.OPERATIONDEFINITION_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.OPERATIONDEFINITION_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.OPERATIONDEFINITION_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.OPERATIONDEFINITION_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.OPERATIONDEFINITION_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.VALUESET_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.VALUESET_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.VALUESET_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.VALUESET_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.VALUESET_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.VALUESET_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.VALUESET_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.VALUESET_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.IMMUNIZATION_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.IMMUNIZATION_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.IMMUNIZATION_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.IMMUNIZATION_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.IMMUNIZATION_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.IMMUNIZATION_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.IMMUNIZATION_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.IMMUNIZATION_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDICATIONREQUEST_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDICATIONREQUEST_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDICATIONREQUEST_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDICATIONREQUEST_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDICATIONREQUEST_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDICATIONREQUEST_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDICATIONREQUEST_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDICATIONREQUEST_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.EFFECTEVIDENCESYNTHESIS_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.EFFECTEVIDENCESYNTHESIS_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.EFFECTEVIDENCESYNTHESIS_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.EFFECTEVIDENCESYNTHESIS_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.EFFECTEVIDENCESYNTHESIS_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.EFFECTEVIDENCESYNTHESIS_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.EFFECTEVIDENCESYNTHESIS_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.EFFECTEVIDENCESYNTHESIS_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.BIOLOGICALLYDERIVEDPRODUCT_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.BIOLOGICALLYDERIVEDPRODUCT_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.BIOLOGICALLYDERIVEDPRODUCT_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.BIOLOGICALLYDERIVEDPRODUCT_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.BIOLOGICALLYDERIVEDPRODUCT_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.BIOLOGICALLYDERIVEDPRODUCT_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.BIOLOGICALLYDERIVEDPRODUCT_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.BIOLOGICALLYDERIVEDPRODUCT_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.DEVICE_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.DEVICE_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.DEVICE_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.DEVICE_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.DEVICE_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.DEVICE_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.DEVICE_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.DEVICE_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.VISIONPRESCRIPTION_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.VISIONPRESCRIPTION_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.VISIONPRESCRIPTION_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.VISIONPRESCRIPTION_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.VISIONPRESCRIPTION_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.VISIONPRESCRIPTION_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.VISIONPRESCRIPTION_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.VISIONPRESCRIPTION_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDIA_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDIA_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDIA_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDIA_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDIA_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDIA_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDIA_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDIA_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDICINALPRODUCTCONTRAINDICATION_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDICINALPRODUCTCONTRAINDICATION_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDICINALPRODUCTCONTRAINDICATION_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDICINALPRODUCTCONTRAINDICATION_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDICINALPRODUCTCONTRAINDICATION_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDICINALPRODUCTCONTRAINDICATION_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDICINALPRODUCTCONTRAINDICATION_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDICINALPRODUCTCONTRAINDICATION_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.RESOURCE_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.RESOURCE_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.RESOURCE_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.RESOURCE_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.RESOURCE_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.RESOURCE_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.RESOURCE_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.RESOURCE_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.EVIDENCEVARIABLE_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.EVIDENCEVARIABLE_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.EVIDENCEVARIABLE_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.EVIDENCEVARIABLE_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.EVIDENCEVARIABLE_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.EVIDENCEVARIABLE_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.EVIDENCEVARIABLE_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.EVIDENCEVARIABLE_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MOLECULARSEQUENCE_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MOLECULARSEQUENCE_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MOLECULARSEQUENCE_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MOLECULARSEQUENCE_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MOLECULARSEQUENCE_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MOLECULARSEQUENCE_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MOLECULARSEQUENCE_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MOLECULARSEQUENCE_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDICINALPRODUCT_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDICINALPRODUCT_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDICINALPRODUCT_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDICINALPRODUCT_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDICINALPRODUCT_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDICINALPRODUCT_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDICINALPRODUCT_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDICINALPRODUCT_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.DEVICEMETRIC_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.DEVICEMETRIC_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.DEVICEMETRIC_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.DEVICEMETRIC_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.DEVICEMETRIC_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.DEVICEMETRIC_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.DEVICEMETRIC_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.DEVICEMETRIC_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.CODESYSTEM_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.CODESYSTEM_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.CODESYSTEM_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.CODESYSTEM_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.CODESYSTEM_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.CODESYSTEM_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.CODESYSTEM_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.CODESYSTEM_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.FLAG_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.FLAG_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.FLAG_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.FLAG_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.FLAG_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.FLAG_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.FLAG_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.FLAG_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.SUBSTANCENUCLEICACID_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.SUBSTANCENUCLEICACID_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.SUBSTANCENUCLEICACID_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.SUBSTANCENUCLEICACID_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.SUBSTANCENUCLEICACID_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.SUBSTANCENUCLEICACID_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.SUBSTANCENUCLEICACID_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.SUBSTANCENUCLEICACID_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.RISKEVIDENCESYNTHESIS_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.RISKEVIDENCESYNTHESIS_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.RISKEVIDENCESYNTHESIS_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.RISKEVIDENCESYNTHESIS_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.RISKEVIDENCESYNTHESIS_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.RISKEVIDENCESYNTHESIS_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.RISKEVIDENCESYNTHESIS_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.RISKEVIDENCESYNTHESIS_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.APPOINTMENTRESPONSE_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.APPOINTMENTRESPONSE_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.APPOINTMENTRESPONSE_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.APPOINTMENTRESPONSE_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.APPOINTMENTRESPONSE_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.APPOINTMENTRESPONSE_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.APPOINTMENTRESPONSE_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.APPOINTMENTRESPONSE_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.STRUCTUREMAP_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.STRUCTUREMAP_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.STRUCTUREMAP_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.STRUCTUREMAP_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.STRUCTUREMAP_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.STRUCTUREMAP_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.STRUCTUREMAP_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.STRUCTUREMAP_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.ADVERSEEVENT_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.ADVERSEEVENT_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.ADVERSEEVENT_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.ADVERSEEVENT_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.ADVERSEEVENT_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.ADVERSEEVENT_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.ADVERSEEVENT_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.ADVERSEEVENT_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.GUIDANCERESPONSE_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.GUIDANCERESPONSE_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.GUIDANCERESPONSE_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.GUIDANCERESPONSE_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.GUIDANCERESPONSE_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.GUIDANCERESPONSE_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.GUIDANCERESPONSE_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.GUIDANCERESPONSE_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.OBSERVATION_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.OBSERVATION_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.OBSERVATION_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.OBSERVATION_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.OBSERVATION_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.OBSERVATION_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.OBSERVATION_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.OBSERVATION_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDICATIONADMINISTRATION_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDICATIONADMINISTRATION_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDICATIONADMINISTRATION_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDICATIONADMINISTRATION_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDICATIONADMINISTRATION_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDICATIONADMINISTRATION_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDICATIONADMINISTRATION_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDICATIONADMINISTRATION_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.ENROLLMENTRESPONSE_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.ENROLLMENTRESPONSE_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.ENROLLMENTRESPONSE_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.ENROLLMENTRESPONSE_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.ENROLLMENTRESPONSE_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.ENROLLMENTRESPONSE_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.ENROLLMENTRESPONSE_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.ENROLLMENTRESPONSE_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.BINARY_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.BINARY_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.BINARY_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.BINARY_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.BINARY_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.BINARY_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.BINARY_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.BINARY_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.LIBRARY_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.LIBRARY_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.LIBRARY_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.LIBRARY_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.LIBRARY_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.LIBRARY_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.LIBRARY_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.LIBRARY_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDICINALPRODUCTINTERACTION_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDICINALPRODUCTINTERACTION_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDICINALPRODUCTINTERACTION_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDICINALPRODUCTINTERACTION_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDICINALPRODUCTINTERACTION_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDICINALPRODUCTINTERACTION_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDICINALPRODUCTINTERACTION_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDICINALPRODUCTINTERACTION_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDICATIONSTATEMENT_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDICATIONSTATEMENT_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDICATIONSTATEMENT_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDICATIONSTATEMENT_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDICATIONSTATEMENT_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDICATIONSTATEMENT_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDICATIONSTATEMENT_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDICATIONSTATEMENT_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.COMMUNICATIONREQUEST_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.COMMUNICATIONREQUEST_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.COMMUNICATIONREQUEST_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.COMMUNICATIONREQUEST_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.COMMUNICATIONREQUEST_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.COMMUNICATIONREQUEST_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.COMMUNICATIONREQUEST_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.COMMUNICATIONREQUEST_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.TESTSCRIPT_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.TESTSCRIPT_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.TESTSCRIPT_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.TESTSCRIPT_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.TESTSCRIPT_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.TESTSCRIPT_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.TESTSCRIPT_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.TESTSCRIPT_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.BASIC_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.BASIC_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.BASIC_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.BASIC_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.BASIC_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.BASIC_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.BASIC_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.BASIC_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.SUBSTANCEPOLYMER_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.SUBSTANCEPOLYMER_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.SUBSTANCEPOLYMER_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.SUBSTANCEPOLYMER_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.SUBSTANCEPOLYMER_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.SUBSTANCEPOLYMER_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.SUBSTANCEPOLYMER_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.SUBSTANCEPOLYMER_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.TESTREPORT_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.TESTREPORT_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.TESTREPORT_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.TESTREPORT_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.TESTREPORT_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.TESTREPORT_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.TESTREPORT_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.TESTREPORT_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.CLAIMRESPONSE_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.CLAIMRESPONSE_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.CLAIMRESPONSE_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.CLAIMRESPONSE_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.CLAIMRESPONSE_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.CLAIMRESPONSE_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.CLAIMRESPONSE_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.CLAIMRESPONSE_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDICATIONDISPENSE_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDICATIONDISPENSE_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDICATIONDISPENSE_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDICATIONDISPENSE_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDICATIONDISPENSE_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDICATIONDISPENSE_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDICATIONDISPENSE_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDICATIONDISPENSE_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.DIAGNOSTICREPORT_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.DIAGNOSTICREPORT_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.DIAGNOSTICREPORT_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.DIAGNOSTICREPORT_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.DIAGNOSTICREPORT_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.DIAGNOSTICREPORT_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.DIAGNOSTICREPORT_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.DIAGNOSTICREPORT_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.ORGANIZATIONAFFILIATION_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.ORGANIZATIONAFFILIATION_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.ORGANIZATIONAFFILIATION_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.ORGANIZATIONAFFILIATION_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.ORGANIZATIONAFFILIATION_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.ORGANIZATIONAFFILIATION_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.ORGANIZATIONAFFILIATION_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.ORGANIZATIONAFFILIATION_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.HEALTHCARESERVICE_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.HEALTHCARESERVICE_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.HEALTHCARESERVICE_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.HEALTHCARESERVICE_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.HEALTHCARESERVICE_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.HEALTHCARESERVICE_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.HEALTHCARESERVICE_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.HEALTHCARESERVICE_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDICINALPRODUCTINDICATION_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDICINALPRODUCTINDICATION_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDICINALPRODUCTINDICATION_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDICINALPRODUCTINDICATION_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDICINALPRODUCTINDICATION_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDICINALPRODUCTINDICATION_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDICINALPRODUCTINDICATION_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDICINALPRODUCTINDICATION_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.NUTRITIONORDER_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.NUTRITIONORDER_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.NUTRITIONORDER_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.NUTRITIONORDER_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.NUTRITIONORDER_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.NUTRITIONORDER_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.NUTRITIONORDER_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.NUTRITIONORDER_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.TERMINOLOGYCAPABILITIES_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.TERMINOLOGYCAPABILITIES_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.TERMINOLOGYCAPABILITIES_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.TERMINOLOGYCAPABILITIES_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.TERMINOLOGYCAPABILITIES_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.TERMINOLOGYCAPABILITIES_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.TERMINOLOGYCAPABILITIES_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.TERMINOLOGYCAPABILITIES_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.EVIDENCE_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.EVIDENCE_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.EVIDENCE_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.EVIDENCE_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.EVIDENCE_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.EVIDENCE_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.EVIDENCE_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.EVIDENCE_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.AUDITEVENT_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.AUDITEVENT_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.AUDITEVENT_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.AUDITEVENT_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.AUDITEVENT_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.AUDITEVENT_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.AUDITEVENT_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.AUDITEVENT_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.PAYMENTRECONCILIATION_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.PAYMENTRECONCILIATION_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.PAYMENTRECONCILIATION_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.PAYMENTRECONCILIATION_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.PAYMENTRECONCILIATION_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.PAYMENTRECONCILIATION_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.PAYMENTRECONCILIATION_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.PAYMENTRECONCILIATION_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.CONDITION_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.CONDITION_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.CONDITION_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.CONDITION_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.CONDITION_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.CONDITION_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.CONDITION_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.CONDITION_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.SPECIMENDEFINITION_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.SPECIMENDEFINITION_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.SPECIMENDEFINITION_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.SPECIMENDEFINITION_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.SPECIMENDEFINITION_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.SPECIMENDEFINITION_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.SPECIMENDEFINITION_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.SPECIMENDEFINITION_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.COMPOSITION_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.COMPOSITION_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.COMPOSITION_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.COMPOSITION_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.COMPOSITION_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.COMPOSITION_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.COMPOSITION_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.COMPOSITION_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.DETECTEDISSUE_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.DETECTEDISSUE_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.DETECTEDISSUE_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.DETECTEDISSUE_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.DETECTEDISSUE_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.DETECTEDISSUE_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.DETECTEDISSUE_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.DETECTEDISSUE_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.BUNDLE_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.BUNDLE_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.BUNDLE_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.BUNDLE_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.BUNDLE_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.BUNDLE_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.BUNDLE_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.BUNDLE_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.COMPARTMENTDEFINITION_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.COMPARTMENTDEFINITION_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.COMPARTMENTDEFINITION_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.COMPARTMENTDEFINITION_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.COMPARTMENTDEFINITION_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.COMPARTMENTDEFINITION_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.COMPARTMENTDEFINITION_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.COMPARTMENTDEFINITION_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDICATIONKNOWLEDGE_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDICATIONKNOWLEDGE_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDICATIONKNOWLEDGE_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDICATIONKNOWLEDGE_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDICATIONKNOWLEDGE_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDICATIONKNOWLEDGE_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDICATIONKNOWLEDGE_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDICATIONKNOWLEDGE_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDICINALPRODUCTINGREDIENT_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDICINALPRODUCTINGREDIENT_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDICINALPRODUCTINGREDIENT_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDICINALPRODUCTINGREDIENT_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDICINALPRODUCTINGREDIENT_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDICINALPRODUCTINGREDIENT_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDICINALPRODUCTINGREDIENT_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDICINALPRODUCTINGREDIENT_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.PATIENT_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.PATIENT_CURRENT_REFS TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.PATIENT_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.PATIENT_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.PATIENT_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.PATIENT_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.PATIENT_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.PATIENT_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.PATIENT_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.COVERAGE_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.COVERAGE_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.COVERAGE_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.COVERAGE_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.COVERAGE_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.COVERAGE_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.COVERAGE_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.COVERAGE_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.QUESTIONNAIRERESPONSE_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.QUESTIONNAIRERESPONSE_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.QUESTIONNAIRERESPONSE_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.QUESTIONNAIRERESPONSE_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.QUESTIONNAIRERESPONSE_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.QUESTIONNAIRERESPONSE_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.QUESTIONNAIRERESPONSE_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.QUESTIONNAIRERESPONSE_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.COVERAGEELIGIBILITYREQUEST_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.COVERAGEELIGIBILITYREQUEST_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.COVERAGEELIGIBILITYREQUEST_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.COVERAGEELIGIBILITYREQUEST_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.COVERAGEELIGIBILITYREQUEST_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.COVERAGEELIGIBILITYREQUEST_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.COVERAGEELIGIBILITYREQUEST_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.COVERAGEELIGIBILITYREQUEST_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.NAMINGSYSTEM_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.NAMINGSYSTEM_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.NAMINGSYSTEM_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.NAMINGSYSTEM_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.NAMINGSYSTEM_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.NAMINGSYSTEM_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.NAMINGSYSTEM_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.NAMINGSYSTEM_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDICINALPRODUCTUNDESIRABLEEFFECT_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDICINALPRODUCTUNDESIRABLEEFFECT_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDICINALPRODUCTUNDESIRABLEEFFECT_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDICINALPRODUCTUNDESIRABLEEFFECT_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDICINALPRODUCTUNDESIRABLEEFFECT_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDICINALPRODUCTUNDESIRABLEEFFECT_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDICINALPRODUCTUNDESIRABLEEFFECT_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDICINALPRODUCTUNDESIRABLEEFFECT_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.EXAMPLESCENARIO_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.EXAMPLESCENARIO_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.EXAMPLESCENARIO_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.EXAMPLESCENARIO_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.EXAMPLESCENARIO_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.EXAMPLESCENARIO_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.EXAMPLESCENARIO_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.EXAMPLESCENARIO_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.SCHEDULE_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.SCHEDULE_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.SCHEDULE_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.SCHEDULE_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.SCHEDULE_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.SCHEDULE_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.SCHEDULE_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.SCHEDULE_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.SUPPLYDELIVERY_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.SUPPLYDELIVERY_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.SUPPLYDELIVERY_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.SUPPLYDELIVERY_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.SUPPLYDELIVERY_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.SUPPLYDELIVERY_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.SUPPLYDELIVERY_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.SUPPLYDELIVERY_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.CLINICALIMPRESSION_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.CLINICALIMPRESSION_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.CLINICALIMPRESSION_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.CLINICALIMPRESSION_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.CLINICALIMPRESSION_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.CLINICALIMPRESSION_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.CLINICALIMPRESSION_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.CLINICALIMPRESSION_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.DEVICEDEFINITION_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.DEVICEDEFINITION_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.DEVICEDEFINITION_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.DEVICEDEFINITION_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.DEVICEDEFINITION_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.DEVICEDEFINITION_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.DEVICEDEFINITION_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.DEVICEDEFINITION_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.PLANDEFINITION_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.PLANDEFINITION_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.PLANDEFINITION_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.PLANDEFINITION_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.PLANDEFINITION_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.PLANDEFINITION_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.PLANDEFINITION_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.PLANDEFINITION_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDICINALPRODUCTAUTHORIZATION_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDICINALPRODUCTAUTHORIZATION_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDICINALPRODUCTAUTHORIZATION_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDICINALPRODUCTAUTHORIZATION_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDICINALPRODUCTAUTHORIZATION_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDICINALPRODUCTAUTHORIZATION_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDICINALPRODUCTAUTHORIZATION_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.MEDICINALPRODUCTAUTHORIZATION_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.CLAIM_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.CLAIM_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.CLAIM_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.CLAIM_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.CLAIM_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.CLAIM_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.CLAIM_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.CLAIM_QUANTITY_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.LOCATION_LOGICAL_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.LOCATION_RESOURCES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.LOCATION_STR_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.LOCATION_TOKEN_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.LOCATION_DATE_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.LOCATION_NUMBER_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.LOCATION_LATLNG_VALUES TO FHIRUSER;

GRANT SELECT,UPDATE,DELETE,INSERT ON FHIRAPP.LOCATION_QUANTITY_VALUES TO FHIRUSER;

GRANT EXECUTE ON PROCEDURE FHIRAPP.ADD_CODE_SYSTEM TO FHIRUSER;

GRANT EXECUTE ON PROCEDURE FHIRAPP.ADD_PARAMETER_NAME TO FHIRUSER;

GRANT EXECUTE ON PROCEDURE FHIRAPP.ADD_RESOURCE_TYPE TO FHIRUSER;

GRANT EXECUTE ON PROCEDURE FHIRAPP.ADD_ANY_RESOURCE TO FHIRUSER;

